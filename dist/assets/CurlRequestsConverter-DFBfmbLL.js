import{r as j,j as e}from"./vendor-E1qkQgBK.js";import{B as p}from"./Button-S8-yJkDU.js";import{S as w}from"./Select-BKMIeGih.js";import{T as g}from"./TextArea-BoVf9nms.js";import{T as N}from"./ToolSection-D3WFVMtC.js";import{c as y}from"./clipboard-4Xj0hnU0.js";import{u as R}from"./index-T0krPfu9.js";import{u as L}from"./usePersistentState-C9LP9LsX.js";import"./format-parsers-Cy82sy8R.js";import"./mermaid-qV9g4jTJ.js";const O=i=>{const s=[],r=/"([^"\\]*(?:\\.[^"\\]*)*)"|'([^'\\]*(?:\\.[^'\\]*)*)'|(\S+)/g;let t;for(;(t=r.exec(i))!==null;)t[1]!==void 0?s.push(t[1].replace(/\\"/g,'"')):t[2]!==void 0?s.push(t[2].replace(/\\'/g,"'")):t[3]!==void 0&&s.push(t[3]);return s},P=i=>{if(typeof i!="string")return!1;const s=i.trim();if(!s.startsWith("{")&&!s.startsWith("["))return!1;try{return JSON.parse(s),!0}catch{return!1}},U=i=>{if(!i||!i.trim())throw new Error("请输入有效的 cURL 命令");const s=O(i);if(!s.length||s[0]!=="curl")throw new Error("命令必须以 curl 开头");const r={method:"GET",url:"",headers:{},data:void 0,json:void 0,timeout:void 0};let t=1;for(;t<s.length;){const a=s[t];switch(a){case"-X":case"--request":r.method=s[t+1]?s[t+1].toUpperCase():r.method,t+=2;break;case"-H":case"--header":{const n=s[t+1];if(n&&n.includes(":")){const[l,...o]=n.split(":");r.headers[l.trim()]=o.join(":").trim()}t+=2;break}case"-d":case"--data":case"--data-raw":case"--data-binary":case"--data-ascii":{const n=s[t+1]||"";P(n)?(r.json=JSON.parse(n),r.method=r.method==="GET"?"POST":r.method):(r.data=n,r.method=r.method==="GET"?"POST":r.method),t+=2;break}case"--url":r.url=s[t+1]||r.url,t+=2;break;case"--compressed":case"-L":case"--insecure":t+=1;break;default:!a.startsWith("-")&&!r.url&&(r.url=a),t+=1;break}}if(!r.url)throw new Error("无法解析 URL，请确认命令格式");return r.method||(r.method=r.data||r.json?"POST":"GET"),r},J=({method:i,url:s,headers:r={},data:t,json:a})=>{if(!s)throw new Error("缺少 URL");const n=["import requests","",`url = "${s}"`];a?n.push("payload = "+JSON.stringify(a,null,2)):t!==void 0&&n.push(typeof t=="string"?`payload = ${JSON.stringify(t)}`:`payload = ${JSON.stringify(t,null,2)}`),r&&Object.keys(r).length&&n.push("headers = "+JSON.stringify(r,null,2));const l=["response = requests.request("];return l.push(`"${(i||"GET").toUpperCase()}"`),l.push(", url"),r&&Object.keys(r).length&&l.push(", headers=headers"),a?l.push(", json=payload"):t!==void 0&&l.push(", data=payload"),l.push(")"),n.push(l.join("")),n.push("","print(response.text)"),n.join(`
`)},q=(i,s)=>{const r=new RegExp(`${s}\\s*=\\s*({[\\s\\S]*?})`),t=i.match(r);if(!t)return;const a=t[1];try{const n=a.replace(/(['\"])?([a-zA-Z0-9_]+)(['\"])?\s*:/g,'"$2":').replace(/'/g,'"');return JSON.parse(n)}catch{return}},C=(i,s)=>{const r=new RegExp(`${s}\\s*=\\s*([^
]+)`),t=i.match(r);if(!t)return;const a=t[1].trim();if(a.startsWith("{")||a.startsWith("["))try{const n=a.replace(/(['\"])?([a-zA-Z0-9_]+)(['\"])?\s*:/g,'"$2":').replace(/'/g,'"');return JSON.parse(n)}catch{return a}return a.startsWith('"')&&a.endsWith('"')||a.startsWith("'")&&a.endsWith("'")?a.slice(1,-1):a},W=i=>{if(!i||!i.trim())throw new Error("请输入 Python requests 代码");const s={method:"GET",url:"",headers:{},data:void 0,json:void 0},r=i.match(/requests\.(get|post|put|delete|patch|head|options)\s*\(/i);if(r){s.method=r[1].toUpperCase();const o=i.slice(r.index).match(/\(([^)]*)\)/);if(o&&o[1]){const h=o[1].split(",");if(h.length){const u=h[0].trim();(u.startsWith('"')&&u.endsWith('"')||u.startsWith("'")&&u.endsWith("'"))&&(s.url=u.slice(1,-1))}}}else{const o=i.match(/requests\.request\s*\(\s*['\"](\w+)['\"]\s*,\s*['\"]([^'\"]+)['\"]/i);o&&(s.method=o[1].toUpperCase(),s.url=o[2])}const t=i.match(/url\s*=\s*['\"]([^'\"]+)['\"]/i);t&&(s.url=t[1]);const a=q(i,"headers");a&&(s.headers=a);const n=q(i,"json")||C(i,"json");n!==void 0&&(s.json=n);const l=C(i,"data");if(l!==void 0&&(s.data=l),!s.url)throw new Error("无法解析 URL，请检查代码格式");return s},$=({method:i,url:s,headers:r={},data:t,json:a})=>{if(!s)throw new Error("缺少 URL");const n=["curl"],l=(i||"GET").toUpperCase();if(l&&l!=="GET"&&n.push("-X",l),n.push(s.includes(" ")?`'${s}'`:s),Object.entries(r).forEach(([o,h])=>{n.push("-H"),n.push(`'${o}: ${h}'`)}),a!==void 0){const o=typeof a=="string"?a:JSON.stringify(a);n.push("--data"),n.push(`'${o.replace(/'/g,"'''")}'`)}else if(t!==void 0){const o=typeof t=="string"?t:JSON.stringify(t);n.push("--data"),n.push(`'${o.replace(/'/g,"'''")}'`)}return n.join(" ")},T=`curl https://api.example.com/users -H 'Authorization: Bearer token' --data '{"name":"Alice"}'`,k=`import requests

url = "https://api.example.com/users"
headers = {
  "Authorization": "Bearer token"
}
payload = {
  "name": "Alice"
}

response = requests.post(url, headers=headers, json=payload)
print(response.text)`,_=()=>{const[i,s,r]=L("tool:curl-requests",()=>({curlInput:T,requestsInput:k,defaultMethod:"GET"})),{curlInput:t,requestsInput:a,defaultMethod:n}=i,[l,o]=j.useState(""),{t:h,locale:u}=R(),f=t.trim().length>0,x=a.trim().length>0,E=()=>{try{const c=U(t),d=J(c);s(m=>({...m,requestsInput:d})),o("")}catch(c){o(h(c.message))}},S=()=>{try{const c=W(a);!c.method&&n&&(c.method=n);const d=$(c);s(m=>({...m,curlInput:d})),o("")}catch(c){o(h(c.message))}},v=()=>{r(),o("")},b=j.useCallback(c=>{s(d=>({...d,defaultMethod:c}))},[s]);return e.jsx("div",{className:"space-y-6",children:e.jsxs(N,{title:"cURL ↔ Python requests 转换",description:"在 cURL 命令与 Python requests 示例代码之间快速互转，方便调试 HTTP 接口。",actions:e.jsxs("div",{className:"flex flex-wrap items-center gap-2",children:[e.jsx(p,{onClick:E,disabled:!f,children:"cURL → requests"}),e.jsx(p,{variant:"secondary",onClick:S,disabled:!x,children:"requests → cURL"}),e.jsxs(w,{value:n,onChange:c=>b(c.target.value),className:"w-36",children:[e.jsx("option",{value:"GET",children:"默认 GET"}),e.jsx("option",{value:"POST",children:"默认 POST"}),e.jsx("option",{value:"PUT",children:"默认 PUT"}),e.jsx("option",{value:"DELETE",children:"默认 DELETE"})]}),e.jsx(p,{variant:"ghost",onClick:v,children:"清空"})]}),children:[e.jsxs("div",{className:"grid gap-6 lg:grid-cols-2",children:[e.jsxs("div",{children:[e.jsx("h3",{className:"text-sm font-medium text-slate-600 dark:text-slate-300",children:"cURL"}),e.jsx(g,{className:"mt-2 h-64 font-mono",placeholder:`curl https://api.example.com/users -X POST -H 'Content-Type: application/json' --data '{"name":"Alice"}'`,value:t,onChange:c=>s(d=>({...d,curlInput:c.target.value}))}),e.jsxs("div",{className:"mt-2 flex gap-2",children:[e.jsx(p,{variant:"secondary",onClick:()=>y(t),disabled:!f,children:"复制"}),e.jsx(p,{variant:"ghost",onClick:()=>setCurlInput(T),children:"载入示例"})]})]}),e.jsxs("div",{children:[e.jsx("h3",{className:"text-sm font-medium text-slate-600 dark:text-slate-300",children:"Python requests"}),e.jsx(g,{className:"mt-2 h-64 font-mono",placeholder:"requests.post('https://api.example.com/users', headers={'Content-Type': 'application/json'}, json={'name': 'Alice'})",value:a,onChange:c=>s(d=>({...d,requestsInput:c.target.value}))}),e.jsxs("div",{className:"mt-2 flex gap-2",children:[e.jsx(p,{variant:"secondary",onClick:()=>y(a),disabled:!x,children:"复制"}),e.jsx(p,{variant:"ghost",onClick:()=>setRequestsInput(k),children:"载入示例"})]})]})]}),l?e.jsx("p",{className:"mt-4 text-sm text-red-500",children:l}):null,e.jsx(G,{locale:u})]})})},G=({locale:i})=>{const s=i==="en",r=s?[e.jsxs(e.Fragment,{children:["Detects common cURL flags such as ",e.jsx("code",{children:"-X"}),"/",e.jsx("code",{children:"--request"}),", ",e.jsx("code",{children:"-H"}),", ",e.jsx("code",{children:"--data"}),", and",e.jsx("code",{children:"--data-raw"}),"."]}),e.jsxs(e.Fragment,{children:["Maps JSON payloads to the ",e.jsx("code",{children:"json="})," argument automatically; other payloads use ",e.jsx("code",{children:"data="}),"."]}),e.jsxs(e.Fragment,{children:["Parses ",e.jsx("code",{children:"headers"}),", ",e.jsx("code",{children:"json"}),", and ",e.jsx("code",{children:"data"})," variables in requests code to rebuild the cURL command."]}),e.jsx(e.Fragment,{children:"If parsing fails, tweak the input manually and convert again."})]:[e.jsxs(e.Fragment,{children:["识别常见 cURL 参数：",e.jsx("code",{children:"-X"}),"/",e.jsx("code",{children:"--request"}),"、",e.jsx("code",{children:"-H"}),"、",e.jsx("code",{children:"--data"}),"、",e.jsx("code",{children:"--data-raw"})," ","等。"]}),e.jsxs(e.Fragment,{children:["自动映射 JSON 负载为 ",e.jsx("code",{children:"json="})," 参数，其他内容使用 ",e.jsx("code",{children:"data="}),"。"]}),e.jsxs(e.Fragment,{children:["解析 requests 中的 ",e.jsx("code",{children:"headers"}),"、",e.jsx("code",{children:"json"}),"、",e.jsx("code",{children:"data"})," 变量，尽量还原为 cURL。"]}),e.jsx(e.Fragment,{children:"若自动解析失败，可手动调整输入后再次转换。"})];return e.jsxs("div",{className:"mt-6 rounded-lg border border-slate-200 bg-slate-50 px-4 py-3 text-xs leading-relaxed text-slate-500 dark:border-slate-800 dark:bg-slate-900 dark:text-slate-300",children:[e.jsx("p",{className:"font-semibold text-slate-600 dark:text-slate-200",children:s?"Supported features:":"支持特性："}),e.jsx("ul",{className:"mt-2 list-disc space-y-2 pl-5",children:r.map((t,a)=>e.jsx("li",{children:t},a))})]})};export{_ as default};
