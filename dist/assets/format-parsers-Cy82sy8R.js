var L_=Object.defineProperty;var u_=(t,e,E)=>e in t?L_(t,e,{enumerable:!0,configurable:!0,writable:!0,value:E}):t[e]=E;var W=(t,e,E)=>u_(t,typeof e!="symbol"?e+"":e,E);import{n as C_}from"./vendor-E1qkQgBK.js";var WL=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function c_(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function vL(t){if(Object.prototype.hasOwnProperty.call(t,"__esModule"))return t;var e=t.default;if(typeof e=="function"){var E=function s(){var T=!1;try{T=this instanceof s}catch{}return T?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};E.prototype=e.prototype}else E={};return Object.defineProperty(E,"__esModule",{value:!0}),Object.keys(t).forEach(function(s){var T=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(E,s,T.get?T:{enumerable:!0,get:function(){return t[s]}})}),E}const b=SyntaxError,ee=RangeError,V=TypeError,te=Error,re=void 0,Fe=typeof BigInt=="undefined"?re:BigInt,un=RegExp,Cn=WeakMap,qr=WeakMap.prototype.get,jr=WeakMap.prototype.set,he=Object.create,Dt=Number.isSafeInteger,me=Object.getOwnPropertyNames,De=Object.freeze,Zr=Object.prototype.isPrototypeOf,Ne=Object.seal?Object.preventExtensions(Object.create(null)):null,Ft=Function.prototype.bind,Ei=RegExp.prototype.test,si=RegExp.prototype.exec,cn=Reflect.apply,VT=Proxy,f_=Object.defineProperty,yt=Object.assign,fn=Object,h_=Math.floor,HE=Array.isArray,Yt=1/0,hn=String.fromCharCode,JE=Array,uE=Object.prototype.hasOwnProperty,Ti=Object.prototype.propertyIsEnumerable,$e=Function.prototype.apply;var zr=Ti.call.bind(Ti),je=fn.hasOwn||(function(){return uE.bind?uE.call.bind(uE):function(e,E){return uE.call(e,E)}})(),eR=fn.create;function ni(t){var e=eR(Ne);return je(t,"value")&&(e.value=t.value),je(t,"writable")&&(e.writable=t.writable),je(t,"get")&&(e.get=t.get),je(t,"set")&&(e.set=t.set),je(t,"enumerable")&&(e.enumerable=t.enumerable),je(t,"configurable")&&(e.configurable=t.configurable),e}/*!@preserve@license
 * 模块名称：j-regexp
 * 模块功能：可读性更好的正则表达式创建方式。从属于“简计划”。
   　　　　　More readable way for creating RegExp. Belong to "Plan J".
 * 模块版本：8.2.0
 * 许可条款：LGPL-3.0
 * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)
 * 问题反馈：https://GitHub.com/LongTengDao/j-regexp/issues
 * 项目主页：https://GitHub.com/LongTengDao/j-regexp/
 */var tR=Ft?Ft.bind(Ei):function(t){return function(e){return Ei.call(t,e)}},ER=Ft?Ft.bind(si):function(t){return function(e){return si.call(t,e)}};function p_(t){var e=t.test=tR(t),E=t.exec=ER(t),s=e.source=E.source=t.source;return e.unicode=E.unicode=t.unicode,e.ignoreCase=E.ignoreCase=t.ignoreCase,e.multiline=E.multiline=s.indexOf("^")<0&&s.indexOf("$")<0?null:t.multiline,e.dotAll=E.dotAll=s.indexOf(".")<0?null:t.dotAll,t}function v(t){return p_(t)}var ii=/[\n\t]+/g,D_=/\\./g;function P_(t){return t==="\\`"?"`":t}var Ce="".includes?function(t,e){return t.includes(e)}:function(t,e){return t.indexOf(e)>-1};function ft(t){for(var e=this.U,E=this.I,s=this.M,T=this.S,n=t.raw,i=n[0].replace(ii,""),r=1,R=arguments.length;r!==R;){var _=arguments[r];if(typeof _=="string")i+=_;else{var o=_.source;if(typeof o!="string")throw V("source");if(_.unicode===e)throw b("unicode");if(_.ignoreCase===E)throw b("ignoreCase");if(_.multiline===s&&(Ce(o,"^")||Ce(o,"$")))throw b("multiline");if(_.dotAll===T&&Ce(o,"."))throw b("dotAll");i+=o}i+=n[r++].replace(ii,"")}var O=un(e?i=i.replace(D_,P_):i,this.flags),I=O.test=tR(O),C=O.exec=ER(O);return I.source=C.source=i,I.unicode=C.unicode=!e,I.ignoreCase=C.ignoreCase=!E,I.multiline=C.multiline=Ce(i,"^")||Ce(i,"$")?!s:null,I.dotAll=C.dotAll=Ce(i,".")?!T:null,O}var d_=Ft&&Ft.bind(ft);function WT(t){return{U:!Ce(t,"u"),I:!Ce(t,"i"),M:!Ce(t,"m"),S:!Ce(t,"s"),flags:t}}var ri=WT(""),$=VT?new VT(ft,{apply:function(t,e,E){return cn(t,ri,E)},get:function(t,e){return d_(WT(e))},defineProperty:function(){return!1},preventExtensions:function(){return!1}}):(function(){ft.apply=ft.apply;for(var t=function(){return ft.apply(ri,arguments)},e=1,E=e*2,s=E*2,T=s*2,n=s*2,i=n*2,r=i*2,R=r*2-1;R--;)(function(_){t[_.flags]=function(){return ft.apply(_,arguments)}})(WT((R&e?"":"d")+(R&E?"":"g")+(R&s?"":"i")+(R&T?"":"m")+(R&n?"":"s")+(R&i?"":"u")+(R&r?"":"y")));return De?De(t):t})(),M_="$_"in un?(function(){var t=/^/;return t.test=t.test,function(E){return E}})():function(e){return e},U_=M_,m_=/^[$()*+\-.?[\\\]^{|]/,G_=he(Ne);function y_(t,e,E){for(var s=he(Ne),T=sR,n=t.length,i=0;i<n;++i)T(s,t[i]);return TR(s)}function sR(t,e){if(e){var E=e.charAt(0);sR(t[E]||(t[E]=he(Ne)),e.slice(1))}else t[""]=G_}function TR(t,e){var E=[],s=[],T=!0;for(var n in t)if(n){var i=TR(t[n]);m_.test(n)&&(n="\\"+n),i?E.push(n+i):s.push(n)}else T=!1;return s.length&&E.unshift(s.length===1?s[0]:"["+s.join("")+"]"),E.length===0?"":(E.length===1&&(s.length||T)?E[0]:"(?:"+E.join("|")+")")+(T?"":"?")}const At=WeakSet,Xt=WeakSet.prototype.has,_t=WeakSet.prototype.add,g_=WeakSet.prototype.delete,nR=Object.keys,QE=Object.getOwnPropertySymbols,Ye=(function(){var t=Object.assign||function(T,n){var i,r,R;for(i=nR(n),r=0;r<i.length;++r)R=i[r],T[R]=n[R];if(QE)for(i=QE(n),r=0;r<i.length;++r)R=i[r],zr(n,R)&&(T[R]=n[R]);return T};function e(s){return delete s.prototype.constructor,De(s.prototype),s}function E(s){return s===re?this:typeof s=="function"?e(s):t(eR(Ne),s)}return delete E.name,E.prototype=null,De(E),E})(),vT=Object.is,B_=Object.defineProperties,H_=Object.fromEntries,b_=Reflect.construct,Ri=Reflect.defineProperty,F_=Reflect.deleteProperty,iR=Reflect.ownKeys;/*!@preserve@license
 * 模块名称：j-orderify
 * 模块功能：返回一个能保证给定对象的属性按此后添加顺序排列的 proxy，即使键名是 symbol，或整数 string。从属于“简计划”。
   　　　　　Return a proxy for given object, which can guarantee own keys are in setting order, even if the key name is symbol or int string. Belong to "Plan J".
 * 模块版本：7.0.1
 * 许可条款：LGPL-3.0
 * 所属作者：龙腾道 <LongTengDao@LongTengDao.com> (www.LongTengDao.com)
 * 问题反馈：https://GitHub.com/LongTengDao/j-orderify/issues
 * 项目主页：https://GitHub.com/LongTengDao/j-orderify/
 */const rR=()=>[],pn=()=>{const t=new Cn;return t.has=t.has,t.get=t.get,t.set=t.set,t},bE=pn(),RR=pn(),Ai=pn(),Y_=yt(he(Ne),{defineProperty:(t,e,E)=>{if(je(t,e))return Ri(t,e,yt(he(Ne),E));if(Ri(t,e,yt(he(Ne),E))){const s=bE.get(t);return s[s.length]=e,!0}return!1},deleteProperty:(t,e)=>{if(F_(t,e)){const E=bE.get(t),s=E.indexOf(e);return s<0||--E.copyWithin(s,s+1).length,!0}return!1},ownKeys:t=>bE.get(t),construct:(t,e,E)=>_i(b_(t,e,E)),apply:(t,e,E)=>_i(cn(t,e,E))}),AR=(t,e)=>{bE.set(t,e);const E=new VT(t,Y_);return RR.set(E,t),E},_i=t=>{if(RR.has(t))return t;let e=Ai.get(t);return e||(e=AR(t,yt(rR(),iR(t))),Ai.set(t,e),e)},w_=(function(){function t(){throw V("Super constructor Null cannot be invoked with 'new'")}function e(){throw V("Super constructor Null cannot be invoked without 'new'")}const E=T=>(delete T.prototype.constructor,De(T.prototype),T);function s(T){return new.target?new.target===s?t():AR(this,rR()):typeof T=="function"?E(T):e()}return s.prototype=null,f_(s,"name",yt(he(Ne),{value:"",configurable:!1})),De(s),s})(),V_=WeakMap.prototype.has,Dn=new Cn,_R=new At,aR=V_.bind(Dn),W_=qr.bind(Dn),gt=jr.bind(Dn),CE=Xt.bind(_R),Pn=_t.bind(_R),v_=!0,SR=new At,oR=_t.bind(SR),IR=Xt.bind(SR),NR=new At,lR=_t.bind(NR),X_=g_.bind(NR),K_=t=>X_(t)?(Pn(t),!0):!1,XT=!0,qE=!1,LR=new At,uR=_t.bind(LR),CR=Xt.bind(LR),ai=!0,Si=Ye(class extends Ye{constructor(e,E){return super(),oR(this),e?E?gt(this,!0):Pn(this):(E?uR:lR)(this),this}}),x_=Ye(class extends w_{constructor(e,E){return super(),oR(this),e?E?gt(this,!0):Pn(this):(E?uR:lR)(this),this}}),dn=[];let jE="",Be=dn,Mn=-1,He=-1;const y=t=>{throw t},$_=/\r?\n/,k_=(t,e)=>{if(typeof e!="string")throw V("TOML.parse({ path })");jE=e,Be=t.split($_),Mn=Be.length-1,He=-1},J_=()=>Be[++He],Q_=()=>He!==Mn;class Is{constructor(e,E){W(this,"lineIndex",He);W(this,"type");W(this,"restColumn");return this.type=e,this.restColumn=E,this}must(){return He===Mn&&y(b(`${this.type} is not close until the end of the file`+g(", which started from ",this.lineIndex,Be[this.lineIndex].length-this.restColumn+1))),Be[++He]}nowrap(e){throw y(te(`TOML.parse(${e?`${e}multilineStringJoiner`:",{ joiner }"}) must be passed, while the source including multi-line string`+g(", which started from ",this.lineIndex,Be[this.lineIndex].length-this.restColumn+1)))}}const g=(t,e=He,E=0)=>Be===dn?"":jE?`
    at (${jE}:${e+1}:${E})`:`${t}line ${e+1}: ${Be[e]}`,q_=()=>{jE="",Be=dn},le=/[ \t]/,ie=$`
	^${le}+`.valueOf(),{exec:cR}=$.s`
	^
	(
		(?:\d\d\d\d-\d\d-\d\d \d)?
		[\w\-+.:]+
	)
	${le}*
	(.*)
	$`.valueOf(),{exec:j_}=$.s`
	^
	'([^']*)'
	${le}*
	(.*)`.valueOf(),{exec:Z_}=$.s`
	^
	(.*?)
	'''('{0,2})
	${le}*
	(.*)`.valueOf(),{exec:FE}=$.s`
	^
	(.*?)
	'''()
	${le}*
	(.*)`.valueOf();let et=FE;const fe=$.s`
	^
	.
	${le}*`.valueOf(),Un=/[^\x00-\x1F"#'()<>[\\\]`{}\x7F]+/,{exec:z_}=$.s`
	^
	${le}*
	=
	${le}*
	(?:
		<(${Un})>
		${le}*
	)?
	(.*)
	$`.valueOf(),{exec:ea}=$.s`
	^
	<(${Un})>
	${le}*
	(.*)
	$`.valueOf(),{exec:ta}=$.s`
	^
	<(${Un})>
	${le}*
	(.*)
	$`.valueOf(),Oi=v(/[^\\"]+|\\.?|"(?!"")"?/sy),Ys=t=>{let e=0;for(;Oi.test(t);)e=Oi.lastIndex;return e},fR=/[^\\\x00-\x08\x0B-\x1F\x7F]+|\\(?:[btnfr"\\]|[\t ]*\n[\t\n ]*|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/g,Ea=/[^\\\x00-\x09\x0B-\x1F\x7F]+|\\(?:[btnfr"\\]|[\t ]*\n[\t\n ]*|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/g,sa=/[^\\\x00-\x09\x0B-\x1F]+|\\(?:[btnfr"\\]|[\t ]*\n[\t\n ]*|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/g,Ta=/[^\\\x00-\x09\x0B-\x1F]+|\\(?:[btnfr"\\/]|[\t ]*\n[\t\n ]*|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/g;let EE=fR;const jt=t=>!t.replace(EE,""),na=v(/[^\\"\x00-\x08\x0B-\x1F\x7F]+|\\(?:[btnfr"\\]|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/y),ia=v(/[^\\"\x00-\x08\x0B-\x1F\x7F]+|\\(?:[btnfr"\\]|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/y),ra=v(/[^\\"\x00-\x08\x0B-\x1F]+|\\(?:[btnfr"\\]|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/y),hR=v(/[^\\"\x00-\x08\x0B-\x1F]+|\\(?:[btnfr"\\/]|u[\dA-Fa-f]{4}|U[\dA-Fa-f]{8})/y);let tt=hR;const pR=t=>{let e=tt.lastIndex=1;for(;tt.test(t);)e=tt.lastIndex;return e!==t.length&&t[e]==='"'||y(b("Bad basic string"+g(" at "))),e},{test:Ra}=v(/^[ \t]*\./),Aa=/^[ \t]*\.[ \t]*/,{exec:ws}=v(/^[\w-]+/),{exec:DR}=v(/^[^ \t#=[\]'".]+(?:[ \t]+[^ \t#=[\]'".]+)*/);let sE=DR;const{exec:oi}=v(/^'[^'\x00-\x08\x0B-\x1F\x7F]*'/),{exec:KT}=v(/^'[^'\x00-\x08\x0B-\x1F]*'/);let TE=KT,nE=!0;const _a=(t,e)=>{const E=t[1]==="[";E?(nE||y(b("Array of Tables is not allowed before TOML v0.2"+g(", which at "))),t=t.slice(2)):t=t.slice(1),t=t.replace(ie,"");const{leadingKeys:s,finalKey:T}={lineRest:t}=e(t);t=t.replace(ie,""),t&&t[0]==="]"||y(b("Table header is not closed"+g(", which is found at "))),(t.length>1?t[1]==="]"===E:!E)||y(b("Square brackets of Table definition statement not match"+g(" at "))),t=t.slice(E?2:1).replace(ie,"");let n;return t&&t[0]==="<"?{1:n,2:t}=ta(t)||y(b("Bad tag"+g(" at "))):n="",{leadingKeys:s,finalKey:T,asArrayItem:E,tag:n,lineRest:t}},aa=({leadingKeys:t,finalKey:e,lineRest:E})=>{const{1:s=""}={2:E}=z_(E)||y(b("Keys must equal something"+g(", but missing at ")));return s||E&&E[0]!=="#"||y(b("Value can not be missing after euqal sign"+g(", which is found at "))),{leadingKeys:t,finalKey:e,tag:s,lineRest:E}},{test:xT}=v(/[\x00-\x08\x0B-\x1F\x7F]/),{test:Ii}=v(/[\x00-\x08\x0B-\x1F]/);let Pt=xT;const Sa=t=>{switch(t){case 1:et=Z_,TE=oi,Pt=xT,EE=fR,tt=na,sE=ws,nE=!0;break;case .5:et=FE,TE=oi,Pt=xT,EE=Ea,tt=ia,sE=ws,nE=!0;break;case .4:et=FE,TE=KT,Pt=Ii,EE=sa,tt=ra,sE=ws,nE=!0;break;default:et=FE,TE=KT,Pt=Ii,EE=Ta,tt=hR,sE=DR,nE=!1}},Ni=$`
	(?:
		0
		(?:
			b[01][_01]*
		|
			o[0-7][_0-7]*
		|
			x[\dA-Fa-f][_\dA-Fa-f]*
		|
			(?:\.\d[_\d]*)?(?:[Ee]-?\d[_\d]*)?
		)
	|
		[1-9][_\d]*
		(?:\.\d[_\d]*)?(?:[Ee]-?\d[_\d]*)?
	|
		inf
	|
		nan
	)
`.valueOf(),{test:Oa}=$`
	^(?:
		-?${Ni}
		(?:-${Ni})*
	|
		true
	|
		false
	)$
`.valueOf(),{test:oa}=$`_(?![\dA-Fa-f])`.valueOf(),PR=t=>Oa(t)&&!oa(t);let ce=!0,j="",Ke=null,dt=!0,$T=0,kT=0;const mn={test:()=>!0},Ia=class extends un{constructor(e){super(`^${y_(e)}$`);let E=-1;for(let s=e.length;s;){const{length:T}=e[--s];T>E&&(E=T)}return this.lastIndex=E+1,this}test(e){return e.length<this.lastIndex&&super.test(e)}},Na=Zr.bind(De(Ia.prototype));let _E=mn,Ae,We,ve,_e,Ze,ZE,ze,Pe,zE,aE,JT,es,dR;const MR=new Cn,la=qr.bind(MR),La=jr.bind(MR),oe=()=>{const t=e=>{const E=la(e);return E?E===t||y(V("Types in Array must be same"+g(". Check "))):La(e,t),e};return t},ua={asNulls:oe(),asStrings:oe(),asTables:oe(),asArrays:oe(),asBooleans:oe(),asFloats:oe(),asIntegers:oe(),asOffsetDateTimes:oe(),asLocalDateTimes:oe(),asLocalDates:oe(),asLocalTimes:oe()},Ca=t=>t;let QT,ts,qT,jT,Es,ZT,zT,en,tn,En,sn,Gn=null,Bt=null;const ca=(t,e,E,s)=>{const T=he(Ne);T._linked=Bt,T.tag=t,E&&(T.table=E,T.key=s),e&&(T.array=e,T.index=e.length),Bt=T},Tn=()=>{throw y(b("xOptions.tag is not enabled, but found tag syntax"+g(" at ")))};let nt=Tn;const fa=()=>{if(Bt){const t=Gn;let e=Bt;return Bt=null,()=>{const E=t;let s=e;e=null;do E(s);while(s=s._linked)}}return null},ha=()=>{_E=mn,Ke=Gn=Bt=null,We=!1},pa=(t,e,E,s,T,n)=>{j=n;let i;switch(t){case 1:ce=i=_e=ze=ve=!0,We=Ze=!1;break;case .5:ce=_e=ze=ve=!0,i=We=Ze=!1;break;case .4:ce=Ze=ve=!0,i=We=_e=ze=!1;break;case .3:ce=Ze=!0,i=We=_e=ze=ve=!1;break;case .2:We=Ze=!0,ce=i=_e=ze=ve=!1;break;case .1:We=Ze=!0,ce=i=_e=ze=ve=!1;break;default:throw ee("TOML.parse(,specificationVersion)")}if(Sa(t),typeof e=="string")Ke=e;else if(e===re)Ke=null;else throw V(`TOML.parse(${j?`${j}multilineStringJoiner`:",{ joiner }"})`);if(E===re||E===!0)dt=!0;else if(E===!1)dt=!1;else{if(typeof E!="number")throw V(`TOML.parse(${j?`${j},useBigInt`:",{ bigint }"})`);if(!Dt(E))throw ee(`TOML.parse(${j?`${j},useBigInt`:",{ bigint }"})`);dt=null,E>=0?$T=-(kT=E):kT=-($T=E)-1}if(!Fe&&dt!==!1)throw te(`Can't work without TOML.parse(${j?`${j},useBigInt`:",{ bigint }"}) being set to false, because the host doesn't have BigInt support`);if(s==null)_E=mn;else{if(!Na(s))throw V("TOML.parse(,{ keys })");_E=s}if(T==null)Pe=Si,ZE=zE=aE=JT=!1,nt=Tn;else{if(typeof T!="object")throw V(`TOML.parse(${j?`${j},,xOptions`:",{ x }"})`);{const{order:r,longer:R,exact:_,null:o,multi:O,comment:I,string:C,literal:h,tag:L,...S}=T,a=me(S);if(a.length)throw V(`TOML.parse(${j?`${j},,{ ${a.join(", ")} }`:`,{ x: { ${a.join(", ")} } }`})`);if(Pe=r?x_:Si,zE=!R,ZE=!!_,aE=!!o,JT=!!O,es=!!I,dR=!!C,Ae=!!h,L){if(typeof L!="function")throw V(`TOML.parse(${j?`${j},,{ tag }`:",{ x: { tag } }"})`);if(!i)throw V(`TOML.parse(${j?`${j},,xOptions`:",{ x }"}) xOptions.tag needs at least TOML 1.0 to support mixed type array`);Gn=L,nt=ca}else nt=Tn}}i?QT=ts=qT=jT=Es=ZT=zT=en=tn=En=sn=Ca:{asNulls:QT,asStrings:ts,asTables:qT,asArrays:jT,asBooleans:Es,asFloats:ZT,asIntegers:zT,asOffsetDateTimes:en,asLocalDateTimes:tn,asLocalDates:En,asLocalTimes:sn}=ua},Da=ArrayBuffer.isView,Pa=(function(){if(typeof ArrayBuffer=="function"){var t=$e.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get);return function(E){try{t(E)}catch{return!1}return!0}}return function(){return!1}})(),da=TextDecoder,Ee=Symbol,Vs=Ee("previous"),UR=t=>{let e=t,E=e.next();if(!E.done)for(E.value[Vs]=e,E=(e=E.value).next();;)if(E.done){if(e===t)break;e=e[Vs],E=e.next(E.value)}else E.value[Vs]=e,E=(e=E.value).next();return E.value},nn=Ee("_literal"),ae=(t,e)=>{const E=fn(e);return E[nn]=t,E},mR=new At,Ma=_t.bind(mR),GR=Xt.bind(mR),Ua=!1,ma=!0,yR=new At,Ga=_t.bind(yR),gR=Xt.bind(yR),BR=t=>{const e=[];return Ma(e),t&&Ga(e),e},ss=Date,ya=Date.parse,ga=Object.preventExtensions,Ba=Object.getOwnPropertyDescriptors,Ha=(function(e,E){for(var s=he(Ne),T=nR(E),n=T.length,i=0;i<n;++i){var r=T[i];s[r]=ni(E[r])}if(QE){var R=QE(E);for(n=R.length,i=0;i<n;++i){var _=R[i];zr(E,_)&&(s[_]=ni(E[_]))}}return B_(e,s)}),Ns=t=>(De(De(t).prototype),t),ba=/(?:0[1-9]|1\d|2\d)/,li=/(?:0[1-9]|[12]\d|30)/,Li=/(?:0[1-9]|[12]\d|3[01])/,HR=/(?:[01]\d|2[0-3])/,rn=/[0-5]\d/,ls=$`
	\d\d\d\d-
	(?:
		0
		(?:
			[13578]-${Li}
			|
			[469]-${li}
			|
			2-${ba}
		)
		|
		1
		(?:
			[02]-${Li}
			|
			1-${li}
		)
	)
`.valueOf(),Ls=$`
	${HR}:${rn}:${rn}
`.valueOf(),Fa=/(?:[Zz]|[+-]\d\d:\d\d)$/,{exec:Ya}=v(/(([+-])\d\d):(\d\d)$/),{exec:wa}=$`
	^
	${ls}
	[Tt ]
	${Ls}
	(?:\.\d{1,3}(\d*?)0*)?
	(?:[Zz]|[+-]${HR}:${rn})
	$`.valueOf(),{exec:Va}=$`
	^
	${ls}
	[Tt ]
	${Ls}
	()
	[Zz]
	$`.valueOf(),{test:Wa}=$`
	^
	${ls}
	[Tt ]
	${Ls}
	(?:\.\d+)?
	$`.valueOf(),{test:va}=$`
	^
	${ls}
	$`.valueOf(),{test:Xa}=$`
	^
	${Ls}
	(?:\.\d+)?
	$`.valueOf(),bR=/[ t]/,Ka=/[-T:.]/g,FR=/\.?0+$/,xa=/\.(\d*?)0+$/,$a=(t,e)=>e,us=(()=>{const t=function(){return this},e=Ye(null);{const E=Ye(null);for(const s of iR(ss.prototype))s==="constructor"||s==="toJSON"||(e[s]=E)}return t.prototype=ga(he(ss.prototype,e)),De(t)})(),ke=t=>t.replace(xa,$a).replace(Ka,""),ui=/./gs,Ci=t=>"          "[t],ka=(t,e)=>t<0?(""+(t+6216730554e4)).replace(ui,Ci).padStart(14," ")+e.replace(ui,Ci)+t:e?(t+".").padStart(16,"0")+e:(""+t).padStart(15,"0"),yn=t=>{if(t.startsWith("02-29",5)){const e=+t.slice(0,4);return e&3?!1:e%100?!0:e%400?!1:!!(e%3200)}return!0},{test:Ja}=$.s`^.....(?:06.30|12.31).23:59:59`.valueOf(),Ts=Ha(new ss(0),Ba(ss.prototype)),cE=Ee("OffsetDateTime_ISOString"),iE=Ee("OffsetDateTime_value"),Ve=(t,e=0)=>(Ts.setTime(+t[iE]+e),Ts);var vr,Xr;const YR=Ns(class extends us{constructor(E){yn(E)||y(b(`Invalid Offset Date-Time ${E}`+g(" at ")));const s=E.startsWith("60",17);let T=s?E.slice(0,17)+"59"+E.slice(19):E;const{1:n=""}=(We?Va(T):wa(T))||y(b(`Invalid Offset Date-Time ${E}`+g(" at "))),i=ya(T=T.replace(bR,"T").replace("z","Z"));s&&(Ts.setTime(i),Ja(Ts.toISOString())||y(b(`Invalid Offset Date-Time ${E}`+g(" at "))));super();W(this,Xr);W(this,vr);return this[cE]=T,this[iE]=ka(i,n),this}get[(Xr=cE,vr=iE,Ee.toStringTag)](){return"OffsetDateTime"}valueOf(){return this[iE]}toISOString(){return this[cE]}getUTCFullYear(){return Ve(this).getUTCFullYear()}getUTCMonth(){return Ve(this).getUTCMonth()}getUTCDate(){return Ve(this).getUTCDate()}getUTCHours(){return Ve(this).getUTCHours()}getUTCMinutes(){return Ve(this).getUTCMinutes()}getUTCSeconds(){return Ve(this).getUTCSeconds()}getUTCMilliseconds(){return Ve(this).getUTCMilliseconds()}getUTCDay(){return Ve(this).getUTCDay()}getTimezoneOffset(){const E=Ya(this[cE]);return E?+E[1]*60+ +(E[2]+E[3]):0}getTime(){return h_(+this[iE])}}),Ge=Ee("LocalDateTime_ISOString"),ht=Ee("LocalDateTime_value"),ot=(t,e,E)=>+t[Ge].slice(e,E),It=(t,e,E,s)=>{const T=""+s,n=E-e;if(T.length>n)throw ee();t[ht]=ke(t[Ge]=t[Ge].slice(0,e)+T.padStart(n,"0")+t[Ge].slice(E))};var Kr,xr;const wR=Ns(class extends us{constructor(E){Wa(E)&&yn(E)||y(b(`Invalid Local Date-Time ${E}`+g(" at ")));super();W(this,xr);W(this,Kr);return this[ht]=ke(this[Ge]=E.replace(bR,"T")),this}get[(xr=Ge,Kr=ht,Ee.toStringTag)](){return"LocalDateTime"}valueOf(){return this[ht]}toISOString(){return this[Ge]}getFullYear(){return ot(this,0,4)}setFullYear(E){It(this,0,4,E)}getMonth(){return ot(this,5,7)-1}setMonth(E){It(this,5,7,E+1)}getDate(){return ot(this,8,10)}setDate(E){It(this,8,10,E)}getHours(){return ot(this,11,13)}setHours(E){It(this,11,13,E)}getMinutes(){return ot(this,14,16)}setMinutes(E){It(this,14,16,E)}getSeconds(){return ot(this,17,19)}setSeconds(E){It(this,17,19,E)}getMilliseconds(){return+this[ht].slice(14,17).padEnd(3,"0")}setMilliseconds(E){this[ht]=ke(this[Ge]=this[Ge].slice(0,19)+(E?("."+(""+E).padStart(3,"0")).replace(FR,""):""))}}),it=Ee("LocalDate_ISOString"),YE=Ee("LocalDate_value"),Ws=(t,e,E)=>+t[it].slice(e,E),vs=(t,e,E,s)=>{const T=""+s,n=E-e;if(T.length>n)throw ee();t[YE]=ke(t[it]=t[it].slice(0,e)+T.padStart(n,"0")+t[it].slice(E))};var $r,kr;const VR=Ns(class extends us{constructor(E){va(E)&&yn(E)||y(b(`Invalid Local Date ${E}`+g(" at ")));super();W(this,kr);W(this,$r);return this[YE]=ke(this[it]=E),this}get[(kr=it,$r=YE,Ee.toStringTag)](){return"LocalDate"}valueOf(){return this[YE]}toISOString(){return this[it]}getFullYear(){return Ws(this,0,4)}setFullYear(E){vs(this,0,4,E)}getMonth(){return Ws(this,5,7)-1}setMonth(E){vs(this,5,7,E+1)}getDate(){return Ws(this,8,10)}setDate(E){vs(this,8,10,E)}}),ye=Ee("LocalTime_ISOString"),pt=Ee("LocalTime_value"),Xs=(t,e,E)=>+t[ye].slice(e,E),Ks=(t,e,E,s)=>{const T=""+s,n=E-e;if(T.length>n)throw ee();t[pt]=ke(t[ye]=t[ye].slice(0,e)+T.padStart(2,"0")+t[ye].slice(E))};var Jr,Qr;const WR=Ns(class extends us{constructor(E){Xa(E)||y(b(`Invalid Local Time ${E}`+g(" at ")));super();W(this,Qr);W(this,Jr);return this[pt]=ke(this[ye]=E),this}get[(Qr=ye,Jr=pt,Ee.toStringTag)](){return"LocalTime"}valueOf(){return this[pt]}toISOString(){return this[ye]}getHours(){return Xs(this,0,2)}setHours(E){Ks(this,0,2,E)}getMinutes(){return Xs(this,3,5)}setMinutes(E){Ks(this,3,5,E)}getSeconds(){return Xs(this,6,8)}setSeconds(E){Ks(this,6,8,E)}getMilliseconds(){return+this[pt].slice(6,9).padEnd(3,"0")}setMilliseconds(E){this[pt]=ke(this[ye]=this[ye].slice(0,8)+(E?("."+(""+E).padStart(3,"0")).replace(FR,""):""))}}),wt=parseInt,vR=String.fromCodePoint,Qa=/[^\\]+|\\(?:[\\"btnfr/]|u.{4}|U.{8})/gs,qa=/[^\n\\]+|\n|\\(?:[\t ]*\n[\t\n ]*|[\\"btnfr/]|u.{4}|U.{8})/gs,Rn=t=>{if(!t)return"";const e=t.match(Qa),{length:E}=e;let s=0;do{const T=e[s];if(T[0]==="\\")switch(T[1]){case"\\":e[s]="\\";break;case'"':e[s]='"';break;case"b":e[s]="\b";break;case"t":e[s]="	";break;case"n":e[s]=`
`;break;case"f":e[s]="\f";break;case"r":e[s]="\r";break;case"u":const n=wt(T.slice(2),16);ce&&55295<n&&n<57344&&y(ee(`Invalid Unicode Scalar ${T}`+g(" at "))),e[s]=hn(n);break;case"U":const i=wt(T.slice(2),16);(ce&&55295<i&&i<57344||1114111<i)&&y(ee(`Invalid Unicode Scalar ${T}`+g(" at "))),e[s]=vR(i);break;case"/":e[s]="/";break}}while(++s!==E);return e.join("")},ci=(t,e,E)=>{if(!t)return"";const s=t.match(qa),{length:T}=s;let n=0;do{const i=s[n];if(i===`
`)++E,s[n]=e;else if(i[0]==="\\")switch(i[1]){case`
`:case" ":case"	":for(let _=0;_=i.indexOf(`
`,_)+1;)++E;s[n]="";break;case"\\":s[n]="\\";break;case'"':s[n]='"';break;case"b":s[n]="\b";break;case"t":s[n]="	";break;case"n":s[n]=`
`;break;case"f":s[n]="\f";break;case"r":s[n]="\r";break;case"u":const r=wt(i.slice(2),16);ce&&55295<r&&r<57344&&y(ee(`Invalid Unicode Scalar ${i}`+g(" at ",He+E))),s[n]=hn(r);break;case"U":const R=wt(i.slice(2),16);(ce&&55295<R&&R<57344||1114111<R)&&y(ee(`Invalid Unicode Scalar ${i}`+g(" at ",He+E))),s[n]=vR(R);break;case"/":s[n]="/";break}}while(++n!==T);return s.join("")},XR=/[-+]?(?:0|[1-9][_\d]*)/,{test:ja}=$`_(?!\d)`.valueOf(),{test:Za}=$`^${XR}$`.valueOf(),{test:za}=v(/^0(?:x[\dA-Fa-f][_\dA-Fa-f]*|o[0-7][_0-7]*|b[01][_01]*)$/),{test:eS}=$`_(?![\dA-Fa-f])`.valueOf(),KR=/_/g,ns=/_|^[-+]/g,gn=t=>(Za(t)||za(t))&&!eS(t),xR=Fe&&-Fe("0x8000000000000000"),$R=Fe&&Fe("0x7FFFFFFFFFFFFFFF"),tS=t=>{gn(t)||y(b(`Invalid Integer ${t}`+g(" at ")));const e=t[0]==="-"?-Fe(t.replace(ns,"")):Fe(t.replace(ns,""));return zE||xR<=e&&e<=$R||y(ee(`Integer expect 64 bit range (-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807), not includes ${t}`+g(" meet at "))),e},ES=t=>{gn(t)||y(b(`Invalid Integer ${t}`+g(" at ")));const e=wt(t.replace(KR,""));return Dt(e)||y(ee(`Integer did not use BitInt must fit Number.isSafeInteger, not includes ${t}`+g(" meet at "))),e},is=t=>{if(dt===!0)return tS(t);if(dt===!1)return ES(t);gn(t)||y(b(`Invalid Integer ${t}`+g(" at ")));const e=wt(t.replace(KR,""));if($T<=e&&e<=kT)return e;const E=t[0]==="-"?-Fe(t.replace(ns,"")):Fe(t.replace(ns,""));return zE||xR<=E&&E<=$R||y(ee(`Integer expect 64 bit range (-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807), not includes ${t}`+g(" meet at "))),E},sS=isFinite,Cs=NaN,TS=-Cs,fi=-Yt,{test:nS}=$`
	^
	${XR}
	(?:
		\.\d[_\d]*
		(?:[eE][-+]?\d[_\d]*)?
	|
		[eE][-+]?\d[_\d]*
	)
	$`.valueOf(),iS=/_/g,{test:rS}=v(/^[-+]?0(?:\.0+)?(?:[eE][-+]?0+)?$/),{exec:RS}=v(/^[-0]?(\d*)(?:\.(\d+))?(?:e\+?(-?\d+))?$/),{exec:AS}=v(/^[-+]?0?(\d*)(?:\.(\d*?)0*)?(?:[eE]\+?(-?\d+))?$/),rs=t=>{if(!nS(t)||ja(t)){if(ze){if(t==="inf"||t==="+inf")return Yt;if(t==="-inf")return fi;if(t==="nan"||t==="+nan")return Cs;if(t==="-nan")return TS}else if(!ZE){if(t==="inf"||t==="+inf")return Yt;if(t==="-inf")return fi}throw y(b(`Invalid Float ${t}`+g(" at ")))}const e=t.replace(iS,""),E=+e;if(ZE){sS(E)||y(ee(`Float ${t} has been as big as inf`+g(" at "))),E||rS(e)||y(ee(`Float ${t} has been as little as ${t[0]==="-"?"-":""}0`+g(" at ")));const{1:s,2:T="",3:n=""}=RS(E),{1:i,2:r="",3:R=""}=AS(e);i+r===s+T&&R-r.length===n-T.length||y(ee(`Float ${t} has lost its exact and been ${E}`+g(" at ")))}return E},_S=(t,e)=>{const{length:E}=e;let s=0;for(;s<E;){const T=e[s++];if(T in t)if(t=t[T],IR(t))aR(t)&&y(te("Trying to define Table under Inline Table"+g(" at ")));else if(GR(t))gR(t)&&y(te("Trying to append value to Static Array"+g(" at "))),t=t[t.length-1];else throw y(te("Trying to define Table under non-Table value"+g(" at ")));else{for(t=t[T]=new Pe(qE);s<E;)t=t[e[s++]]=new Pe(qE);return t}}return t},aS=(t,e,E,s)=>{let T;if(E){let n;e in t?GR(n=t[e])&&!gR(n)||y(te("Trying to push Table to non-ArrayOfTables value"+g(" at "))):n=t[e]=BR(Ua),s&&nt(s,n,t,e),n[n.length]=T=new Pe(XT)}else e in t?(T=t[e],CR(T)&&y(te("A table defined implicitly via key/value pair can not be accessed to via []"+g(", which at "))),K_(T)||y(te("Duplicate Table definition"+g(" at ")))):t[e]=T=new Pe(XT),s&&nt(s,null,t,e);return T},SS=(t,e)=>{const{length:E}=e;let s=0;for(;s<E;){const T=e[s++];if(T in t)t=t[T],IR(t)||y(te("Trying to assign property through non-Table value"+g(" at "))),aR(t)&&y(te("Trying to assign property through static Inline Table"+g(" at "))),CR(t)||y(te("A table defined implicitly via [] can not be accessed to via key/value pair"+g(", which at ")));else{for(t=t[T]=new Pe(qE,ai);s<E;)t=t[e[s++]]=new Pe(qE,ai);return t}}return t},Nt=t=>(Pt(t)&&y(b("Control characters other than Tab are not permitted in a Literal String"+g(", which was found at "))),t),kR=((t,e,E)=>{if(!E.startsWith("'''")){const i=j_(E)||y(b("Bad literal string"+g(" at "))),r=Nt(i[1]);return t[e]=Ae?ae(E.slice(0,r.length+2),r):r,i[2]}const s=et(E.slice(3));if(s){const i=Nt(s[1])+s[2];return t[e]=Ae?ae(E.slice(0,i.length+6),i):i,s[3]}const T=new Is("Multi-line Literal String",E.length),n=!(E=E.slice(3));if(n){E=T.must();const i=et(E);if(i){const r=Nt(i[1])+i[2];return t[e]=Ae?ae(["'''",E.slice(0,r.length+3)],r):r,i[3]}}Ke===null&&T.nowrap(j);for(const i=[Nt(E)];;){const r=T.must(),R=et(r);if(R){i[i.length]=Nt(R[1])+R[2];const _=i.join(Ke);return Ae?(i[i.length-1]+="'''",n?i.unshift("'''"):i[0]=`'''${E}`,t[e]=ae(i,_)):t[e]=_,R[3]}i[i.length]=Nt(r)}}),JR=((t,e,E)=>{if(!E.startsWith('"""')){const i=pR(E),r=Rn(E.slice(1,i));return t[e]=Ae?ae(E.slice(0,i+1),r):r,E.slice(i+1).replace(ie,"")}let s=3+Ys(E.slice(3));if(E.length!==s){const i=E.slice(3,s);jt(i)||y(b("Bad multi-line basic string"+g(" at ")));const r=Rn(i)+(E.startsWith('"',s+=3)?E.startsWith('"',++s)?(++s,'""'):'"':"");return t[e]=Ae?ae(E.slice(0,s),r):r,E.slice(s).replace(ie,"")}const T=new Is("Multi-line Basic String",s),n=(E=E.slice(3))?0:1;if(n){E=T.must();let i=Ys(E);if(E.length!==i){const r=E.slice(0,i);jt(r)||y(b("Bad multi-line basic string"+g(" at ")));const R=ci(r,Ke,n)+(E.startsWith('"',i+=3)?E.startsWith('"',++i)?(++i,'""'):'"':"");return t[e]=Ae?ae(['"""',E.slice(0,i)],R):R,E.slice(i).replace(ie,"")}}Ke===null&&T.nowrap(j),jt(E+`
`)||y(b("Bad multi-line basic string"+g(" at ")));for(const i=[E];;){const r=T.must();let R=Ys(r);if(r.length!==R){const _=r.slice(0,R);jt(_)||y(b("Bad multi-line basic string"+g(" at ")));const o=ci(i.join(`
`)+`
`+_,Ke,n)+(r.startsWith('"',R+=3)?r.startsWith('"',++R)?(++R,'""'):'"':"");return Ae?(n?i.unshift('"""'):i[0]=`"""${E}`,i[i.length]=`${_}"""`,t[e]=ae(i,o)):t[e]=o,r.slice(R).replace(ie,"")}jt(r+`
`)||y(b("Bad multi-line basic string"+g(" at "))),i[i.length]=r}}),Rs=Ye(null),An=t=>Rs[t]||(Rs[t]=Ee(t)),wE=Ee("this"),{test:OS}=v(/\r?\n/g),VE=(t,e)=>{if(e in t){const E=t[e];if(typeof E!="string")throw V(`the value of comment must be a string, while "${E===null?"null":typeof E}" type is found`);if(OS(E))throw b("the value of comment must be a string and can not include newline");return` #${E}`}return""},Zt=(t,e)=>e in Rs?VE(t,Rs[e]):"",{test:QR}=v(Fa),{test:oS}=v(/^\[[\t ]*]/),qR=t=>{let e=t;const E=[];let s=-1;for(;;){if(e||y(b("Empty bare key"+g(" at "))),e[0]==='"'){const n=pR(e);_E.test(E[++s]=Rn(e.slice(1,n)))||y(te("Key not allowed"+g(" at "))),e=e.slice(n+1)}else{const n=e[0]==="'",i=((n?TE:sE)(e)||y(b(`Bad ${n?"literal string":"bare"} key`+g(" at "))))[0];e=e.slice(i.length),_E.test(E[++s]=n?i.slice(1,-1):i)||y(te("Key not allowed"+g(" at ")))}if(Ra(e))e=e.replace(Aa,"");else break}if(dR){const n=t.slice(0,-e.length);(PR(n)||aE&&n==="null")&&y(b("Bad bare key disabled by xOptions.string"+g(" at ")))}if(Ze){let n=s;do E[n]||y(b("Empty key is not allowed before TOML v0.5"+g(", which at ")));while(n--)}const T=E[s];return E.length=s,{leadingKeys:E,finalKey:T,lineRest:e}},IS=(t,e)=>{if(e[0]==="<"){const{1:s}={2:e}=ea(e)||y(b("Bad tag "+g(" at ")));switch(nt(s,t,null),e&&e[0]){case",":case"]":case"":case"#":return t[t.length]=re,e}}switch(e[0]){case"'":return kR(ts(t),t.length,e);case'"':return JR(ts(t),t.length,e);case"{":return ve||y(b("Inline Table is not allowed before TOML v0.4"+g(", which at "))),ZR(qT(t),t.length,e);case"[":return jR(jT(t),t.length,e)}const{1:E}={2:e}=cR(e)||y(b("Bad atom value"+g(" at ")));return E==="true"?Es(t)[t.length]=!0:E==="false"?Es(t)[t.length]=!1:aE&&E==="null"?QT(t)[t.length]=null:E.includes(":")?E.includes("-")?QR(E)?en(t)[t.length]=new YR(E):(_e||y(b("Local Date-Time is not allowed before TOML v0.5"+g(", which at "))),tn(t)[t.length]=new wR(E)):(_e||y(b("Local Time is not allowed before TOML v0.5"+g(", which at "))),sn(t)[t.length]=new WR(E)):E.indexOf("-")!==E.lastIndexOf("-")&&E[0]!=="-"?(_e||y(b("Local Date is not allowed before TOML v0.5"+g(", which at "))),En(t)[t.length]=new VR(E)):E.includes(".")||E.includes("n")||(E.includes("e")||E.includes("E"))&&!E.startsWith("0x")?ZT(t)[t.length]=Ae?ae(E,rs(E)):rs(E):zT(t)[t.length]=Ae?ae(E,is(E)):is(E),e},jR=function*(t,e,E){const s=t[e]=BR(ma);if(oS(E))return gt(s,E[1]==="]"?0:3),E.slice(E.indexOf("]")).replace(fe,"");const T=new Is("Static Array",E.length);let n=E.startsWith("[ ")||E.startsWith("[	")?3:0;for(E=E.replace(fe,"");!E||E[0]==="#";)n=null,E=T.must().replace(ie,"");if(E[0]==="]")return n===null||gt(s,n),E.replace(fe,"");for(;;){const i=IS(s,E);for(E=typeof i=="string"?i:yield i;!E||E[0]==="#";)n=null,E=T.must().replace(ie,"");if(E[0]===","){for(E=E.replace(fe,"");!E||E[0]==="#";)n=null,E=T.must().replace(ie,"");if(E[0]==="]")break}else{if(E[0]==="]")break;throw y(b("Unexpect character in static array item value"+g(", which is found at ")))}}return n===null||gt(s,n),E.replace(fe,"")},ZR=function*(t,e,E){const s=t[e]=new Pe(XT,v_);if(JT){const T=new Is("Inline Table",E.length);E=E.replace(fe,"");let n=!0;for(;;){for(;!E||E[0]==="#";)n=!1,E=T.must().replace(ie,"");if(E[0]==="}")break;const i=_n(s,E),r=an(i);if(E=typeof r=="string"?r:yield r,E){if(E[0]==="#"){es&&(i.table[An(i.finalKey)]=E.slice(1)),n=!1;do E=T.must().replace(ie,"");while(!E||E[0]==="#")}}else{n=!1;do E=T.must().replace(ie,"");while(!E||E[0]==="#")}E[0]===","&&(E=E.replace(fe,""))}n||gt(s,!1)}else if(E=E.replace(fe,"")||y(b("Inline Table is intended to appear on a single line"+g(", which broken at "))),E[0]!=="}")for(;;){E[0]==="#"&&y(b("Inline Table is intended to appear on a single line"+g(", which broken at ")));const T=an(_n(s,E));if(E=(typeof T=="string"?T:yield T)||y(b("Inline Table is intended to appear on a single line"+g(", which broken at "))),E[0]==="}")break;E[0]===","&&(E=E.replace(fe,"")||y(b("Inline Table is intended to appear on a single line"+g(", which broken at "))),E[0]==="}"&&y(b("The last property of an Inline Table can not have a trailing comma"+g(", which was found at "))))}return E.replace(fe,"")},_n=(t,e)=>{const{leadingKeys:E,finalKey:s,tag:T}={lineRest:e}=aa(qR(e));return{table:SS(t,E),finalKey:s,tag:T,lineRest:e}},an=({finalKey:t,tag:e,lineRest:E,table:s})=>{if(t in s&&y(te("Duplicate property definition"+g(" at "))),e)switch(nt(e,null,s,t),E&&E[0]){case",":case"}":case"":case"#":return s[t]=re,E}switch(E&&E[0]){case"'":return kR(s,t,E);case'"':return JR(s,t,E);case"{":return ve||y(b("Inline Table is not allowed before TOML v0.4"+g(", which at "))),ZR(s,t,E);case"[":return jR(s,t,E)}const{1:T}={2:E}=cR(E)||y(b("Bad atom value"+g(" at ")));return T==="true"?s[t]=!0:T==="false"?s[t]=!1:aE&&T==="null"?s[t]=null:T.includes(":")?T.includes("-")?QR(T)?s[t]=new YR(T):(_e||y(b("Local Date-Time is not allowed before TOML v0.5"+g(", which at "))),s[t]=new wR(T)):(_e||y(b("Local Time is not allowed before TOML v0.5"+g(", which at "))),s[t]=new WR(T)):T.indexOf("-")!==T.lastIndexOf("-")&&T[0]!=="-"?(_e||y(b("Local Date is not allowed before TOML v0.5"+g(", which at "))),s[t]=new VR(T)):s[t]=T.includes(".")||T.includes("n")||(T.includes("e")||T.includes("E"))&&!T.startsWith("0x")?Ae?ae(T,rs(T)):rs(T):Ae?ae(T,is(T)):is(T),E},NS=()=>{const t=new Pe;let e=t;for(;Q_();){const E=J_().replace(ie,"");if(E)if(E[0]==="["){const{leadingKeys:s,finalKey:T,asArrayItem:n,tag:i,lineRest:r}=_a(E,qR),R=_S(t,s);r&&(r[0]==="#"||y(b("Unexpect charachtor after table header"+g(" at ")))),e=aS(R,T,n,i),es&&r&&(e[wE]=n?r.slice(1):R[An(T)]=r.slice(1))}else if(E[0]==="#")Pt(E)&&y(b("Control characters other than Tab are not permitted in comments"+g(", which was found at ")));else{const s=_n(e,E);let T=an(s);typeof T=="string"||(T=UR(T)),T&&(T[0]==="#"||y(b("Unexpect charachtor after key/value pair"+g(" at "))),es&&(s.table[An(s.finalKey)]=T.slice(1)))}}return t},lS=Number.MAX_SAFE_INTEGER,LS=Date.prototype,hi=String.prototype.valueOf,uS=(function(){if($e.bind){var t=$e.bind(hi);return function(E){try{t(E)}catch{return!1}return!0}}return function(E){try{hi.apply(E)}catch{return!1}return!0}})(),pi=Number.prototype.valueOf,CS=(function(){if($e.bind){var t=$e.bind(pi);return function(E){try{t(E)}catch{return!1}return!0}}return function(E){try{pi.apply(E)}catch{return!1}return!0}})(),cS=(function(){if(typeof BigInt=="function"){var t=$e.bind(BigInt.prototype.valueOf);return function(E){try{t(E)}catch{return!1}return!0}}return function(){return!1}})(),Di=BigInt.prototype.valueOf,fS=(function(){if($e.bind){var t=$e.bind(Di);return function(E){try{t(E)}catch{return!1}return!0}}return function(E){try{Di.apply(E)}catch{return!1}return!0}})(),hS=Ye({...H_([...JE(32)].map((t,e)=>[hn(e),"\\u"+e.toString(16).toUpperCase().padStart(4,"0")])),"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"','"""':'""\\"',"\\":"\\\\","":"\\u007F"}),{test:pS}=v(/[\x00-\x08\x0A-\x1F'\x7F]/),DS=/[^\x00-\x08\x0A-\x1F"\\\x7F]+|./gs,{test:PS}=v(/^[\x00-\x08\x0A-\x1F"\\\x7F]/),zR=t=>{if(pS(t)){const e=t.match(DS);let E=e.length;do PS(e[--E])&&(e[E]=hS[e[E]]);while(E);return`"${e.join("")}"`}return`'${t}'`},{test:qL}=v(/[\x00-\x08\x0A-\x1F\x7F]|'''/),{test:jL}=v(/[\x00-\x08\x0B-\x1F\x7F]|'''/),{test:ZL}=v(/[\x00-\x08\x0A-\x1F\\\x7F]|"""/),{test:zL}=v(/^(?:[\x00-\x08\x0A-\x1F\\\x7F]|""")/),eA=Float64Array,tA=Uint8Array,Pi=-Yt,{test:dS}=v(/^-?\d+$/),di=t=>dS(t)?t+".0":t,EA=new eA([Cs]),sA=new tA(EA.buffer),Mi=sA[7],MS=Mi===new tA(new eA([-Cs]).buffer)[7]?t=>t?t===Yt?"inf":t===Pi?"-inf":di(""+t):t===t?vT(t,0)?"0.0":"-0.0":"nan":t=>t?t===Yt?"inf":t===Pi?"-inf":di(""+t):t===t?vT(t,0)?"0.0":"-0.0":(EA[0]=t,sA[7]===Mi?"nan":"-nan"),US=Zr.bind(LS),{test:mS}=v(/^[\w-]+$/),xs=t=>mS(t)?t:zR(t),GS=/[^.]+/,yS=t=>`'${t}'`,$s=t=>PR(t)?t.replace(GS,yS):t==="null"?"'null'":t;class Ui extends JE{constructor(E){super();W(this,"document");return this.document=E,this}[Ee.toPrimitive](){return this.join(this.document.newline)}appendNewline(){this[this.length]=""}set appendLine(E){this[this.length]=E}set appendInline(E){this[this.length-1]+=E}set appendInlineIf(E){E&&(this[this.length-1]+=E)}*assignBlock(E,s,T,n){const{document:i}=this,{newlineUnderHeader:r,newlineUnderSectionButPair:R}=i,_=s?i.newlineUnderPairButDotted:!1,o=s?i.newlineUnderDotted:i.newlineUnderPair;for(const O of n){const I=T[O],C=xs(O),h=E+C;if(HE(I)){const{length:a}=I;if(a){let N=I[0];if(CE(N)){const G=`[[${h}]]`,D=h+".";let U=0,u=N;for(;;){const f=i.appendSection();if(f[0]=G+VE(u,wE),r?(f[1]="",yield f.assignBlock(D,"",u,me(u)),R&&f.length!==2&&f.appendNewline()):(yield f.assignBlock(D,"",u,me(u)),R&&f.appendNewline()),++U===a)break;if(u=I[U],!CE(u))throw V("the first table item marked by Section() means the parent array is an array of tables, which can not include other types or table not marked by Section() any more in the rest items")}continue}else{let G=1;for(;G!==a;)if(CE(I[G++]))throw V("if an array is not array of tables, it can not include any table that marked by Section()")}}}else if(CE(I)){const a=i.appendSection();a[0]=`[${h}]${i.preferCommentForThis?VE(I,wE)||Zt(T,O):Zt(T,O)||VE(I,wE)}`,r?(a[1]="",yield a.assignBlock(h+".","",I,me(I)),R&&a.length!==2&&a.appendNewline()):(yield a.assignBlock(h+".","",I,me(I)),R&&a.appendNewline());continue}const L=s+C;this.appendLine=$s(L)+" = ";const S=this.value("",I,!0);S?(--this.length,yield this.assignBlock(h+".",L+".",I,S),_&&this.appendNewline()):(this.appendInlineIf=Zt(T,O),o&&this.appendNewline())}}value(E,s,T){switch(typeof s){case"object":if(s===null){if(this.document.nullDisabled)throw V('toml can not stringify "null" type value without truthy options.xNull');this.appendInline="null";break}const n=W_(s);if(HE(s)){if(n===re)this.staticArray(E,s);else{const{$singlelineArray:i=n}=this.document;this.singlelineArray(E,s,i)}break}if(n!==re){n||this.document.multilineTableDisabled?this.inlineTable(E,s):this.multilineTable(E,s,this.document.multilineTableComma);break}if(US(s)){this.appendInline=s.toISOString().replace("T",this.document.T).replace("Z",this.document.Z);break}if(nn in s){const i=s[nn];if(typeof i=="string")this.appendInline=i;else if(HE(i)){const{length:r}=i;if(r){this.appendInline=i[0];let R=1;for(;R!==r;)this.appendLine=i[R++]}else throw V("literal value is broken")}else throw V("literal value is broken");break}if(uS(s))throw V("TOML.stringify refuse to handle [object String]");if(CS(s))throw V("TOML.stringify refuse to handle [object Number]");if(cS(s))throw V("TOML.stringify refuse to handle [object BigInt]");if(fS(s))throw V("TOML.stringify refuse to handle [object Boolean]");if(T){const i=me(s);if(i.length)return i;this.appendInline="{ }"}else this.inlineTable(E,s);break;case"bigint":this.appendInline=""+s;break;case"number":this.appendInline=this.document.asInteger(s)?vT(s,-0)?"-0":""+s:MS(s);break;case"string":this.appendInline=zR(s);break;case"boolean":this.appendInline=s?"true":"false";break;default:throw V(`toml can not stringify "${typeof s}" type value`)}return null}singlelineArray(E,s,T){const{length:n}=s;if(n){this.appendInline=T&2?"[ ":"[",this.value(E,s[0],!1);let i=1;for(;i!==n;)this.appendInline=", ",this.value(E,s[i++],!1);this.appendInline=T&2?" ]":"]"}else this.appendInline=T&1?"[ ]":"[]"}staticArray(E,s){this.appendInline="[";const T=E+this.document.indent,{length:n}=s;let i=0;for(;i!==n;)this.appendLine=T,this.value(T,s[i++],!1),this.appendInline=",";this.appendLine=E+"]"}inlineTable(E,s){const T=me(s);T.length?(this.appendInline="{ ",this.assignInline(E,s,"",T),this[this.length-1]=this[this.length-1].slice(0,-2)+" }"):this.appendInline="{ }"}multilineTable(E,s,T){this.appendInline="{",this.assignMultiline(E,s,"",me(s),T),this.appendLine=E+"}"}assignInline(E,s,T,n){for(const i of n){const r=s[i],R=T+xs(i),_=this.appendInline=$s(R)+" = ",o=this.value(E,r,!0);o?(this[this.length-1]=this[this.length-1].slice(0,-_.length),this.assignInline(E,r,R+".",o)):this.appendInline=", "}}assignMultiline(E,s,T,n,i){const r=E+this.document.indent;for(const R of n){const _=s[R],o=T+xs(R);this.appendLine=r+$s(o)+" = ";const O=this.value(r,_,!0);O?(--this.length,this.assignMultiline(E,_,o+".",O,i)):i?this.appendInline=","+Zt(s,R):this.appendInlineIf=Zt(s,R)}}}const mi=Ye({document:0,section:1,header:2,pairs:3,pair:4}),{test:gS}=v(/^[\t ]*$/),BS=()=>!1;class HS extends JE{constructor(E){super();W(this,0,new Ui(this));W(this,"asInteger",BS);W(this,"newline","");W(this,"newlineUnderSection",!0);W(this,"newlineUnderSectionButPair",!0);W(this,"newlineUnderHeader",!0);W(this,"newlineUnderPair",!1);W(this,"newlineUnderPairButDotted",!1);W(this,"newlineUnderDotted",!1);W(this,"indent","	");W(this,"T","T");W(this,"Z","Z");W(this,"nullDisabled",!0);W(this,"multilineTableDisabled",!0);W(this,"multilineTableComma");W(this,"preferCommentForThis",!1);W(this,"$singlelineArray");if(E==null)return this;const{integer:s}=E;if(s!==void 0)if(s===lS)this.asInteger=Dt;else if(typeof s=="number"){if(!Dt(s))throw ee("TOML.stringify(,{integer}) can only be a safe integer");const I=s>=0?s:-s-1,C=s>=0?-s:s;this.asInteger=h=>Dt(h)&&C<=h&&h<=I}else throw V("TOML.stringify(,{integer}) can only be number");const{newline:T}=E;if(T!==void 0)if(T===`
`||T===`\r
`)this.newline=T;else throw typeof T=="string"?b("TOML.stringify(,{newline}) can only be valid TOML newline"):V("TOML.stringify(,{newline}) can only be string");const{preferCommentFor:n}=E;if(n!==void 0)if(n==="this"||n==="key")this.preferCommentForThis=n==="this";else throw V("TOML.stringify(,{preferCommentFor) can only be 'key' or 'this'");const{[E.newlineAround||"header"]:i=mi.header}=mi;this.newlineUnderSection=i>0,this.newlineUnderSectionButPair=i===1||i===2,this.newlineUnderHeader=i>1,this.newlineUnderPair=i>2,this.newlineUnderPairButDotted=i===3,this.newlineUnderDotted=i>3;const{indent:r}=E;if(r!==void 0)if(typeof r=="string"){if(!gS(r))throw b("TOML.stringify(,{indent}) can only include Tab or Space");this.indent=r}else if(typeof r=="number"){if(!Dt(r))throw ee(`TOML.stringify(,{indent:${r}}) is out of range`);this.indent=" ".repeat(r)}else throw V(`TOML.stringify(,{indent}) can not be "${typeof r}" type`);const{T:R}=E;if(R!==void 0)if(R===" "||R==="t"||R==="T")this.T=R;else throw V('TOML.stringify(,{T}) can only be "T" or " " or "t"');const{Z:_}=E;if(_!==void 0)if(_==="z"||_==="Z")this.Z=_;else throw V('TOML.stringify(,{Z}) can only be "Z" or "z"');E.xNull&&(this.nullDisabled=!1);const{xBeforeNewlineInMultilineTable:o}=E;if(o!==void 0)if(o===""||o===",")this.multilineTableDisabled=!1,this.multilineTableComma=!!o;else throw V('TOML.stringify(,{xBeforeNewlineInMultilineTable}) can only be "" or ","');const O=E.forceInlineArraySpacing;switch(O){case void 0:break;case 0:case 1:case 2:case 3:this.$singlelineArray=O;break;default:throw typeof O=="number"?ee(`array inline mode must be 0 | 1 | 2 | 3, not including ${O}`):V(`array inline mode must be "number" type, not including ${O===null?'"null"':typeof O}`)}return this}get["constructor"](){return JE}appendSection(){return this[this.length]=new Ui(this)}}const TA=new At,bS=_t.bind(TA),FS=Xt.bind(TA),eu=(t,e)=>{const E=new HS(e),s=E[0];if(s[0]="",UR(s.assignBlock("","",t,me(t))),E.newlineUnderSectionButPair&&s.length!==1&&s.appendNewline(),E.newlineUnderSection||E[E.length-1].appendNewline(),E.newline)return E.join(E.newline);const T=E.flat();return bS(T),T},YS=new da("utf-8",Ye({fatal:!0,ignoreBOM:!1})),fE=t=>{if(Da(t)?t.length!==t.byteLength:!Pa(t))throw V("only Uint8Array or ArrayBuffer is acceptable");try{return YS.decode(t)}catch{throw te("A TOML doc must be a (ful-scalar) valid UTF-8 file, without any unknown code point.")}},hE=t=>"byteLength"in t,{test:wS}=v(/[\uD800-\uDFFF]/u),ks=t=>{if(U_(wS(t)))throw te("A TOML doc must be a (ful-scalar) valid UTF-8 file, without any uncoupled UCS-4 character code.")};let Js=!1;const Me=(t,e,E,s,T,n)=>{let i="";if(typeof t=="object"&&t){if(HE(t))throw V(FS(t)?"TOML.parse(array from TOML.stringify(,{newline?}))":"TOML.parse(array)");if(hE(t))t=fE(t);else{if(i=t.path,typeof i!="string")throw V("TOML.parse(source.path)");const{data:O,require:I=typeof require=="function"?require:re}=t;if(I){const{resolve:C}=I;if(C!=null){const{paths:h}=C;if(h!=null){const L=cn(h,C,[""]);if(L!=null){const S=L[0];if(S!=null){const a=S.replace(/node_modules$/,"");if(a&&(i=I("path").resolve(a,i),typeof i!="string"))throw V("TOML.parse(source.require('path').resolve)")}}}}if(O===re){const h=I("fs").readFileSync(i);if(typeof h=="object"&&h&&hE(h))t=fE(h);else throw V("TOML.parse(source.require('fs').readFileSync)")}else if(typeof O=="string")ks(t=O);else if(typeof O=="object"&&O&&hE(O))t=fE(O);else throw V("TOML.parse(source.data)")}else{if(O===re)throw V("TOML.parse(source.data|source.require)");if(typeof O=="string")ks(t=O);else if(typeof O=="object"&&O&&hE(O))t=fE(O);else throw V("TOML.parse(source.data)")}}}else if(typeof t=="string")ks(t);else throw V("TOML.parse(source)");let r,R;if(typeof E=="object"&&E){if(s!==re||T!==re)throw V("options mode ? args mode");r=E.joiner,s=E.bigint,R=E.keys,T=E.x,n=""}else r=E;let _,o;if(Js)throw te("parsing during parsing.");Js=!0;try{pa(e,r,s,R,T,n),k_(t,i),t&&t[0]==="\uFEFF"&&y(V("TOML content (string) should not start with BOM (U+FEFF)"+g(" at "))),_=NS(),o=fa()}finally{q_(),ha(),Js=!1}return o&&o(),_},tu=yt((t,e,E,s,T)=>typeof e=="number"?Me(t,e,E,s,T,",,"):Me(t,1,e,E,s,","),{"1.0":(t,e,E,s)=>Me(t,.1,e,E,s,","),1:(t,e,E,s)=>Me(t,1,e,E,s,","),.5:(t,e,E,s)=>Me(t,.5,e,E,s,","),.4:(t,e,E,s)=>Me(t,.4,e,E,s,","),.3:(t,e,E,s)=>Me(t,.3,e,E,s,","),.2:(t,e,E,s)=>Me(t,.2,e,E,s,","),.1:(t,e,E,s)=>Me(t,.1,e,E,s,",")});var Qs={exports:{}},zt={},pE={exports:{}},qs={},js={},Gi;function Bn(){if(Gi)return js;Gi=1;function t(s){this.__parent=s,this.__character_count=0,this.__indent_count=-1,this.__alignment_count=0,this.__wrap_point_index=0,this.__wrap_point_character_count=0,this.__wrap_point_indent_count=-1,this.__wrap_point_alignment_count=0,this.__items=[]}t.prototype.clone_empty=function(){var s=new t(this.__parent);return s.set_indent(this.__indent_count,this.__alignment_count),s},t.prototype.item=function(s){return s<0?this.__items[this.__items.length+s]:this.__items[s]},t.prototype.has_match=function(s){for(var T=this.__items.length-1;T>=0;T--)if(this.__items[T].match(s))return!0;return!1},t.prototype.set_indent=function(s,T){this.is_empty()&&(this.__indent_count=s||0,this.__alignment_count=T||0,this.__character_count=this.__parent.get_indent_size(this.__indent_count,this.__alignment_count))},t.prototype._set_wrap_point=function(){this.__parent.wrap_line_length&&(this.__wrap_point_index=this.__items.length,this.__wrap_point_character_count=this.__character_count,this.__wrap_point_indent_count=this.__parent.next_line.__indent_count,this.__wrap_point_alignment_count=this.__parent.next_line.__alignment_count)},t.prototype._should_wrap=function(){return this.__wrap_point_index&&this.__character_count>this.__parent.wrap_line_length&&this.__wrap_point_character_count>this.__parent.next_line.__character_count},t.prototype._allow_wrap=function(){if(this._should_wrap()){this.__parent.add_new_line();var s=this.__parent.current_line;return s.set_indent(this.__wrap_point_indent_count,this.__wrap_point_alignment_count),s.__items=this.__items.slice(this.__wrap_point_index),this.__items=this.__items.slice(0,this.__wrap_point_index),s.__character_count+=this.__character_count-this.__wrap_point_character_count,this.__character_count=this.__wrap_point_character_count,s.__items[0]===" "&&(s.__items.splice(0,1),s.__character_count-=1),!0}return!1},t.prototype.is_empty=function(){return this.__items.length===0},t.prototype.last=function(){return this.is_empty()?null:this.__items[this.__items.length-1]},t.prototype.push=function(s){this.__items.push(s);var T=s.lastIndexOf(`
`);T!==-1?this.__character_count=s.length-T:this.__character_count+=s.length},t.prototype.pop=function(){var s=null;return this.is_empty()||(s=this.__items.pop(),this.__character_count-=s.length),s},t.prototype._remove_indent=function(){this.__indent_count>0&&(this.__indent_count-=1,this.__character_count-=this.__parent.indent_size)},t.prototype._remove_wrap_indent=function(){this.__wrap_point_indent_count>0&&(this.__wrap_point_indent_count-=1)},t.prototype.trim=function(){for(;this.last()===" ";)this.__items.pop(),this.__character_count-=1},t.prototype.toString=function(){var s="";return this.is_empty()?this.__parent.indent_empty_lines&&(s=this.__parent.get_indent_string(this.__indent_count)):(s=this.__parent.get_indent_string(this.__indent_count,this.__alignment_count),s+=this.__items.join("")),s};function e(s,T){this.__cache=[""],this.__indent_size=s.indent_size,this.__indent_string=s.indent_char,s.indent_with_tabs||(this.__indent_string=new Array(s.indent_size+1).join(s.indent_char)),T=T||"",s.indent_level>0&&(T=new Array(s.indent_level+1).join(this.__indent_string)),this.__base_string=T,this.__base_string_length=T.length}e.prototype.get_indent_size=function(s,T){var n=this.__base_string_length;return T=T||0,s<0&&(n=0),n+=s*this.__indent_size,n+=T,n},e.prototype.get_indent_string=function(s,T){var n=this.__base_string;return T=T||0,s<0&&(s=0,n=""),T+=s*this.__indent_size,this.__ensure_cache(T),n+=this.__cache[T],n},e.prototype.__ensure_cache=function(s){for(;s>=this.__cache.length;)this.__add_column()},e.prototype.__add_column=function(){var s=this.__cache.length,T=0,n="";this.__indent_size&&s>=this.__indent_size&&(T=Math.floor(s/this.__indent_size),s-=T*this.__indent_size,n=new Array(T+1).join(this.__indent_string)),s&&(n+=new Array(s+1).join(" ")),this.__cache.push(n)};function E(s,T){this.__indent_cache=new e(s,T),this.raw=!1,this._end_with_newline=s.end_with_newline,this.indent_size=s.indent_size,this.wrap_line_length=s.wrap_line_length,this.indent_empty_lines=s.indent_empty_lines,this.__lines=[],this.previous_line=null,this.current_line=null,this.next_line=new t(this),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1,this.__add_outputline()}return E.prototype.__add_outputline=function(){this.previous_line=this.current_line,this.current_line=this.next_line.clone_empty(),this.__lines.push(this.current_line)},E.prototype.get_line_number=function(){return this.__lines.length},E.prototype.get_indent_string=function(s,T){return this.__indent_cache.get_indent_string(s,T)},E.prototype.get_indent_size=function(s,T){return this.__indent_cache.get_indent_size(s,T)},E.prototype.is_empty=function(){return!this.previous_line&&this.current_line.is_empty()},E.prototype.add_new_line=function(s){return this.is_empty()||!s&&this.just_added_newline()?!1:(this.raw||this.__add_outputline(),!0)},E.prototype.get_code=function(s){this.trim(!0);var T=this.current_line.pop();T&&(T[T.length-1]===`
`&&(T=T.replace(/\n+$/g,"")),this.current_line.push(T)),this._end_with_newline&&this.__add_outputline();var n=this.__lines.join(`
`);return s!==`
`&&(n=n.replace(/[\n]/g,s)),n},E.prototype.set_wrap_point=function(){this.current_line._set_wrap_point()},E.prototype.set_indent=function(s,T){return s=s||0,T=T||0,this.next_line.set_indent(s,T),this.__lines.length>1?(this.current_line.set_indent(s,T),!0):(this.current_line.set_indent(),!1)},E.prototype.add_raw_token=function(s){for(var T=0;T<s.newlines;T++)this.__add_outputline();this.current_line.set_indent(-1),this.current_line.push(s.whitespace_before),this.current_line.push(s.text),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=!1},E.prototype.add_token=function(s){this.__add_space_before_token(),this.current_line.push(s),this.space_before_token=!1,this.non_breaking_space=!1,this.previous_token_wrapped=this.current_line._allow_wrap()},E.prototype.__add_space_before_token=function(){this.space_before_token&&!this.just_added_newline()&&(this.non_breaking_space||this.set_wrap_point(),this.current_line.push(" "))},E.prototype.remove_indent=function(s){for(var T=this.__lines.length;s<T;)this.__lines[s]._remove_indent(),s++;this.current_line._remove_wrap_indent()},E.prototype.trim=function(s){for(s=s===void 0?!1:s,this.current_line.trim();s&&this.__lines.length>1&&this.current_line.is_empty();)this.__lines.pop(),this.current_line=this.__lines[this.__lines.length-1],this.current_line.trim();this.previous_line=this.__lines.length>1?this.__lines[this.__lines.length-2]:null},E.prototype.just_added_newline=function(){return this.current_line.is_empty()},E.prototype.just_added_blankline=function(){return this.is_empty()||this.current_line.is_empty()&&this.previous_line.is_empty()},E.prototype.ensure_empty_line_above=function(s,T){for(var n=this.__lines.length-2;n>=0;){var i=this.__lines[n];if(i.is_empty())break;if(i.item(0).indexOf(s)!==0&&i.item(-1)!==T){this.__lines.splice(n+1,0,new t(this)),this.previous_line=this.__lines[this.__lines.length-2];break}n--}},js.Output=E,js}var Zs={},yi;function nA(){if(yi)return Zs;yi=1;function t(e,E,s,T){this.type=e,this.text=E,this.comments_before=null,this.newlines=s||0,this.whitespace_before=T||"",this.parent=null,this.next=null,this.previous=null,this.opened=null,this.closed=null,this.directives=null}return Zs.Token=t,Zs}var zs={},gi;function iA(){return gi||(gi=1,(function(t){var e="\\x23\\x24\\x40\\x41-\\x5a\\x5f\\x61-\\x7a",E="\\x24\\x30-\\x39\\x41-\\x5a\\x5f\\x61-\\x7a",s="\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc",T="\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f",n="\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]+\\}",i="(?:"+n+"|["+e+s+"])",r="(?:"+n+"|["+E+s+T+"])*";t.identifier=new RegExp(i+r,"g"),t.identifierStart=new RegExp(i),t.identifierMatch=new RegExp("(?:"+n+"|["+E+s+T+"])+"),t.newline=/[\n\r\u2028\u2029]/,t.lineBreak=new RegExp(`\r
|`+t.newline.source),t.allLineBreaks=new RegExp(t.lineBreak.source,"g")})(zs)),zs}var eT={},eE={},Bi;function Hn(){if(Bi)return eE;Bi=1;function t(s,T){this.raw_options=e(s,T),this.disabled=this._get_boolean("disabled"),this.eol=this._get_characters("eol","auto"),this.end_with_newline=this._get_boolean("end_with_newline"),this.indent_size=this._get_number("indent_size",4),this.indent_char=this._get_characters("indent_char"," "),this.indent_level=this._get_number("indent_level"),this.preserve_newlines=this._get_boolean("preserve_newlines",!0),this.max_preserve_newlines=this._get_number("max_preserve_newlines",32786),this.preserve_newlines||(this.max_preserve_newlines=0),this.indent_with_tabs=this._get_boolean("indent_with_tabs",this.indent_char==="	"),this.indent_with_tabs&&(this.indent_char="	",this.indent_size===1&&(this.indent_size=4)),this.wrap_line_length=this._get_number("wrap_line_length",this._get_number("max_char")),this.indent_empty_lines=this._get_boolean("indent_empty_lines"),this.templating=this._get_selection_list("templating",["auto","none","angular","django","erb","handlebars","php","smarty"],["auto"])}t.prototype._get_array=function(s,T){var n=this.raw_options[s],i=T||[];return typeof n=="object"?n!==null&&typeof n.concat=="function"&&(i=n.concat()):typeof n=="string"&&(i=n.split(/[^a-zA-Z0-9_\/\-]+/)),i},t.prototype._get_boolean=function(s,T){var n=this.raw_options[s],i=n===void 0?!!T:!!n;return i},t.prototype._get_characters=function(s,T){var n=this.raw_options[s],i=T||"";return typeof n=="string"&&(i=n.replace(/\\r/,"\r").replace(/\\n/,`
`).replace(/\\t/,"	")),i},t.prototype._get_number=function(s,T){var n=this.raw_options[s];T=parseInt(T,10),isNaN(T)&&(T=0);var i=parseInt(n,10);return isNaN(i)&&(i=T),i},t.prototype._get_selection=function(s,T,n){var i=this._get_selection_list(s,T,n);if(i.length!==1)throw new Error("Invalid Option Value: The option '"+s+`' can only be one of the following values:
`+T+`
You passed in: '`+this.raw_options[s]+"'");return i[0]},t.prototype._get_selection_list=function(s,T,n){if(!T||T.length===0)throw new Error("Selection list cannot be empty.");if(n=n||[T[0]],!this._is_valid_selection(n,T))throw new Error("Invalid Default Value!");var i=this._get_array(s,n);if(!this._is_valid_selection(i,T))throw new Error("Invalid Option Value: The option '"+s+`' can contain only the following values:
`+T+`
You passed in: '`+this.raw_options[s]+"'");return i},t.prototype._is_valid_selection=function(s,T){return s.length&&T.length&&!s.some(function(n){return T.indexOf(n)===-1})};function e(s,T){var n={};s=E(s);var i;for(i in s)i!==T&&(n[i]=s[i]);if(T&&s[T])for(i in s[T])n[i]=s[T][i];return n}function E(s){var T={},n;for(n in s){var i=n.replace(/-/g,"_");T[i]=s[n]}return T}return eE.Options=t,eE.normalizeOpts=E,eE.mergeOpts=e,eE}var Hi;function rA(){if(Hi)return eT;Hi=1;var t=Hn().Options,e=["before-newline","after-newline","preserve-newline"];function E(s){t.call(this,s,"js");var T=this.raw_options.brace_style||null;T==="expand-strict"?this.raw_options.brace_style="expand":T==="collapse-preserve-inline"?this.raw_options.brace_style="collapse,preserve-inline":this.raw_options.braces_on_own_line!==void 0&&(this.raw_options.brace_style=this.raw_options.braces_on_own_line?"expand":"collapse");var n=this._get_selection_list("brace_style",["collapse","expand","end-expand","none","preserve-inline"]);this.brace_preserve_inline=!1,this.brace_style="collapse";for(var i=0;i<n.length;i++)n[i]==="preserve-inline"?this.brace_preserve_inline=!0:this.brace_style=n[i];this.unindent_chained_methods=this._get_boolean("unindent_chained_methods"),this.break_chained_methods=this._get_boolean("break_chained_methods"),this.space_in_paren=this._get_boolean("space_in_paren"),this.space_in_empty_paren=this._get_boolean("space_in_empty_paren"),this.jslint_happy=this._get_boolean("jslint_happy"),this.space_after_anon_function=this._get_boolean("space_after_anon_function"),this.space_after_named_function=this._get_boolean("space_after_named_function"),this.keep_array_indentation=this._get_boolean("keep_array_indentation"),this.space_before_conditional=this._get_boolean("space_before_conditional",!0),this.unescape_strings=this._get_boolean("unescape_strings"),this.e4x=this._get_boolean("e4x"),this.comma_first=this._get_boolean("comma_first"),this.operator_position=this._get_selection("operator_position",e),this.test_output_raw=this._get_boolean("test_output_raw"),this.jslint_happy&&(this.space_after_anon_function=!0)}return E.prototype=new t,eT.Options=E,eT}var lt={},tT={},bi;function bn(){if(bi)return tT;bi=1;var t=RegExp.prototype.hasOwnProperty("sticky");function e(E){this.__input=E||"",this.__input_length=this.__input.length,this.__position=0}return e.prototype.restart=function(){this.__position=0},e.prototype.back=function(){this.__position>0&&(this.__position-=1)},e.prototype.hasNext=function(){return this.__position<this.__input_length},e.prototype.next=function(){var E=null;return this.hasNext()&&(E=this.__input.charAt(this.__position),this.__position+=1),E},e.prototype.peek=function(E){var s=null;return E=E||0,E+=this.__position,E>=0&&E<this.__input_length&&(s=this.__input.charAt(E)),s},e.prototype.__match=function(E,s){E.lastIndex=s;var T=E.exec(this.__input);return T&&!(t&&E.sticky)&&T.index!==s&&(T=null),T},e.prototype.test=function(E,s){return s=s||0,s+=this.__position,s>=0&&s<this.__input_length?!!this.__match(E,s):!1},e.prototype.testChar=function(E,s){var T=this.peek(s);return E.lastIndex=0,T!==null&&E.test(T)},e.prototype.match=function(E){var s=this.__match(E,this.__position);return s?this.__position+=s[0].length:s=null,s},e.prototype.read=function(E,s,T){var n="",i;return E&&(i=this.match(E),i&&(n+=i[0])),s&&(i||!E)&&(n+=this.readUntil(s,T)),n},e.prototype.readUntil=function(E,s){var T="",n=this.__position;E.lastIndex=this.__position;var i=E.exec(this.__input);return i?(n=i.index,s&&(n+=i[0].length)):n=this.__input_length,T=this.__input.substring(this.__position,n),this.__position=n,T},e.prototype.readUntilAfter=function(E){return this.readUntil(E,!0)},e.prototype.get_regexp=function(E,s){var T=null,n="g";return s&&t&&(n="y"),typeof E=="string"&&E!==""?T=new RegExp(E,n):E&&(T=new RegExp(E.source,n)),T},e.prototype.get_literal_regexp=function(E){return RegExp(E.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"))},e.prototype.peekUntilAfter=function(E){var s=this.__position,T=this.readUntilAfter(E);return this.__position=s,T},e.prototype.lookBack=function(E){var s=this.__position-1;return s>=E.length&&this.__input.substring(s-E.length,s).toLowerCase()===E},tT.InputScanner=e,tT}var DE={},ET={},Fi;function VS(){if(Fi)return ET;Fi=1;function t(e){this.__tokens=[],this.__tokens_length=this.__tokens.length,this.__position=0,this.__parent_token=e}return t.prototype.restart=function(){this.__position=0},t.prototype.isEmpty=function(){return this.__tokens_length===0},t.prototype.hasNext=function(){return this.__position<this.__tokens_length},t.prototype.next=function(){var e=null;return this.hasNext()&&(e=this.__tokens[this.__position],this.__position+=1),e},t.prototype.peek=function(e){var E=null;return e=e||0,e+=this.__position,e>=0&&e<this.__tokens_length&&(E=this.__tokens[e]),E},t.prototype.add=function(e){this.__parent_token&&(e.parent=this.__parent_token),this.__tokens.push(e),this.__tokens_length+=1},ET.TokenStream=t,ET}var sT={},TT={},Yi;function cs(){if(Yi)return TT;Yi=1;function t(e,E){this._input=e,this._starting_pattern=null,this._match_pattern=null,this._until_pattern=null,this._until_after=!1,E&&(this._starting_pattern=this._input.get_regexp(E._starting_pattern,!0),this._match_pattern=this._input.get_regexp(E._match_pattern,!0),this._until_pattern=this._input.get_regexp(E._until_pattern),this._until_after=E._until_after)}return t.prototype.read=function(){var e=this._input.read(this._starting_pattern);return(!this._starting_pattern||e)&&(e+=this._input.read(this._match_pattern,this._until_pattern,this._until_after)),e},t.prototype.read_match=function(){return this._input.match(this._match_pattern)},t.prototype.until_after=function(e){var E=this._create();return E._until_after=!0,E._until_pattern=this._input.get_regexp(e),E._update(),E},t.prototype.until=function(e){var E=this._create();return E._until_after=!1,E._until_pattern=this._input.get_regexp(e),E._update(),E},t.prototype.starting_with=function(e){var E=this._create();return E._starting_pattern=this._input.get_regexp(e,!0),E._update(),E},t.prototype.matching=function(e){var E=this._create();return E._match_pattern=this._input.get_regexp(e,!0),E._update(),E},t.prototype._create=function(){return new t(this._input,this)},t.prototype._update=function(){},TT.Pattern=t,TT}var wi;function WS(){if(wi)return sT;wi=1;var t=cs().Pattern;function e(E,s){t.call(this,E,s),s?this._line_regexp=this._input.get_regexp(s._line_regexp):this.__set_whitespace_patterns("",""),this.newline_count=0,this.whitespace_before_token=""}return e.prototype=new t,e.prototype.__set_whitespace_patterns=function(E,s){E+="\\t ",s+="\\n\\r",this._match_pattern=this._input.get_regexp("["+E+s+"]+",!0),this._newline_regexp=this._input.get_regexp("\\r\\n|["+s+"]")},e.prototype.read=function(){this.newline_count=0,this.whitespace_before_token="";var E=this._input.read(this._match_pattern);if(E===" ")this.whitespace_before_token=" ";else if(E){var s=this.__split(this._newline_regexp,E);this.newline_count=s.length-1,this.whitespace_before_token=s[this.newline_count]}return E},e.prototype.matching=function(E,s){var T=this._create();return T.__set_whitespace_patterns(E,s),T._update(),T},e.prototype._create=function(){return new e(this._input,this)},e.prototype.__split=function(E,s){E.lastIndex=0;for(var T=0,n=[],i=E.exec(s);i;)n.push(s.substring(T,i.index)),T=i.index+i[0].length,i=E.exec(s);return T<s.length?n.push(s.substring(T,s.length)):n.push(""),n},sT.WhitespacePattern=e,sT}var Vi;function As(){if(Vi)return DE;Vi=1;var t=bn().InputScanner,e=nA().Token,E=VS().TokenStream,s=WS().WhitespacePattern,T={START:"TK_START",RAW:"TK_RAW",EOF:"TK_EOF"},n=function(i,r){this._input=new t(i),this._options=r||{},this.__tokens=null,this._patterns={},this._patterns.whitespace=new s(this._input)};return n.prototype.tokenize=function(){this._input.restart(),this.__tokens=new E,this._reset();for(var i,r=new e(T.START,""),R=null,_=[],o=new E;r.type!==T.EOF;){for(i=this._get_next_token(r,R);this._is_comment(i);)o.add(i),i=this._get_next_token(r,R);o.isEmpty()||(i.comments_before=o,o=new E),i.parent=R,this._is_opening(i)?(_.push(R),R=i):R&&this._is_closing(i,R)&&(i.opened=R,R.closed=i,R=_.pop(),i.parent=R),i.previous=r,r.next=i,this.__tokens.add(i),r=i}return this.__tokens},n.prototype._is_first_token=function(){return this.__tokens.isEmpty()},n.prototype._reset=function(){},n.prototype._get_next_token=function(i,r){this._readWhitespace();var R=this._input.read(/.+/g);return R?this._create_token(T.RAW,R):this._create_token(T.EOF,"")},n.prototype._is_comment=function(i){return!1},n.prototype._is_opening=function(i){return!1},n.prototype._is_closing=function(i,r){return!1},n.prototype._create_token=function(i,r){var R=new e(i,r,this._patterns.whitespace.newline_count,this._patterns.whitespace.whitespace_before_token);return R},n.prototype._readWhitespace=function(){return this._patterns.whitespace.read()},DE.Tokenizer=n,DE.TOKEN=T,DE}var nT={},Wi;function Fn(){if(Wi)return nT;Wi=1;function t(e,E){e=typeof e=="string"?e:e.source,E=typeof E=="string"?E:E.source,this.__directives_block_pattern=new RegExp(e+/ beautify( \w+[:]\w+)+ /.source+E,"g"),this.__directive_pattern=/ (\w+)[:](\w+)/g,this.__directives_end_ignore_pattern=new RegExp(e+/\sbeautify\signore:end\s/.source+E,"g")}return t.prototype.get_directives=function(e){if(!e.match(this.__directives_block_pattern))return null;var E={};this.__directive_pattern.lastIndex=0;for(var s=this.__directive_pattern.exec(e);s;)E[s[1]]=s[2],s=this.__directive_pattern.exec(e);return E},t.prototype.readIgnored=function(e){return e.readUntilAfter(this.__directives_end_ignore_pattern)},nT.Directives=t,nT}var iT={},vi;function RA(){if(vi)return iT;vi=1;var t=cs().Pattern,e={django:!1,erb:!1,handlebars:!1,php:!1,smarty:!1,angular:!1};function E(s,T){t.call(this,s,T),this.__template_pattern=null,this._disabled=Object.assign({},e),this._excluded=Object.assign({},e),T&&(this.__template_pattern=this._input.get_regexp(T.__template_pattern),this._excluded=Object.assign(this._excluded,T._excluded),this._disabled=Object.assign(this._disabled,T._disabled));var n=new t(s);this.__patterns={handlebars_comment:n.starting_with(/{{!--/).until_after(/--}}/),handlebars_unescaped:n.starting_with(/{{{/).until_after(/}}}/),handlebars:n.starting_with(/{{/).until_after(/}}/),php:n.starting_with(/<\?(?:[= ]|php)/).until_after(/\?>/),erb:n.starting_with(/<%[^%]/).until_after(/[^%]%>/),django:n.starting_with(/{%/).until_after(/%}/),django_value:n.starting_with(/{{/).until_after(/}}/),django_comment:n.starting_with(/{#/).until_after(/#}/),smarty:n.starting_with(/{(?=[^}{\s\n])/).until_after(/[^\s\n]}/),smarty_comment:n.starting_with(/{\*/).until_after(/\*}/),smarty_literal:n.starting_with(/{literal}/).until_after(/{\/literal}/)}}return E.prototype=new t,E.prototype._create=function(){return new E(this._input,this)},E.prototype._update=function(){this.__set_templated_pattern()},E.prototype.disable=function(s){var T=this._create();return T._disabled[s]=!0,T._update(),T},E.prototype.read_options=function(s){var T=this._create();for(var n in e)T._disabled[n]=s.templating.indexOf(n)===-1;return T._update(),T},E.prototype.exclude=function(s){var T=this._create();return T._excluded[s]=!0,T._update(),T},E.prototype.read=function(){var s="";this._match_pattern?s=this._input.read(this._starting_pattern):s=this._input.read(this._starting_pattern,this.__template_pattern);for(var T=this._read_template();T;)this._match_pattern?T+=this._input.read(this._match_pattern):T+=this._input.readUntil(this.__template_pattern),s+=T,T=this._read_template();return this._until_after&&(s+=this._input.readUntilAfter(this._until_pattern)),s},E.prototype.__set_templated_pattern=function(){var s=[];this._disabled.php||s.push(this.__patterns.php._starting_pattern.source),this._disabled.handlebars||s.push(this.__patterns.handlebars._starting_pattern.source),this._disabled.angular||s.push(this.__patterns.handlebars._starting_pattern.source),this._disabled.erb||s.push(this.__patterns.erb._starting_pattern.source),this._disabled.django||(s.push(this.__patterns.django._starting_pattern.source),s.push(this.__patterns.django_value._starting_pattern.source),s.push(this.__patterns.django_comment._starting_pattern.source)),this._disabled.smarty||s.push(this.__patterns.smarty._starting_pattern.source),this._until_pattern&&s.push(this._until_pattern.source),this.__template_pattern=this._input.get_regexp("(?:"+s.join("|")+")")},E.prototype._read_template=function(){var s="",T=this._input.peek();if(T==="<"){var n=this._input.peek(1);!this._disabled.php&&!this._excluded.php&&n==="?"&&(s=s||this.__patterns.php.read()),!this._disabled.erb&&!this._excluded.erb&&n==="%"&&(s=s||this.__patterns.erb.read())}else T==="{"&&(!this._disabled.handlebars&&!this._excluded.handlebars&&(s=s||this.__patterns.handlebars_comment.read(),s=s||this.__patterns.handlebars_unescaped.read(),s=s||this.__patterns.handlebars.read()),this._disabled.django||(!this._excluded.django&&!this._excluded.handlebars&&(s=s||this.__patterns.django_value.read()),this._excluded.django||(s=s||this.__patterns.django_comment.read(),s=s||this.__patterns.django.read())),this._disabled.smarty||this._disabled.django&&this._disabled.handlebars&&(s=s||this.__patterns.smarty_comment.read(),s=s||this.__patterns.smarty_literal.read(),s=s||this.__patterns.smarty.read()));return s},iT.TemplatablePattern=E,iT}var Xi;function PE(){if(Xi)return lt;Xi=1;var t=bn().InputScanner,e=As().Tokenizer,E=As().TOKEN,s=Fn().Directives,T=iA(),n=cs().Pattern,i=RA().TemplatablePattern;function r(u,f){return f.indexOf(u)!==-1}var R={START_EXPR:"TK_START_EXPR",END_EXPR:"TK_END_EXPR",START_BLOCK:"TK_START_BLOCK",END_BLOCK:"TK_END_BLOCK",WORD:"TK_WORD",RESERVED:"TK_RESERVED",SEMICOLON:"TK_SEMICOLON",STRING:"TK_STRING",EQUALS:"TK_EQUALS",OPERATOR:"TK_OPERATOR",COMMA:"TK_COMMA",BLOCK_COMMENT:"TK_BLOCK_COMMENT",COMMENT:"TK_COMMENT",DOT:"TK_DOT",UNKNOWN:"TK_UNKNOWN",START:E.START,RAW:E.RAW,EOF:E.EOF},_=new s(/\/\*/,/\*\//),o=/0[xX][0123456789abcdefABCDEF_]*n?|0[oO][01234567_]*n?|0[bB][01_]*n?|\d[\d_]*n|(?:\.\d[\d_]*|\d[\d_]*\.?[\d_]*)(?:[eE][+-]?[\d_]+)?/,O=/[0-9]/,I=/[^\d\.]/,C=">>> === !== &&= ??= ||= << && >= ** != == <= >> || ?? |> < / - + > : & % ? ^ | *".split(" "),h=">>>= ... >>= <<= === >>> !== **= &&= ??= ||= => ^= :: /= << <= == && -= >= >> != -- += ** || ?? ++ %= &= *= |= |> = ! ? > < : / ^ - + * & % ~ |";h=h.replace(/[-[\]{}()*+?.,\\^$|#]/g,"\\$&"),h="\\?\\.(?!\\d) "+h,h=h.replace(/ /g,"|");var L=new RegExp(h),S="continue,try,throw,return,var,let,const,if,switch,case,default,for,while,break,function,import,export".split(","),a=S.concat(["do","in","of","else","get","set","new","catch","finally","typeof","yield","async","await","from","as","class","extends"]),N=new RegExp("^(?:"+a.join("|")+")$"),G,D=function(u,f){e.call(this,u,f),this._patterns.whitespace=this._patterns.whitespace.matching(/\u00A0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff/.source,/\u2028\u2029/.source);var l=new n(this._input),m=new i(this._input).read_options(this._options);this.__patterns={template:m,identifier:m.starting_with(T.identifier).matching(T.identifierMatch),number:l.matching(o),punct:l.matching(L),comment:l.starting_with(/\/\//).until(/[\n\r\u2028\u2029]/),block_comment:l.starting_with(/\/\*/).until_after(/\*\//),html_comment_start:l.matching(/<!--/),html_comment_end:l.matching(/-->/),include:l.starting_with(/#include/).until_after(T.lineBreak),shebang:l.starting_with(/#!/).until_after(T.lineBreak),xml:l.matching(/[\s\S]*?<(\/?)([-a-zA-Z:0-9_.]+|{[^}]+?}|!\[CDATA\[[^\]]*?\]\]|)(\s*{[^}]+?}|\s+[-a-zA-Z:0-9_.]+|\s+[-a-zA-Z:0-9_.]+\s*=\s*('[^']*'|"[^"]*"|{([^{}]|{[^}]+?})+?}))*\s*(\/?)\s*>/),single_quote:m.until(/['\\\n\r\u2028\u2029]/),double_quote:m.until(/["\\\n\r\u2028\u2029]/),template_text:m.until(/[`\\$]/),template_expression:m.until(/[`}\\]/)}};D.prototype=new e,D.prototype._is_comment=function(u){return u.type===R.COMMENT||u.type===R.BLOCK_COMMENT||u.type===R.UNKNOWN},D.prototype._is_opening=function(u){return u.type===R.START_BLOCK||u.type===R.START_EXPR},D.prototype._is_closing=function(u,f){return(u.type===R.END_BLOCK||u.type===R.END_EXPR)&&f&&(u.text==="]"&&f.text==="["||u.text===")"&&f.text==="("||u.text==="}"&&f.text==="{")},D.prototype._reset=function(){G=!1},D.prototype._get_next_token=function(u,f){var l=null;this._readWhitespace();var m=this._input.peek();return m===null?this._create_token(R.EOF,""):(l=l||this._read_non_javascript(m),l=l||this._read_string(m),l=l||this._read_pair(m,this._input.peek(1)),l=l||this._read_word(u),l=l||this._read_singles(m),l=l||this._read_comment(m),l=l||this._read_regexp(m,u),l=l||this._read_xml(m,u),l=l||this._read_punctuation(),l=l||this._create_token(R.UNKNOWN,this._input.next()),l)},D.prototype._read_word=function(u){var f;if(f=this.__patterns.identifier.read(),f!=="")return f=f.replace(T.allLineBreaks,`
`),!(u.type===R.DOT||u.type===R.RESERVED&&(u.text==="set"||u.text==="get"))&&N.test(f)?(f==="in"||f==="of")&&(u.type===R.WORD||u.type===R.STRING)?this._create_token(R.OPERATOR,f):this._create_token(R.RESERVED,f):this._create_token(R.WORD,f);if(f=this.__patterns.number.read(),f!=="")return this._create_token(R.WORD,f)},D.prototype._read_singles=function(u){var f=null;return u==="("||u==="["?f=this._create_token(R.START_EXPR,u):u===")"||u==="]"?f=this._create_token(R.END_EXPR,u):u==="{"?f=this._create_token(R.START_BLOCK,u):u==="}"?f=this._create_token(R.END_BLOCK,u):u===";"?f=this._create_token(R.SEMICOLON,u):u==="."&&I.test(this._input.peek(1))?f=this._create_token(R.DOT,u):u===","&&(f=this._create_token(R.COMMA,u)),f&&this._input.next(),f},D.prototype._read_pair=function(u,f){var l=null;return u==="#"&&f==="{"&&(l=this._create_token(R.START_BLOCK,u+f)),l&&(this._input.next(),this._input.next()),l},D.prototype._read_punctuation=function(){var u=this.__patterns.punct.read();if(u!=="")return u==="="?this._create_token(R.EQUALS,u):u==="?."?this._create_token(R.DOT,u):this._create_token(R.OPERATOR,u)},D.prototype._read_non_javascript=function(u){var f="";if(u==="#"){if(this._is_first_token()&&(f=this.__patterns.shebang.read(),f))return this._create_token(R.UNKNOWN,f.trim()+`
`);if(f=this.__patterns.include.read(),f)return this._create_token(R.UNKNOWN,f.trim()+`
`);u=this._input.next();var l="#";if(this._input.hasNext()&&this._input.testChar(O)){do u=this._input.next(),l+=u;while(this._input.hasNext()&&u!=="#"&&u!=="=");return u==="#"||(this._input.peek()==="["&&this._input.peek(1)==="]"?(l+="[]",this._input.next(),this._input.next()):this._input.peek()==="{"&&this._input.peek(1)==="}"&&(l+="{}",this._input.next(),this._input.next())),this._create_token(R.WORD,l)}this._input.back()}else if(u==="<"&&this._is_first_token()){if(f=this.__patterns.html_comment_start.read(),f){for(;this._input.hasNext()&&!this._input.testChar(T.newline);)f+=this._input.next();return G=!0,this._create_token(R.COMMENT,f)}}else if(G&&u==="-"&&(f=this.__patterns.html_comment_end.read(),f))return G=!1,this._create_token(R.COMMENT,f);return null},D.prototype._read_comment=function(u){var f=null;if(u==="/"){var l="";if(this._input.peek(1)==="*"){l=this.__patterns.block_comment.read();var m=_.get_directives(l);m&&m.ignore==="start"&&(l+=_.readIgnored(this._input)),l=l.replace(T.allLineBreaks,`
`),f=this._create_token(R.BLOCK_COMMENT,l),f.directives=m}else this._input.peek(1)==="/"&&(l=this.__patterns.comment.read(),f=this._create_token(R.COMMENT,l))}return f},D.prototype._read_string=function(u){if(u==="`"||u==="'"||u==='"'){var f=this._input.next();return this.has_char_escapes=!1,u==="`"?f+=this._read_string_recursive("`",!0,"${"):f+=this._read_string_recursive(u),this.has_char_escapes&&this._options.unescape_strings&&(f=U(f)),this._input.peek()===u&&(f+=this._input.next()),f=f.replace(T.allLineBreaks,`
`),this._create_token(R.STRING,f)}return null},D.prototype._allow_regexp_or_xml=function(u){return u.type===R.RESERVED&&r(u.text,["return","case","throw","else","do","typeof","yield"])||u.type===R.END_EXPR&&u.text===")"&&u.opened.previous.type===R.RESERVED&&r(u.opened.previous.text,["if","while","for"])||r(u.type,[R.COMMENT,R.START_EXPR,R.START_BLOCK,R.START,R.END_BLOCK,R.OPERATOR,R.EQUALS,R.EOF,R.SEMICOLON,R.COMMA])},D.prototype._read_regexp=function(u,f){if(u==="/"&&this._allow_regexp_or_xml(f)){for(var l=this._input.next(),m=!1,A=!1;this._input.hasNext()&&(m||A||this._input.peek()!==u)&&!this._input.testChar(T.newline);)l+=this._input.peek(),m?m=!1:(m=this._input.peek()==="\\",this._input.peek()==="["?A=!0:this._input.peek()==="]"&&(A=!1)),this._input.next();return this._input.peek()===u&&(l+=this._input.next(),l+=this._input.read(T.identifier)),this._create_token(R.STRING,l)}return null},D.prototype._read_xml=function(u,f){if(this._options.e4x&&u==="<"&&this._allow_regexp_or_xml(f)){var l="",m=this.__patterns.xml.read_match();if(m){for(var A=m[2].replace(/^{\s+/,"{").replace(/\s+}$/,"}"),p=A.indexOf("{")===0,P=0;m;){var F=!!m[1],H=m[2],K=!!m[m.length-1]||H.slice(0,8)==="![CDATA[";if(!K&&(H===A||p&&H.replace(/^{\s+/,"{").replace(/\s+}$/,"}"))&&(F?--P:++P),l+=m[0],P<=0)break;m=this.__patterns.xml.read_match()}return m||(l+=this._input.match(/[\s\S]*/g)[0]),l=l.replace(T.allLineBreaks,`
`),this._create_token(R.STRING,l)}}return null};function U(u){for(var f="",l=0,m=new t(u),A=null;m.hasNext();)if(A=m.match(/([\s]|[^\\]|\\\\)+/g),A&&(f+=A[0]),m.peek()==="\\"){if(m.next(),m.peek()==="x")A=m.match(/x([0-9A-Fa-f]{2})/g);else if(m.peek()==="u")A=m.match(/u([0-9A-Fa-f]{4})/g),A||(A=m.match(/u\{([0-9A-Fa-f]+)\}/g));else{f+="\\",m.hasNext()&&(f+=m.next());continue}if(!A||(l=parseInt(A[1],16),l>126&&l<=255&&A[0].indexOf("x")===0))return u;l>=0&&l<32||l>1114111?f+="\\"+A[0]:l===34||l===39||l===92?f+="\\"+String.fromCharCode(l):f+=String.fromCharCode(l)}return f}return D.prototype._read_string_recursive=function(u,f,l){var m,A;u==="'"?A=this.__patterns.single_quote:u==='"'?A=this.__patterns.double_quote:u==="`"?A=this.__patterns.template_text:u==="}"&&(A=this.__patterns.template_expression);for(var p=A.read(),P="";this._input.hasNext();){if(P=this._input.next(),P===u||!f&&T.newline.test(P)){this._input.back();break}else P==="\\"&&this._input.hasNext()?(m=this._input.peek(),m==="x"||m==="u"?this.has_char_escapes=!0:m==="\r"&&this._input.peek(1)===`
`&&this._input.next(),P+=this._input.next()):l&&(l==="${"&&P==="$"&&this._input.peek()==="{"&&(P+=this._input.next()),l===P&&(u==="`"?P+=this._read_string_recursive("}",f,"`"):P+=this._read_string_recursive("`",f,"${"),this._input.hasNext()&&(P+=this._input.next())));P+=A.read(),p+=P}return p},lt.Tokenizer=D,lt.TOKEN=R,lt.positionable_operators=C.slice(),lt.line_starters=S.slice(),lt}var Ki;function vS(){if(Ki)return qs;Ki=1;var t=Bn().Output,e=nA().Token,E=iA(),s=rA().Options,T=PE().Tokenizer,n=PE().line_starters,i=PE().positionable_operators,r=PE().TOKEN;function R(A,p){return p.indexOf(A)!==-1}function _(A){return A.replace(/^\s+/g,"")}function o(A){for(var p={},P=0;P<A.length;P++)p[A[P].replace(/-/g,"_")]=A[P];return p}function O(A,p){return A&&A.type===r.RESERVED&&A.text===p}function I(A,p){return A&&A.type===r.RESERVED&&R(A.text,p)}var C=["case","return","do","if","throw","else","await","break","continue","async"],h=["before-newline","after-newline","preserve-newline"],L=o(h),S=[L.before_newline,L.preserve_newline],a={BlockStatement:"BlockStatement",Statement:"Statement",ObjectLiteral:"ObjectLiteral",ArrayLiteral:"ArrayLiteral",ForInitializer:"ForInitializer",Conditional:"Conditional",Expression:"Expression"};function N(A,p){p.multiline_frame||p.mode===a.ForInitializer||p.mode===a.Conditional||A.remove_indent(p.start_line_index)}function G(A){A=A.replace(E.allLineBreaks,`
`);for(var p=[],P=A.indexOf(`
`);P!==-1;)p.push(A.substring(0,P)),A=A.substring(P+1),P=A.indexOf(`
`);return A.length&&p.push(A),p}function D(A){return A===a.ArrayLiteral}function U(A){return R(A,[a.Expression,a.ForInitializer,a.Conditional])}function u(A,p){for(var P=0;P<A.length;P++){var F=A[P].trim();if(F.charAt(0)!==p)return!1}return!0}function f(A,p){for(var P=0,F=A.length,H;P<F;P++)if(H=A[P],H&&H.indexOf(p)!==0)return!1;return!0}function l(A,p){p=p||{},this._source_text=A||"",this._output=null,this._tokens=null,this._last_last_text=null,this._flags=null,this._previous_flags=null,this._flag_store=null,this._options=new s(p)}l.prototype.create_flags=function(A,p){var P=0;A&&(P=A.indentation_level,!this._output.just_added_newline()&&A.line_indent_level>P&&(P=A.line_indent_level));var F={mode:p,parent:A,last_token:A?A.last_token:new e(r.START_BLOCK,""),last_word:A?A.last_word:"",declaration_statement:!1,declaration_assignment:!1,multiline_frame:!1,inline_frame:!1,if_block:!1,else_block:!1,class_start_block:!1,do_block:!1,do_while:!1,import_block:!1,in_case_statement:!1,in_case:!1,case_body:!1,case_block:!1,indentation_level:P,alignment:0,line_indent_level:A?A.line_indent_level:P,start_line_index:this._output.get_line_number(),ternary_depth:0};return F},l.prototype._reset=function(A){var p=A.match(/^[\t ]*/)[0];this._last_last_text="",this._output=new t(this._options,p),this._output.raw=this._options.test_output_raw,this._flag_store=[],this.set_mode(a.BlockStatement);var P=new T(A,this._options);return this._tokens=P.tokenize(),A},l.prototype.beautify=function(){if(this._options.disabled)return this._source_text;var A,p=this._reset(this._source_text),P=this._options.eol;this._options.eol==="auto"&&(P=`
`,p&&E.lineBreak.test(p||"")&&(P=p.match(E.lineBreak)[0]));for(var F=this._tokens.next();F;)this.handle_token(F),this._last_last_text=this._flags.last_token.text,this._flags.last_token=F,F=this._tokens.next();return A=this._output.get_code(P),A},l.prototype.handle_token=function(A,p){A.type===r.START_EXPR?this.handle_start_expr(A):A.type===r.END_EXPR?this.handle_end_expr(A):A.type===r.START_BLOCK?this.handle_start_block(A):A.type===r.END_BLOCK?this.handle_end_block(A):A.type===r.WORD?this.handle_word(A):A.type===r.RESERVED?this.handle_word(A):A.type===r.SEMICOLON?this.handle_semicolon(A):A.type===r.STRING?this.handle_string(A):A.type===r.EQUALS?this.handle_equals(A):A.type===r.OPERATOR?this.handle_operator(A):A.type===r.COMMA?this.handle_comma(A):A.type===r.BLOCK_COMMENT?this.handle_block_comment(A,p):A.type===r.COMMENT?this.handle_comment(A,p):A.type===r.DOT?this.handle_dot(A):A.type===r.EOF?this.handle_eof(A):A.type===r.UNKNOWN?this.handle_unknown(A,p):this.handle_unknown(A,p)},l.prototype.handle_whitespace_and_comments=function(A,p){var P=A.newlines,F=this._options.keep_array_indentation&&D(this._flags.mode);if(A.comments_before)for(var H=A.comments_before.next();H;)this.handle_whitespace_and_comments(H,p),this.handle_token(H,p),H=A.comments_before.next();if(F)for(var K=0;K<P;K+=1)this.print_newline(K>0,p);else if(this._options.max_preserve_newlines&&P>this._options.max_preserve_newlines&&(P=this._options.max_preserve_newlines),this._options.preserve_newlines&&P>1){this.print_newline(!1,p);for(var Q=1;Q<P;Q+=1)this.print_newline(!0,p)}};var m=["async","break","continue","return","throw","yield"];return l.prototype.allow_wrap_or_preserved_newline=function(A,p){if(p=p===void 0?!1:p,!this._output.just_added_newline()){var P=this._options.preserve_newlines&&A.newlines||p,F=R(this._flags.last_token.text,i)||R(A.text,i);if(F){var H=R(this._flags.last_token.text,i)&&R(this._options.operator_position,S)||R(A.text,i);P=P&&H}if(P)this.print_newline(!1,!0);else if(this._options.wrap_line_length){if(I(this._flags.last_token,m))return;this._output.set_wrap_point()}}},l.prototype.print_newline=function(A,p){if(!p&&this._flags.last_token.text!==";"&&this._flags.last_token.text!==","&&this._flags.last_token.text!=="="&&(this._flags.last_token.type!==r.OPERATOR||this._flags.last_token.text==="--"||this._flags.last_token.text==="++"))for(var P=this._tokens.peek();this._flags.mode===a.Statement&&!(this._flags.if_block&&O(P,"else"))&&!this._flags.do_block;)this.restore_mode();this._output.add_new_line(A)&&(this._flags.multiline_frame=!0)},l.prototype.print_token_line_indentation=function(A){this._output.just_added_newline()&&(this._options.keep_array_indentation&&A.newlines&&(A.text==="["||D(this._flags.mode))?(this._output.current_line.set_indent(-1),this._output.current_line.push(A.whitespace_before),this._output.space_before_token=!1):this._output.set_indent(this._flags.indentation_level,this._flags.alignment)&&(this._flags.line_indent_level=this._flags.indentation_level))},l.prototype.print_token=function(A){if(this._output.raw){this._output.add_raw_token(A);return}if(this._options.comma_first&&A.previous&&A.previous.type===r.COMMA&&this._output.just_added_newline()&&this._output.previous_line.last()===","){var p=this._output.previous_line.pop();this._output.previous_line.is_empty()&&(this._output.previous_line.push(p),this._output.trim(!0),this._output.current_line.pop(),this._output.trim()),this.print_token_line_indentation(A),this._output.add_token(","),this._output.space_before_token=!0}this.print_token_line_indentation(A),this._output.non_breaking_space=!0,this._output.add_token(A.text),this._output.previous_token_wrapped&&(this._flags.multiline_frame=!0)},l.prototype.indent=function(){this._flags.indentation_level+=1,this._output.set_indent(this._flags.indentation_level,this._flags.alignment)},l.prototype.deindent=function(){this._flags.indentation_level>0&&(!this._flags.parent||this._flags.indentation_level>this._flags.parent.indentation_level)&&(this._flags.indentation_level-=1,this._output.set_indent(this._flags.indentation_level,this._flags.alignment))},l.prototype.set_mode=function(A){this._flags?(this._flag_store.push(this._flags),this._previous_flags=this._flags):this._previous_flags=this.create_flags(null,A),this._flags=this.create_flags(this._previous_flags,A),this._output.set_indent(this._flags.indentation_level,this._flags.alignment)},l.prototype.restore_mode=function(){this._flag_store.length>0&&(this._previous_flags=this._flags,this._flags=this._flag_store.pop(),this._previous_flags.mode===a.Statement&&N(this._output,this._previous_flags),this._output.set_indent(this._flags.indentation_level,this._flags.alignment))},l.prototype.start_of_object_property=function(){return this._flags.parent.mode===a.ObjectLiteral&&this._flags.mode===a.Statement&&(this._flags.last_token.text===":"&&this._flags.ternary_depth===0||I(this._flags.last_token,["get","set"]))},l.prototype.start_of_statement=function(A){var p=!1;return p=p||I(this._flags.last_token,["var","let","const"])&&A.type===r.WORD,p=p||O(this._flags.last_token,"do"),p=p||!(this._flags.parent.mode===a.ObjectLiteral&&this._flags.mode===a.Statement)&&I(this._flags.last_token,m)&&!A.newlines,p=p||O(this._flags.last_token,"else")&&!(O(A,"if")&&!A.comments_before),p=p||this._flags.last_token.type===r.END_EXPR&&(this._previous_flags.mode===a.ForInitializer||this._previous_flags.mode===a.Conditional),p=p||this._flags.last_token.type===r.WORD&&this._flags.mode===a.BlockStatement&&!this._flags.in_case&&!(A.text==="--"||A.text==="++")&&this._last_last_text!=="function"&&A.type!==r.WORD&&A.type!==r.RESERVED,p=p||this._flags.mode===a.ObjectLiteral&&(this._flags.last_token.text===":"&&this._flags.ternary_depth===0||I(this._flags.last_token,["get","set"])),p?(this.set_mode(a.Statement),this.indent(),this.handle_whitespace_and_comments(A,!0),this.start_of_object_property()||this.allow_wrap_or_preserved_newline(A,I(A,["do","for","if","while"])),!0):!1},l.prototype.handle_start_expr=function(A){this.start_of_statement(A)||this.handle_whitespace_and_comments(A);var p=a.Expression;if(A.text==="["){if(this._flags.last_token.type===r.WORD||this._flags.last_token.text===")"){I(this._flags.last_token,n)&&(this._output.space_before_token=!0),this.print_token(A),this.set_mode(p),this.indent(),this._options.space_in_paren&&(this._output.space_before_token=!0);return}p=a.ArrayLiteral,D(this._flags.mode)&&(this._flags.last_token.text==="["||this._flags.last_token.text===","&&(this._last_last_text==="]"||this._last_last_text==="}"))&&(this._options.keep_array_indentation||this.print_newline()),R(this._flags.last_token.type,[r.START_EXPR,r.END_EXPR,r.WORD,r.OPERATOR,r.DOT])||(this._output.space_before_token=!0)}else{if(this._flags.last_token.type===r.RESERVED)this._flags.last_token.text==="for"?(this._output.space_before_token=this._options.space_before_conditional,p=a.ForInitializer):R(this._flags.last_token.text,["if","while","switch"])?(this._output.space_before_token=this._options.space_before_conditional,p=a.Conditional):R(this._flags.last_word,["await","async"])?this._output.space_before_token=!0:this._flags.last_token.text==="import"&&A.whitespace_before===""?this._output.space_before_token=!1:(R(this._flags.last_token.text,n)||this._flags.last_token.text==="catch")&&(this._output.space_before_token=!0);else if(this._flags.last_token.type===r.EQUALS||this._flags.last_token.type===r.OPERATOR)this.start_of_object_property()||this.allow_wrap_or_preserved_newline(A);else if(this._flags.last_token.type===r.WORD){this._output.space_before_token=!1;var P=this._tokens.peek(-3);if(this._options.space_after_named_function&&P){var F=this._tokens.peek(-4);I(P,["async","function"])||P.text==="*"&&I(F,["async","function"])?this._output.space_before_token=!0:this._flags.mode===a.ObjectLiteral?(P.text==="{"||P.text===","||P.text==="*"&&(F.text==="{"||F.text===","))&&(this._output.space_before_token=!0):this._flags.parent&&this._flags.parent.class_start_block&&(this._output.space_before_token=!0)}}else this.allow_wrap_or_preserved_newline(A);(this._flags.last_token.type===r.RESERVED&&(this._flags.last_word==="function"||this._flags.last_word==="typeof")||this._flags.last_token.text==="*"&&(R(this._last_last_text,["function","yield"])||this._flags.mode===a.ObjectLiteral&&R(this._last_last_text,["{",","])))&&(this._output.space_before_token=this._options.space_after_anon_function)}this._flags.last_token.text===";"||this._flags.last_token.type===r.START_BLOCK?this.print_newline():(this._flags.last_token.type===r.END_EXPR||this._flags.last_token.type===r.START_EXPR||this._flags.last_token.type===r.END_BLOCK||this._flags.last_token.text==="."||this._flags.last_token.type===r.COMMA)&&this.allow_wrap_or_preserved_newline(A,A.newlines),this.print_token(A),this.set_mode(p),this._options.space_in_paren&&(this._output.space_before_token=!0),this.indent()},l.prototype.handle_end_expr=function(A){for(;this._flags.mode===a.Statement;)this.restore_mode();this.handle_whitespace_and_comments(A),this._flags.multiline_frame&&this.allow_wrap_or_preserved_newline(A,A.text==="]"&&D(this._flags.mode)&&!this._options.keep_array_indentation),this._options.space_in_paren&&(this._flags.last_token.type===r.START_EXPR&&!this._options.space_in_empty_paren?(this._output.trim(),this._output.space_before_token=!1):this._output.space_before_token=!0),this.deindent(),this.print_token(A),this.restore_mode(),N(this._output,this._previous_flags),this._flags.do_while&&this._previous_flags.mode===a.Conditional&&(this._previous_flags.mode=a.Expression,this._flags.do_block=!1,this._flags.do_while=!1)},l.prototype.handle_start_block=function(A){this.handle_whitespace_and_comments(A);var p=this._tokens.peek(),P=this._tokens.peek(1);this._flags.last_word==="switch"&&this._flags.last_token.type===r.END_EXPR?(this.set_mode(a.BlockStatement),this._flags.in_case_statement=!0):this._flags.case_body?this.set_mode(a.BlockStatement):P&&(R(P.text,[":",","])&&R(p.type,[r.STRING,r.WORD,r.RESERVED])||R(p.text,["get","set","..."])&&R(P.type,[r.WORD,r.RESERVED]))?R(this._last_last_text,["class","interface"])&&!R(P.text,[":",","])?this.set_mode(a.BlockStatement):this.set_mode(a.ObjectLiteral):this._flags.last_token.type===r.OPERATOR&&this._flags.last_token.text==="=>"?this.set_mode(a.BlockStatement):R(this._flags.last_token.type,[r.EQUALS,r.START_EXPR,r.COMMA,r.OPERATOR])||I(this._flags.last_token,["return","throw","import","default"])?this.set_mode(a.ObjectLiteral):this.set_mode(a.BlockStatement),this._flags.last_token&&I(this._flags.last_token.previous,["class","extends"])&&(this._flags.class_start_block=!0);var F=!p.comments_before&&p.text==="}",H=F&&this._flags.last_word==="function"&&this._flags.last_token.type===r.END_EXPR;if(this._options.brace_preserve_inline){var K=0,Q=null;this._flags.inline_frame=!0;do if(K+=1,Q=this._tokens.peek(K-1),Q.newlines){this._flags.inline_frame=!1;break}while(Q.type!==r.EOF&&!(Q.type===r.END_BLOCK&&Q.opened===A))}(this._options.brace_style==="expand"||this._options.brace_style==="none"&&A.newlines)&&!this._flags.inline_frame?this._flags.last_token.type!==r.OPERATOR&&(H||this._flags.last_token.type===r.EQUALS||I(this._flags.last_token,C)&&this._flags.last_token.text!=="else")?this._output.space_before_token=!0:this.print_newline(!1,!0):(D(this._previous_flags.mode)&&(this._flags.last_token.type===r.START_EXPR||this._flags.last_token.type===r.COMMA)&&((this._flags.last_token.type===r.COMMA||this._options.space_in_paren)&&(this._output.space_before_token=!0),(this._flags.last_token.type===r.COMMA||this._flags.last_token.type===r.START_EXPR&&this._flags.inline_frame)&&(this.allow_wrap_or_preserved_newline(A),this._previous_flags.multiline_frame=this._previous_flags.multiline_frame||this._flags.multiline_frame,this._flags.multiline_frame=!1)),this._flags.last_token.type!==r.OPERATOR&&this._flags.last_token.type!==r.START_EXPR&&(R(this._flags.last_token.type,[r.START_BLOCK,r.SEMICOLON])&&!this._flags.inline_frame?this.print_newline():this._output.space_before_token=!0)),this.print_token(A),this.indent(),!F&&!(this._options.brace_preserve_inline&&this._flags.inline_frame)&&this.print_newline()},l.prototype.handle_end_block=function(A){for(this.handle_whitespace_and_comments(A);this._flags.mode===a.Statement;)this.restore_mode();var p=this._flags.last_token.type===r.START_BLOCK;this._flags.inline_frame&&!p?this._output.space_before_token=!0:this._options.brace_style==="expand"?p||this.print_newline():p||(D(this._flags.mode)&&this._options.keep_array_indentation?(this._options.keep_array_indentation=!1,this.print_newline(),this._options.keep_array_indentation=!0):this.print_newline()),this.restore_mode(),this.print_token(A)},l.prototype.handle_word=function(A){if(A.type===r.RESERVED){if(R(A.text,["set","get"])&&this._flags.mode!==a.ObjectLiteral)A.type=r.WORD;else if(A.text==="import"&&R(this._tokens.peek().text,["(","."]))A.type=r.WORD;else if(R(A.text,["as","from"])&&!this._flags.import_block)A.type=r.WORD;else if(this._flags.mode===a.ObjectLiteral){var p=this._tokens.peek();p.text===":"&&(A.type=r.WORD)}}if(this.start_of_statement(A)?I(this._flags.last_token,["var","let","const"])&&A.type===r.WORD&&(this._flags.declaration_statement=!0):A.newlines&&!U(this._flags.mode)&&(this._flags.last_token.type!==r.OPERATOR||this._flags.last_token.text==="--"||this._flags.last_token.text==="++")&&this._flags.last_token.type!==r.EQUALS&&(this._options.preserve_newlines||!I(this._flags.last_token,["var","let","const","set","get"]))?(this.handle_whitespace_and_comments(A),this.print_newline()):this.handle_whitespace_and_comments(A),this._flags.do_block&&!this._flags.do_while)if(O(A,"while")){this._output.space_before_token=!0,this.print_token(A),this._output.space_before_token=!0,this._flags.do_while=!0;return}else this.print_newline(),this._flags.do_block=!1;if(this._flags.if_block)if(!this._flags.else_block&&O(A,"else"))this._flags.else_block=!0;else{for(;this._flags.mode===a.Statement;)this.restore_mode();this._flags.if_block=!1,this._flags.else_block=!1}if(this._flags.in_case_statement&&I(A,["case","default"])){this.print_newline(),!this._flags.case_block&&(this._flags.case_body||this._options.jslint_happy)&&this.deindent(),this._flags.case_body=!1,this.print_token(A),this._flags.in_case=!0;return}if((this._flags.last_token.type===r.COMMA||this._flags.last_token.type===r.START_EXPR||this._flags.last_token.type===r.EQUALS||this._flags.last_token.type===r.OPERATOR)&&!this.start_of_object_property()&&!(R(this._flags.last_token.text,["+","-"])&&this._last_last_text===":"&&this._flags.parent.mode===a.ObjectLiteral)&&this.allow_wrap_or_preserved_newline(A),O(A,"function")){(R(this._flags.last_token.text,["}",";"])||this._output.just_added_newline()&&!(R(this._flags.last_token.text,["(","[","{",":","=",","])||this._flags.last_token.type===r.OPERATOR))&&!this._output.just_added_blankline()&&!A.comments_before&&(this.print_newline(),this.print_newline(!0)),this._flags.last_token.type===r.RESERVED||this._flags.last_token.type===r.WORD?I(this._flags.last_token,["get","set","new","export"])||I(this._flags.last_token,m)?this._output.space_before_token=!0:O(this._flags.last_token,"default")&&this._last_last_text==="export"?this._output.space_before_token=!0:this._flags.last_token.text==="declare"?this._output.space_before_token=!0:this.print_newline():this._flags.last_token.type===r.OPERATOR||this._flags.last_token.text==="="?this._output.space_before_token=!0:!this._flags.multiline_frame&&(U(this._flags.mode)||D(this._flags.mode))||this.print_newline(),this.print_token(A),this._flags.last_word=A.text;return}var P="NONE";if(this._flags.last_token.type===r.END_BLOCK?this._previous_flags.inline_frame?P="SPACE":I(A,["else","catch","finally","from"])?this._options.brace_style==="expand"||this._options.brace_style==="end-expand"||this._options.brace_style==="none"&&A.newlines?P="NEWLINE":(P="SPACE",this._output.space_before_token=!0):P="NEWLINE":this._flags.last_token.type===r.SEMICOLON&&this._flags.mode===a.BlockStatement?P="NEWLINE":this._flags.last_token.type===r.SEMICOLON&&U(this._flags.mode)?P="SPACE":this._flags.last_token.type===r.STRING?P="NEWLINE":this._flags.last_token.type===r.RESERVED||this._flags.last_token.type===r.WORD||this._flags.last_token.text==="*"&&(R(this._last_last_text,["function","yield"])||this._flags.mode===a.ObjectLiteral&&R(this._last_last_text,["{",","]))?P="SPACE":this._flags.last_token.type===r.START_BLOCK?this._flags.inline_frame?P="SPACE":P="NEWLINE":this._flags.last_token.type===r.END_EXPR&&(this._output.space_before_token=!0,P="NEWLINE"),I(A,n)&&this._flags.last_token.text!==")"&&(this._flags.inline_frame||this._flags.last_token.text==="else"||this._flags.last_token.text==="export"?P="SPACE":P="NEWLINE"),I(A,["else","catch","finally"]))if((!(this._flags.last_token.type===r.END_BLOCK&&this._previous_flags.mode===a.BlockStatement)||this._options.brace_style==="expand"||this._options.brace_style==="end-expand"||this._options.brace_style==="none"&&A.newlines)&&!this._flags.inline_frame)this.print_newline();else{this._output.trim(!0);var F=this._output.current_line;F.last()!=="}"&&this.print_newline(),this._output.space_before_token=!0}else P==="NEWLINE"?I(this._flags.last_token,C)?this._output.space_before_token=!0:this._flags.last_token.text==="declare"&&I(A,["var","let","const"])?this._output.space_before_token=!0:this._flags.last_token.type!==r.END_EXPR?(this._flags.last_token.type!==r.START_EXPR||!I(A,["var","let","const"]))&&this._flags.last_token.text!==":"&&(O(A,"if")&&O(A.previous,"else")?this._output.space_before_token=!0:this.print_newline()):I(A,n)&&this._flags.last_token.text!==")"&&this.print_newline():this._flags.multiline_frame&&D(this._flags.mode)&&this._flags.last_token.text===","&&this._last_last_text==="}"?this.print_newline():P==="SPACE"&&(this._output.space_before_token=!0);A.previous&&(A.previous.type===r.WORD||A.previous.type===r.RESERVED)&&(this._output.space_before_token=!0),this.print_token(A),this._flags.last_word=A.text,A.type===r.RESERVED&&(A.text==="do"?this._flags.do_block=!0:A.text==="if"?this._flags.if_block=!0:A.text==="import"?this._flags.import_block=!0:this._flags.import_block&&O(A,"from")&&(this._flags.import_block=!1))},l.prototype.handle_semicolon=function(A){this.start_of_statement(A)?this._output.space_before_token=!1:this.handle_whitespace_and_comments(A);for(var p=this._tokens.peek();this._flags.mode===a.Statement&&!(this._flags.if_block&&O(p,"else"))&&!this._flags.do_block;)this.restore_mode();this._flags.import_block&&(this._flags.import_block=!1),this.print_token(A)},l.prototype.handle_string=function(A){A.text.startsWith("`")&&A.newlines===0&&A.whitespace_before===""&&(A.previous.text===")"||this._flags.last_token.type===r.WORD)||(this.start_of_statement(A)?this._output.space_before_token=!0:(this.handle_whitespace_and_comments(A),this._flags.last_token.type===r.RESERVED||this._flags.last_token.type===r.WORD||this._flags.inline_frame?this._output.space_before_token=!0:this._flags.last_token.type===r.COMMA||this._flags.last_token.type===r.START_EXPR||this._flags.last_token.type===r.EQUALS||this._flags.last_token.type===r.OPERATOR?this.start_of_object_property()||this.allow_wrap_or_preserved_newline(A):A.text.startsWith("`")&&this._flags.last_token.type===r.END_EXPR&&(A.previous.text==="]"||A.previous.text===")")&&A.newlines===0?this._output.space_before_token=!0:this.print_newline())),this.print_token(A)},l.prototype.handle_equals=function(A){this.start_of_statement(A)||this.handle_whitespace_and_comments(A),this._flags.declaration_statement&&(this._flags.declaration_assignment=!0),this._output.space_before_token=!0,this.print_token(A),this._output.space_before_token=!0},l.prototype.handle_comma=function(A){this.handle_whitespace_and_comments(A,!0),this.print_token(A),this._output.space_before_token=!0,this._flags.declaration_statement?(U(this._flags.parent.mode)&&(this._flags.declaration_assignment=!1),this._flags.declaration_assignment?(this._flags.declaration_assignment=!1,this.print_newline(!1,!0)):this._options.comma_first&&this.allow_wrap_or_preserved_newline(A)):this._flags.mode===a.ObjectLiteral||this._flags.mode===a.Statement&&this._flags.parent.mode===a.ObjectLiteral?(this._flags.mode===a.Statement&&this.restore_mode(),this._flags.inline_frame||this.print_newline()):this._options.comma_first&&this.allow_wrap_or_preserved_newline(A)},l.prototype.handle_operator=function(A){var p=A.text==="*"&&(I(this._flags.last_token,["function","yield"])||R(this._flags.last_token.type,[r.START_BLOCK,r.COMMA,r.END_BLOCK,r.SEMICOLON])),P=R(A.text,["-","+"])&&(R(this._flags.last_token.type,[r.START_BLOCK,r.START_EXPR,r.EQUALS,r.OPERATOR])||R(this._flags.last_token.text,n)||this._flags.last_token.text===",");if(!this.start_of_statement(A)){var F=!p;this.handle_whitespace_and_comments(A,F)}if(A.text==="*"&&this._flags.last_token.type===r.DOT){this.print_token(A);return}if(A.text==="::"){this.print_token(A);return}if(R(A.text,["-","+"])&&this.start_of_object_property()){this.print_token(A);return}if(this._flags.last_token.type===r.OPERATOR&&R(this._options.operator_position,S)&&this.allow_wrap_or_preserved_newline(A),A.text===":"&&this._flags.in_case){this.print_token(A),this._flags.in_case=!1,this._flags.case_body=!0,this._tokens.peek().type!==r.START_BLOCK?(this.indent(),this.print_newline(),this._flags.case_block=!1):(this._flags.case_block=!0,this._output.space_before_token=!0);return}var H=!0,K=!0,Q=!1;if(A.text===":"?this._flags.ternary_depth===0?H=!1:(this._flags.ternary_depth-=1,Q=!0):A.text==="?"&&(this._flags.ternary_depth+=1),!P&&!p&&this._options.preserve_newlines&&R(A.text,i)){var we=A.text===":",LE=we&&Q,Fs=we&&!Q;switch(this._options.operator_position){case L.before_newline:this._output.space_before_token=!Fs,this.print_token(A),(!we||LE)&&this.allow_wrap_or_preserved_newline(A),this._output.space_before_token=!0;return;case L.after_newline:this._output.space_before_token=!0,!we||LE?this._tokens.peek().newlines?this.print_newline(!1,!0):this.allow_wrap_or_preserved_newline(A):this._output.space_before_token=!1,this.print_token(A),this._output.space_before_token=!0;return;case L.preserve_newline:Fs||this.allow_wrap_or_preserved_newline(A),H=!(this._output.just_added_newline()||Fs),this._output.space_before_token=H,this.print_token(A),this._output.space_before_token=!0;return}}if(p){this.allow_wrap_or_preserved_newline(A),H=!1;var ei=this._tokens.peek();K=ei&&R(ei.type,[r.WORD,r.RESERVED])}else if(A.text==="...")this.allow_wrap_or_preserved_newline(A),H=this._flags.last_token.type===r.START_BLOCK,K=!1;else if(R(A.text,["--","++","!","~"])||P){if((this._flags.last_token.type===r.COMMA||this._flags.last_token.type===r.START_EXPR)&&this.allow_wrap_or_preserved_newline(A),H=!1,K=!1,A.newlines&&(A.text==="--"||A.text==="++"||A.text==="~")){var ti=I(this._flags.last_token,C)&&A.newlines;ti&&(this._previous_flags.if_block||this._previous_flags.else_block)&&this.restore_mode(),this.print_newline(ti,!0)}this._flags.last_token.text===";"&&U(this._flags.mode)&&(H=!0),this._flags.last_token.type===r.RESERVED?H=!0:this._flags.last_token.type===r.END_EXPR?H=!(this._flags.last_token.text==="]"&&(A.text==="--"||A.text==="++")):this._flags.last_token.type===r.OPERATOR&&(H=R(A.text,["--","-","++","+"])&&R(this._flags.last_token.text,["--","-","++","+"]),R(A.text,["+","-"])&&R(this._flags.last_token.text,["--","++"])&&(K=!0)),(this._flags.mode===a.BlockStatement&&!this._flags.inline_frame||this._flags.mode===a.Statement)&&(this._flags.last_token.text==="{"||this._flags.last_token.text===";")&&this.print_newline()}this._output.space_before_token=this._output.space_before_token||H,this.print_token(A),this._output.space_before_token=K},l.prototype.handle_block_comment=function(A,p){if(this._output.raw){this._output.add_raw_token(A),A.directives&&A.directives.preserve==="end"&&(this._output.raw=this._options.test_output_raw);return}if(A.directives){this.print_newline(!1,p),this.print_token(A),A.directives.preserve==="start"&&(this._output.raw=!0),this.print_newline(!1,!0);return}if(!E.newline.test(A.text)&&!A.newlines){this._output.space_before_token=!0,this.print_token(A),this._output.space_before_token=!0;return}else this.print_block_commment(A,p)},l.prototype.print_block_commment=function(A,p){var P=G(A.text),F,H=!1,K=!1,Q=A.whitespace_before,we=Q.length;if(this.print_newline(!1,p),this.print_token_line_indentation(A),this._output.add_token(P[0]),this.print_newline(!1,p),P.length>1){for(P=P.slice(1),H=u(P,"*"),K=f(P,Q),H&&(this._flags.alignment=1),F=0;F<P.length;F++)H?(this.print_token_line_indentation(A),this._output.add_token(_(P[F]))):K&&P[F]?(this.print_token_line_indentation(A),this._output.add_token(P[F].substring(we))):(this._output.current_line.set_indent(-1),this._output.add_token(P[F])),this.print_newline(!1,p);this._flags.alignment=0}},l.prototype.handle_comment=function(A,p){A.newlines?this.print_newline(!1,p):this._output.trim(!0),this._output.space_before_token=!0,this.print_token(A),this.print_newline(!1,p)},l.prototype.handle_dot=function(A){this.start_of_statement(A)||this.handle_whitespace_and_comments(A,!0),this._flags.last_token.text.match("^[0-9]+$")&&(this._output.space_before_token=!0),I(this._flags.last_token,C)?this._output.space_before_token=!1:this.allow_wrap_or_preserved_newline(A,this._flags.last_token.text===")"&&this._options.break_chained_methods),this._options.unindent_chained_methods&&this._output.just_added_newline()&&this.deindent(),this.print_token(A)},l.prototype.handle_unknown=function(A,p){this.print_token(A),A.text[A.text.length-1]===`
`&&this.print_newline(!1,p)},l.prototype.handle_eof=function(A){for(;this._flags.mode===a.Statement;)this.restore_mode();this.handle_whitespace_and_comments(A)},qs.Beautifier=l,qs}var xi;function XS(){if(xi)return pE.exports;xi=1;var t=vS().Beautifier,e=rA().Options;function E(s,T){var n=new t(s,T);return n.beautify()}return pE.exports=E,pE.exports.defaultOptions=function(){return new e},pE.exports}var dE={exports:{}},rT={},RT={},$i;function AA(){if($i)return RT;$i=1;var t=Hn().Options;function e(E){t.call(this,E,"css"),this.selector_separator_newline=this._get_boolean("selector_separator_newline",!0),this.newline_between_rules=this._get_boolean("newline_between_rules",!0);var s=this._get_boolean("space_around_selector_separator");this.space_around_combinator=this._get_boolean("space_around_combinator")||s;var T=this._get_selection_list("brace_style",["collapse","expand","end-expand","none","preserve-inline"]);this.brace_style="collapse";for(var n=0;n<T.length;n++)T[n]!=="expand"?this.brace_style="collapse":this.brace_style=T[n]}return e.prototype=new t,RT.Options=e,RT}var ki;function KS(){if(ki)return rT;ki=1;var t=AA().Options,e=Bn().Output,E=bn().InputScanner,s=Fn().Directives,T=new s(/\/\*/,/\*\//),n=/\r\n|[\r\n]/,i=/\r\n|[\r\n]/g,r=/\s/,R=/(?:\s|\n)+/g,_=/\/\*(?:[\s\S]*?)((?:\*\/)|$)/g,o=/\/\/(?:[^\n\r\u2028\u2029]*)/g;function O(I,C){this._source_text=I||"",this._options=new t(C),this._ch=null,this._input=null,this.NESTED_AT_RULE={page:!0,"font-face":!0,keyframes:!0,media:!0,supports:!0,document:!0},this.CONDITIONAL_GROUP_RULE={media:!0,supports:!0,document:!0},this.NON_SEMICOLON_NEWLINE_PROPERTY=["grid-template-areas","grid-template"]}return O.prototype.eatString=function(I){var C="";for(this._ch=this._input.next();this._ch;){if(C+=this._ch,this._ch==="\\")C+=this._input.next();else if(I.indexOf(this._ch)!==-1||this._ch===`
`)break;this._ch=this._input.next()}return C},O.prototype.eatWhitespace=function(I){for(var C=r.test(this._input.peek()),h=0;r.test(this._input.peek());)this._ch=this._input.next(),I&&this._ch===`
`&&(h===0||h<this._options.max_preserve_newlines)&&(h++,this._output.add_new_line(!0));return C},O.prototype.foundNestedPseudoClass=function(){for(var I=0,C=1,h=this._input.peek(C);h;){if(h==="{")return!0;if(h==="(")I+=1;else if(h===")"){if(I===0)return!1;I-=1}else if(h===";"||h==="}")return!1;C++,h=this._input.peek(C)}return!1},O.prototype.print_string=function(I){this._output.set_indent(this._indentLevel),this._output.non_breaking_space=!0,this._output.add_token(I)},O.prototype.preserveSingleSpace=function(I){I&&(this._output.space_before_token=!0)},O.prototype.indent=function(){this._indentLevel++},O.prototype.outdent=function(){this._indentLevel>0&&this._indentLevel--},O.prototype.beautify=function(){if(this._options.disabled)return this._source_text;var I=this._source_text,C=this._options.eol;C==="auto"&&(C=`
`,I&&n.test(I||"")&&(C=I.match(n)[0])),I=I.replace(i,`
`);var h=I.match(/^[\t ]*/)[0];this._output=new e(this._options,h),this._input=new E(I),this._indentLevel=0,this._nestedLevel=0,this._ch=null;for(var L=0,S=!1,a=!1,N=!1,G=!1,D=!1,U=this._ch,u=!1,f,l,m;f=this._input.read(R),l=f!=="",m=U,this._ch=this._input.next(),this._ch==="\\"&&this._input.hasNext()&&(this._ch+=this._input.next()),U=this._ch,this._ch;)if(this._ch==="/"&&this._input.peek()==="*"){this._output.add_new_line(),this._input.back();var A=this._input.read(_),p=T.get_directives(A);p&&p.ignore==="start"&&(A+=T.readIgnored(this._input)),this.print_string(A),this.eatWhitespace(!0),this._output.add_new_line()}else if(this._ch==="/"&&this._input.peek()==="/")this._output.space_before_token=!0,this._input.back(),this.print_string(this._input.read(o)),this.eatWhitespace(!0);else if(this._ch==="$"){this.preserveSingleSpace(l),this.print_string(this._ch);var P=this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);P.match(/[ :]$/)&&(P=this.eatString(": ").replace(/\s+$/,""),this.print_string(P),this._output.space_before_token=!0),L===0&&P.indexOf(":")!==-1&&(a=!0,this.indent())}else if(this._ch==="@")if(this.preserveSingleSpace(l),this._input.peek()==="{")this.print_string(this._ch+this.eatString("}"));else{this.print_string(this._ch);var F=this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);F.match(/[ :]$/)&&(F=this.eatString(": ").replace(/\s+$/,""),this.print_string(F),this._output.space_before_token=!0),L===0&&F.indexOf(":")!==-1?(a=!0,this.indent()):F in this.NESTED_AT_RULE?(this._nestedLevel+=1,F in this.CONDITIONAL_GROUP_RULE&&(N=!0)):L===0&&!a&&(G=!0)}else if(this._ch==="#"&&this._input.peek()==="{")this.preserveSingleSpace(l),this.print_string(this._ch+this.eatString("}"));else if(this._ch==="{")a&&(a=!1,this.outdent()),G=!1,N?(N=!1,S=this._indentLevel>=this._nestedLevel):S=this._indentLevel>=this._nestedLevel-1,this._options.newline_between_rules&&S&&this._output.previous_line&&this._output.previous_line.item(-1)!=="{"&&this._output.ensure_empty_line_above("/",","),this._output.space_before_token=!0,this._options.brace_style==="expand"?(this._output.add_new_line(),this.print_string(this._ch),this.indent(),this._output.set_indent(this._indentLevel)):(m==="("?this._output.space_before_token=!1:m!==","&&this.indent(),this.print_string(this._ch)),this.eatWhitespace(!0),this._output.add_new_line();else if(this._ch==="}")this.outdent(),this._output.add_new_line(),m==="{"&&this._output.trim(!0),a&&(this.outdent(),a=!1),this.print_string(this._ch),S=!1,this._nestedLevel&&this._nestedLevel--,this.eatWhitespace(!0),this._output.add_new_line(),this._options.newline_between_rules&&!this._output.just_added_blankline()&&this._input.peek()!=="}"&&this._output.add_new_line(!0),this._input.peek()===")"&&(this._output.trim(!0),this._options.brace_style==="expand"&&this._output.add_new_line(!0));else if(this._ch===":"){for(var H=0;H<this.NON_SEMICOLON_NEWLINE_PROPERTY.length;H++)if(this._input.lookBack(this.NON_SEMICOLON_NEWLINE_PROPERTY[H])){u=!0;break}(S||N)&&!(this._input.lookBack("&")||this.foundNestedPseudoClass())&&!this._input.lookBack("(")&&!G&&L===0?(this.print_string(":"),a||(a=!0,this._output.space_before_token=!0,this.eatWhitespace(!0),this.indent())):(this._input.lookBack(" ")&&(this._output.space_before_token=!0),this._input.peek()===":"?(this._ch=this._input.next(),this.print_string("::")):this.print_string(":"))}else if(this._ch==='"'||this._ch==="'"){var K=m==='"'||m==="'";this.preserveSingleSpace(K||l),this.print_string(this._ch+this.eatString(this._ch)),this.eatWhitespace(!0)}else if(this._ch===";")u=!1,L===0?(a&&(this.outdent(),a=!1),G=!1,this.print_string(this._ch),this.eatWhitespace(!0),this._input.peek()!=="/"&&this._output.add_new_line()):(this.print_string(this._ch),this.eatWhitespace(!0),this._output.space_before_token=!0);else if(this._ch==="(")if(this._input.lookBack("url"))this.print_string(this._ch),this.eatWhitespace(),L++,this.indent(),this._ch=this._input.next(),this._ch===")"||this._ch==='"'||this._ch==="'"?this._input.back():this._ch&&(this.print_string(this._ch+this.eatString(")")),L&&(L--,this.outdent()));else{var Q=!1;this._input.lookBack("with")&&(Q=!0),this.preserveSingleSpace(l||Q),this.print_string(this._ch),a&&m==="$"&&this._options.selector_separator_newline?(this._output.add_new_line(),D=!0):(this.eatWhitespace(),L++,this.indent())}else if(this._ch===")")L&&(L--,this.outdent()),D&&this._input.peek()===";"&&this._options.selector_separator_newline&&(D=!1,this.outdent(),this._output.add_new_line()),this.print_string(this._ch);else if(this._ch===",")this.print_string(this._ch),this.eatWhitespace(!0),this._options.selector_separator_newline&&(!a||D)&&L===0&&!G?this._output.add_new_line():this._output.space_before_token=!0;else if((this._ch===">"||this._ch==="+"||this._ch==="~")&&!a&&L===0)this._options.space_around_combinator?(this._output.space_before_token=!0,this.print_string(this._ch),this._output.space_before_token=!0):(this.print_string(this._ch),this.eatWhitespace(),this._ch&&r.test(this._ch)&&(this._ch=""));else if(this._ch==="]")this.print_string(this._ch);else if(this._ch==="[")this.preserveSingleSpace(l),this.print_string(this._ch);else if(this._ch==="=")this.eatWhitespace(),this.print_string("="),r.test(this._ch)&&(this._ch="");else if(this._ch==="!"&&!this._input.lookBack("\\"))this._output.space_before_token=!0,this.print_string(this._ch);else{var we=m==='"'||m==="'";this.preserveSingleSpace(we||l),this.print_string(this._ch),!this._output.just_added_newline()&&this._input.peek()===`
`&&u&&this._output.add_new_line()}var LE=this._output.get_code(C);return LE},rT.Beautifier=O,rT}var Ji;function xS(){if(Ji)return dE.exports;Ji=1;var t=KS().Beautifier,e=AA().Options;function E(s,T){var n=new t(s,T);return n.beautify()}return dE.exports=E,dE.exports.defaultOptions=function(){return new e},dE.exports}var ME={exports:{}},AT={},_T={},Qi;function _A(){if(Qi)return _T;Qi=1;var t=Hn().Options;function e(E){t.call(this,E,"html"),this.templating.length===1&&this.templating[0]==="auto"&&(this.templating=["django","erb","handlebars","php"]),this.indent_inner_html=this._get_boolean("indent_inner_html"),this.indent_body_inner_html=this._get_boolean("indent_body_inner_html",!0),this.indent_head_inner_html=this._get_boolean("indent_head_inner_html",!0),this.indent_handlebars=this._get_boolean("indent_handlebars",!0),this.wrap_attributes=this._get_selection("wrap_attributes",["auto","force","force-aligned","force-expand-multiline","aligned-multiple","preserve","preserve-aligned"]),this.wrap_attributes_min_attrs=this._get_number("wrap_attributes_min_attrs",2),this.wrap_attributes_indent_size=this._get_number("wrap_attributes_indent_size",this.indent_size),this.extra_liners=this._get_array("extra_liners",["head","body","/html"]),this.inline=this._get_array("inline",["a","abbr","area","audio","b","bdi","bdo","br","button","canvas","cite","code","data","datalist","del","dfn","em","embed","i","iframe","img","input","ins","kbd","keygen","label","map","mark","math","meter","noscript","object","output","progress","q","ruby","s","samp","select","small","span","strong","sub","sup","svg","template","textarea","time","u","var","video","wbr","text","acronym","big","strike","tt"]),this.inline_custom_elements=this._get_boolean("inline_custom_elements",!0),this.void_elements=this._get_array("void_elements",["area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr","!doctype","?xml","basefont","isindex"]),this.unformatted=this._get_array("unformatted",[]),this.content_unformatted=this._get_array("content_unformatted",["pre","textarea"]),this.unformatted_content_delimiter=this._get_characters("unformatted_content_delimiter"),this.indent_scripts=this._get_selection("indent_scripts",["normal","keep","separate"])}return e.prototype=new t,_T.Options=e,_T}var UE={},qi;function ji(){if(qi)return UE;qi=1;var t=As().Tokenizer,e=As().TOKEN,E=Fn().Directives,s=RA().TemplatablePattern,T=cs().Pattern,n={TAG_OPEN:"TK_TAG_OPEN",TAG_CLOSE:"TK_TAG_CLOSE",CONTROL_FLOW_OPEN:"TK_CONTROL_FLOW_OPEN",CONTROL_FLOW_CLOSE:"TK_CONTROL_FLOW_CLOSE",ATTRIBUTE:"TK_ATTRIBUTE",EQUALS:"TK_EQUALS",VALUE:"TK_VALUE",COMMENT:"TK_COMMENT",TEXT:"TK_TEXT",UNKNOWN:"TK_UNKNOWN",START:e.START,RAW:e.RAW,EOF:e.EOF},i=new E(/<\!--/,/-->/),r=function(R,_){t.call(this,R,_),this._current_tag_name="";var o=new s(this._input).read_options(this._options),O=new T(this._input);if(this.__patterns={word:o.until(/[\n\r\t <]/),word_control_flow_close_excluded:o.until(/[\n\r\t <}]/),single_quote:o.until_after(/'/),double_quote:o.until_after(/"/),attribute:o.until(/[\n\r\t =>]|\/>/),element_name:o.until(/[\n\r\t >\/]/),angular_control_flow_start:O.matching(/\@[a-zA-Z]+[^({]*[({]/),handlebars_comment:O.starting_with(/{{!--/).until_after(/--}}/),handlebars:O.starting_with(/{{/).until_after(/}}/),handlebars_open:O.until(/[\n\r\t }]/),handlebars_raw_close:O.until(/}}/),comment:O.starting_with(/<!--/).until_after(/-->/),cdata:O.starting_with(/<!\[CDATA\[/).until_after(/]]>/),conditional_comment:O.starting_with(/<!\[/).until_after(/]>/),processing:O.starting_with(/<\?/).until_after(/\?>/)},this._options.indent_handlebars&&(this.__patterns.word=this.__patterns.word.exclude("handlebars"),this.__patterns.word_control_flow_close_excluded=this.__patterns.word_control_flow_close_excluded.exclude("handlebars")),this._unformatted_content_delimiter=null,this._options.unformatted_content_delimiter){var I=this._input.get_literal_regexp(this._options.unformatted_content_delimiter);this.__patterns.unformatted_content_delimiter=O.matching(I).until_after(I)}};return r.prototype=new t,r.prototype._is_comment=function(R){return!1},r.prototype._is_opening=function(R){return R.type===n.TAG_OPEN||R.type===n.CONTROL_FLOW_OPEN},r.prototype._is_closing=function(R,_){return R.type===n.TAG_CLOSE&&_&&((R.text===">"||R.text==="/>")&&_.text[0]==="<"||R.text==="}}"&&_.text[0]==="{"&&_.text[1]==="{")||R.type===n.CONTROL_FLOW_CLOSE&&R.text==="}"&&_.text.endsWith("{")},r.prototype._reset=function(){this._current_tag_name=""},r.prototype._get_next_token=function(R,_){var o=null;this._readWhitespace();var O=this._input.peek();return O===null?this._create_token(n.EOF,""):(o=o||this._read_open_handlebars(O,_),o=o||this._read_attribute(O,R,_),o=o||this._read_close(O,_),o=o||this._read_script_and_style(O,R),o=o||this._read_control_flows(O,_),o=o||this._read_raw_content(O,R,_),o=o||this._read_content_word(O,_),o=o||this._read_comment_or_cdata(O),o=o||this._read_processing(O),o=o||this._read_open(O,_),o=o||this._create_token(n.UNKNOWN,this._input.next()),o)},r.prototype._read_comment_or_cdata=function(R){var _=null,o=null,O=null;if(R==="<"){var I=this._input.peek(1);I==="!"&&(o=this.__patterns.comment.read(),o?(O=i.get_directives(o),O&&O.ignore==="start"&&(o+=i.readIgnored(this._input))):o=this.__patterns.cdata.read()),o&&(_=this._create_token(n.COMMENT,o),_.directives=O)}return _},r.prototype._read_processing=function(R){var _=null,o=null,O=null;if(R==="<"){var I=this._input.peek(1);(I==="!"||I==="?")&&(o=this.__patterns.conditional_comment.read(),o=o||this.__patterns.processing.read()),o&&(_=this._create_token(n.COMMENT,o),_.directives=O)}return _},r.prototype._read_open=function(R,_){var o=null,O=null;return(!_||_.type===n.CONTROL_FLOW_OPEN)&&R==="<"&&(o=this._input.next(),this._input.peek()==="/"&&(o+=this._input.next()),o+=this.__patterns.element_name.read(),O=this._create_token(n.TAG_OPEN,o)),O},r.prototype._read_open_handlebars=function(R,_){var o=null,O=null;return(!_||_.type===n.CONTROL_FLOW_OPEN)&&(this._options.templating.includes("angular")||this._options.indent_handlebars)&&R==="{"&&this._input.peek(1)==="{"&&(this._options.indent_handlebars&&this._input.peek(2)==="!"?(o=this.__patterns.handlebars_comment.read(),o=o||this.__patterns.handlebars.read(),O=this._create_token(n.COMMENT,o)):(o=this.__patterns.handlebars_open.read(),O=this._create_token(n.TAG_OPEN,o))),O},r.prototype._read_control_flows=function(R,_){var o="",O=null;if(!this._options.templating.includes("angular"))return O;if(R==="@"){if(o=this.__patterns.angular_control_flow_start.read(),o==="")return O;for(var I=o.endsWith("(")?1:0,C=0;!(o.endsWith("{")&&I===C);){var h=this._input.next();if(h===null)break;h==="("?I++:h===")"&&C++,o+=h}O=this._create_token(n.CONTROL_FLOW_OPEN,o)}else R==="}"&&_&&_.type===n.CONTROL_FLOW_OPEN&&(o=this._input.next(),O=this._create_token(n.CONTROL_FLOW_CLOSE,o));return O},r.prototype._read_close=function(R,_){var o=null,O=null;return _&&_.type===n.TAG_OPEN&&(_.text[0]==="<"&&(R===">"||R==="/"&&this._input.peek(1)===">")?(o=this._input.next(),R==="/"&&(o+=this._input.next()),O=this._create_token(n.TAG_CLOSE,o)):_.text[0]==="{"&&R==="}"&&this._input.peek(1)==="}"&&(this._input.next(),this._input.next(),O=this._create_token(n.TAG_CLOSE,"}}"))),O},r.prototype._read_attribute=function(R,_,o){var O=null,I="";if(o&&o.text[0]==="<")if(R==="=")O=this._create_token(n.EQUALS,this._input.next());else if(R==='"'||R==="'"){var C=this._input.next();R==='"'?C+=this.__patterns.double_quote.read():C+=this.__patterns.single_quote.read(),O=this._create_token(n.VALUE,C)}else I=this.__patterns.attribute.read(),I&&(_.type===n.EQUALS?O=this._create_token(n.VALUE,I):O=this._create_token(n.ATTRIBUTE,I));return O},r.prototype._is_content_unformatted=function(R){return this._options.void_elements.indexOf(R)===-1&&(this._options.content_unformatted.indexOf(R)!==-1||this._options.unformatted.indexOf(R)!==-1)},r.prototype._read_raw_content=function(R,_,o){var O="";if(o&&o.text[0]==="{")O=this.__patterns.handlebars_raw_close.read();else if(_.type===n.TAG_CLOSE&&_.opened.text[0]==="<"&&_.text[0]!=="/"){var I=_.opened.text.substr(1).toLowerCase();this._is_content_unformatted(I)&&(O=this._input.readUntil(new RegExp("</"+I+"[\\n\\r\\t ]*?>","ig")))}return O?this._create_token(n.TEXT,O):null},r.prototype._read_script_and_style=function(R,_){if(_.type===n.TAG_CLOSE&&_.opened.text[0]==="<"&&_.text[0]!=="/"){var o=_.opened.text.substr(1).toLowerCase();if(o==="script"||o==="style"){var O=this._read_comment_or_cdata(R);if(O)return O.type=n.TEXT,O;var I=this._input.readUntil(new RegExp("</"+o+"[\\n\\r\\t ]*?>","ig"));if(I)return this._create_token(n.TEXT,I)}}return null},r.prototype._read_content_word=function(R,_){var o="";return this._options.unformatted_content_delimiter&&R===this._options.unformatted_content_delimiter[0]&&(o=this.__patterns.unformatted_content_delimiter.read()),o||(o=_&&_.type===n.CONTROL_FLOW_OPEN?this.__patterns.word_control_flow_close_excluded.read():this.__patterns.word.read()),o?this._create_token(n.TEXT,o):null},UE.Tokenizer=r,UE.TOKEN=n,UE}var Zi;function $S(){if(Zi)return AT;Zi=1;var t=_A().Options,e=Bn().Output,E=ji().Tokenizer,s=ji().TOKEN,T=/\r\n|[\r\n]/,n=/\r\n|[\r\n]/g,i=function(S,a){this.indent_level=0,this.alignment_size=0,this.max_preserve_newlines=S.max_preserve_newlines,this.preserve_newlines=S.preserve_newlines,this._output=new e(S,a)};i.prototype.current_line_has_match=function(S){return this._output.current_line.has_match(S)},i.prototype.set_space_before_token=function(S,a){this._output.space_before_token=S,this._output.non_breaking_space=a},i.prototype.set_wrap_point=function(){this._output.set_indent(this.indent_level,this.alignment_size),this._output.set_wrap_point()},i.prototype.add_raw_token=function(S){this._output.add_raw_token(S)},i.prototype.print_preserved_newlines=function(S){var a=0;S.type!==s.TEXT&&S.previous.type!==s.TEXT&&(a=S.newlines?1:0),this.preserve_newlines&&(a=S.newlines<this.max_preserve_newlines+1?S.newlines:this.max_preserve_newlines+1);for(var N=0;N<a;N++)this.print_newline(N>0);return a!==0},i.prototype.traverse_whitespace=function(S){return S.whitespace_before||S.newlines?(this.print_preserved_newlines(S)||(this._output.space_before_token=!0),!0):!1},i.prototype.previous_token_wrapped=function(){return this._output.previous_token_wrapped},i.prototype.print_newline=function(S){this._output.add_new_line(S)},i.prototype.print_token=function(S){S.text&&(this._output.set_indent(this.indent_level,this.alignment_size),this._output.add_token(S.text))},i.prototype.indent=function(){this.indent_level++},i.prototype.deindent=function(){this.indent_level>0&&(this.indent_level--,this._output.set_indent(this.indent_level,this.alignment_size))},i.prototype.get_full_indent=function(S){return S=this.indent_level+(S||0),S<1?"":this._output.get_indent_string(S)};var r=function(S){for(var a=null,N=S.next;N.type!==s.EOF&&S.closed!==N;){if(N.type===s.ATTRIBUTE&&N.text==="type"){N.next&&N.next.type===s.EQUALS&&N.next.next&&N.next.next.type===s.VALUE&&(a=N.next.next.text);break}N=N.next}return a},R=function(S,a){var N=null,G=null;return a.closed?(S==="script"?N="text/javascript":S==="style"&&(N="text/css"),N=r(a)||N,N.search("text/css")>-1?G="css":N.search(/module|((text|application|dojo)\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\+)?json|method|aspect))/)>-1?G="javascript":N.search(/(text|application|dojo)\/(x-)?(html)/)>-1?G="html":N.search(/test\/null/)>-1&&(G="null"),G):null};function _(S,a){return a.indexOf(S)!==-1}function o(S,a,N){this.parent=S||null,this.tag=a?a.tag_name:"",this.indent_level=N||0,this.parser_token=a||null}function O(S){this._printer=S,this._current_frame=null}O.prototype.get_parser_token=function(){return this._current_frame?this._current_frame.parser_token:null},O.prototype.record_tag=function(S){var a=new o(this._current_frame,S,this._printer.indent_level);this._current_frame=a},O.prototype._try_pop_frame=function(S){var a=null;return S&&(a=S.parser_token,this._printer.indent_level=S.indent_level,this._current_frame=S.parent),a},O.prototype._get_frame=function(S,a){for(var N=this._current_frame;N&&S.indexOf(N.tag)===-1;){if(a&&a.indexOf(N.tag)!==-1){N=null;break}N=N.parent}return N},O.prototype.try_pop=function(S,a){var N=this._get_frame([S],a);return this._try_pop_frame(N)},O.prototype.indent_to_tag=function(S){var a=this._get_frame(S);a&&(this._printer.indent_level=a.indent_level)};function I(S,a,N,G){this._source_text=S||"",a=a||{},this._js_beautify=N,this._css_beautify=G,this._tag_stack=null;var D=new t(a,"html");this._options=D,this._is_wrap_attributes_force=this._options.wrap_attributes.substr(0,5)==="force",this._is_wrap_attributes_force_expand_multiline=this._options.wrap_attributes==="force-expand-multiline",this._is_wrap_attributes_force_aligned=this._options.wrap_attributes==="force-aligned",this._is_wrap_attributes_aligned_multiple=this._options.wrap_attributes==="aligned-multiple",this._is_wrap_attributes_preserve=this._options.wrap_attributes.substr(0,8)==="preserve",this._is_wrap_attributes_preserve_aligned=this._options.wrap_attributes==="preserve-aligned"}I.prototype.beautify=function(){if(this._options.disabled)return this._source_text;var S=this._source_text,a=this._options.eol;this._options.eol==="auto"&&(a=`
`,S&&T.test(S)&&(a=S.match(T)[0])),S=S.replace(n,`
`);var N=S.match(/^[\t ]*/)[0],G={text:"",type:""},D=new C(this._options),U=new i(this._options,N),u=new E(S,this._options).tokenize();this._tag_stack=new O(U);for(var f=null,l=u.next();l.type!==s.EOF;)l.type===s.TAG_OPEN||l.type===s.COMMENT?(f=this._handle_tag_open(U,l,D,G,u),D=f):l.type===s.ATTRIBUTE||l.type===s.EQUALS||l.type===s.VALUE||l.type===s.TEXT&&!D.tag_complete?f=this._handle_inside_tag(U,l,D,G):l.type===s.TAG_CLOSE?f=this._handle_tag_close(U,l,D):l.type===s.TEXT?f=this._handle_text(U,l,D):l.type===s.CONTROL_FLOW_OPEN?f=this._handle_control_flow_open(U,l):l.type===s.CONTROL_FLOW_CLOSE?f=this._handle_control_flow_close(U,l):U.add_raw_token(l),G=f,l=u.next();var m=U._output.get_code(a);return m},I.prototype._handle_control_flow_open=function(S,a){var N={text:a.text,type:a.type};return S.set_space_before_token(a.newlines||a.whitespace_before!=="",!0),a.newlines?S.print_preserved_newlines(a):S.set_space_before_token(a.newlines||a.whitespace_before!=="",!0),S.print_token(a),S.indent(),N},I.prototype._handle_control_flow_close=function(S,a){var N={text:a.text,type:a.type};return S.deindent(),a.newlines?S.print_preserved_newlines(a):S.set_space_before_token(a.newlines||a.whitespace_before!=="",!0),S.print_token(a),N},I.prototype._handle_tag_close=function(S,a,N){var G={text:a.text,type:a.type};return S.alignment_size=0,N.tag_complete=!0,S.set_space_before_token(a.newlines||a.whitespace_before!=="",!0),N.is_unformatted?S.add_raw_token(a):(N.tag_start_char==="<"&&(S.set_space_before_token(a.text[0]==="/",!0),this._is_wrap_attributes_force_expand_multiline&&N.has_wrapped_attrs&&S.print_newline(!1)),S.print_token(a)),N.indent_content&&!(N.is_unformatted||N.is_content_unformatted)&&(S.indent(),N.indent_content=!1),!N.is_inline_element&&!(N.is_unformatted||N.is_content_unformatted)&&S.set_wrap_point(),G},I.prototype._handle_inside_tag=function(S,a,N,G){var D=N.has_wrapped_attrs,U={text:a.text,type:a.type};return S.set_space_before_token(a.newlines||a.whitespace_before!=="",!0),N.is_unformatted?S.add_raw_token(a):N.tag_start_char==="{"&&a.type===s.TEXT?S.print_preserved_newlines(a)?(a.newlines=0,S.add_raw_token(a)):S.print_token(a):(a.type===s.ATTRIBUTE?S.set_space_before_token(!0):(a.type===s.EQUALS||a.type===s.VALUE&&a.previous.type===s.EQUALS)&&S.set_space_before_token(!1),a.type===s.ATTRIBUTE&&N.tag_start_char==="<"&&((this._is_wrap_attributes_preserve||this._is_wrap_attributes_preserve_aligned)&&(S.traverse_whitespace(a),D=D||a.newlines!==0),this._is_wrap_attributes_force&&N.attr_count>=this._options.wrap_attributes_min_attrs&&(G.type!==s.TAG_OPEN||this._is_wrap_attributes_force_expand_multiline)&&(S.print_newline(!1),D=!0)),S.print_token(a),D=D||S.previous_token_wrapped(),N.has_wrapped_attrs=D),U},I.prototype._handle_text=function(S,a,N){var G={text:a.text,type:"TK_CONTENT"};return N.custom_beautifier_name?this._print_custom_beatifier_text(S,a,N):N.is_unformatted||N.is_content_unformatted?S.add_raw_token(a):(S.traverse_whitespace(a),S.print_token(a)),G},I.prototype._print_custom_beatifier_text=function(S,a,N){var G=this;if(a.text!==""){var D=a.text,U,u=1,f="",l="";N.custom_beautifier_name==="javascript"&&typeof this._js_beautify=="function"?U=this._js_beautify:N.custom_beautifier_name==="css"&&typeof this._css_beautify=="function"?U=this._css_beautify:N.custom_beautifier_name==="html"&&(U=function(H,K){var Q=new I(H,K,G._js_beautify,G._css_beautify);return Q.beautify()}),this._options.indent_scripts==="keep"?u=0:this._options.indent_scripts==="separate"&&(u=-S.indent_level);var m=S.get_full_indent(u);if(D=D.replace(/\n[ \t]*$/,""),N.custom_beautifier_name!=="html"&&D[0]==="<"&&D.match(/^(<!--|<!\[CDATA\[)/)){var A=/^(<!--[^\n]*|<!\[CDATA\[)(\n?)([ \t\n]*)([\s\S]*)(-->|]]>)$/.exec(D);if(!A){S.add_raw_token(a);return}f=m+A[1]+`
`,D=A[4],A[5]&&(l=m+A[5]),D=D.replace(/\n[ \t]*$/,""),(A[2]||A[3].indexOf(`
`)!==-1)&&(A=A[3].match(/[ \t]+$/),A&&(a.whitespace_before=A[0]))}if(D)if(U){var p=function(){this.eol=`
`};p.prototype=this._options.raw_options;var P=new p;D=U(m+D,P)}else{var F=a.whitespace_before;F&&(D=D.replace(new RegExp(`
(`+F+")?","g"),`
`)),D=m+D.replace(/\n/g,`
`+m)}f&&(D?D=f+D+`
`+l:D=f+l),S.print_newline(!1),D&&(a.text=D,a.whitespace_before="",a.newlines=0,S.add_raw_token(a),S.print_newline(!0))}},I.prototype._handle_tag_open=function(S,a,N,G,D){var U=this._get_tag_open_token(a);if((N.is_unformatted||N.is_content_unformatted)&&!N.is_empty_element&&a.type===s.TAG_OPEN&&!U.is_start_tag?(S.add_raw_token(a),U.start_tag_token=this._tag_stack.try_pop(U.tag_name)):(S.traverse_whitespace(a),this._set_tag_position(S,a,U,N,G),U.is_inline_element||S.set_wrap_point(),S.print_token(a)),U.is_start_tag&&this._is_wrap_attributes_force){var u=0,f;do f=D.peek(u),f.type===s.ATTRIBUTE&&(U.attr_count+=1),u+=1;while(f.type!==s.EOF&&f.type!==s.TAG_CLOSE)}return(this._is_wrap_attributes_force_aligned||this._is_wrap_attributes_aligned_multiple||this._is_wrap_attributes_preserve_aligned)&&(U.alignment_size=a.text.length+1),!U.tag_complete&&!U.is_unformatted&&(S.alignment_size=U.alignment_size),U};var C=function(S,a,N){if(this.parent=a||null,this.text="",this.type="TK_TAG_OPEN",this.tag_name="",this.is_inline_element=!1,this.is_unformatted=!1,this.is_content_unformatted=!1,this.is_empty_element=!1,this.is_start_tag=!1,this.is_end_tag=!1,this.indent_content=!1,this.multiline_content=!1,this.custom_beautifier_name=null,this.start_tag_token=null,this.attr_count=0,this.has_wrapped_attrs=!1,this.alignment_size=0,this.tag_complete=!1,this.tag_start_char="",this.tag_check="",!N)this.tag_complete=!0;else{var G;this.tag_start_char=N.text[0],this.text=N.text,this.tag_start_char==="<"?(G=N.text.match(/^<([^\s>]*)/),this.tag_check=G?G[1]:""):(G=N.text.match(/^{{~?(?:[\^]|#\*?)?([^\s}]+)/),this.tag_check=G?G[1]:"",(N.text.startsWith("{{#>")||N.text.startsWith("{{~#>"))&&this.tag_check[0]===">"&&(this.tag_check===">"&&N.next!==null?this.tag_check=N.next.text.split(" ")[0]:this.tag_check=N.text.split(">")[1])),this.tag_check=this.tag_check.toLowerCase(),N.type===s.COMMENT&&(this.tag_complete=!0),this.is_start_tag=this.tag_check.charAt(0)!=="/",this.tag_name=this.is_start_tag?this.tag_check:this.tag_check.substr(1),this.is_end_tag=!this.is_start_tag||N.closed&&N.closed.text==="/>";var D=2;this.tag_start_char==="{"&&this.text.length>=3&&this.text.charAt(2)==="~"&&(D=3),this.is_end_tag=this.is_end_tag||this.tag_start_char==="{"&&(!S.indent_handlebars||this.text.length<3||/[^#\^]/.test(this.text.charAt(D)))}};I.prototype._get_tag_open_token=function(S){var a=new C(this._options,this._tag_stack.get_parser_token(),S);return a.alignment_size=this._options.wrap_attributes_indent_size,a.is_end_tag=a.is_end_tag||_(a.tag_check,this._options.void_elements),a.is_empty_element=a.tag_complete||a.is_start_tag&&a.is_end_tag,a.is_unformatted=!a.tag_complete&&_(a.tag_check,this._options.unformatted),a.is_content_unformatted=!a.is_empty_element&&_(a.tag_check,this._options.content_unformatted),a.is_inline_element=_(a.tag_name,this._options.inline)||this._options.inline_custom_elements&&a.tag_name.includes("-")||a.tag_start_char==="{",a},I.prototype._set_tag_position=function(S,a,N,G,D){if(N.is_empty_element||(N.is_end_tag?N.start_tag_token=this._tag_stack.try_pop(N.tag_name):(this._do_optional_end_element(N)&&(N.is_inline_element||S.print_newline(!1)),this._tag_stack.record_tag(N),(N.tag_name==="script"||N.tag_name==="style")&&!(N.is_unformatted||N.is_content_unformatted)&&(N.custom_beautifier_name=R(N.tag_check,a)))),_(N.tag_check,this._options.extra_liners)&&(S.print_newline(!1),S._output.just_added_blankline()||S.print_newline(!0)),N.is_empty_element){if(N.tag_start_char==="{"&&N.tag_check==="else"){this._tag_stack.indent_to_tag(["if","unless","each"]),N.indent_content=!0;var U=S.current_line_has_match(/{{#if/);U||S.print_newline(!1)}N.tag_name==="!--"&&D.type===s.TAG_CLOSE&&G.is_end_tag&&N.text.indexOf(`
`)===-1||(N.is_inline_element||N.is_unformatted||S.print_newline(!1),this._calcluate_parent_multiline(S,N))}else if(N.is_end_tag){var u=!1;u=N.start_tag_token&&N.start_tag_token.multiline_content,u=u||!N.is_inline_element&&!(G.is_inline_element||G.is_unformatted)&&!(D.type===s.TAG_CLOSE&&N.start_tag_token===G)&&D.type!=="TK_CONTENT",(N.is_content_unformatted||N.is_unformatted)&&(u=!1),u&&S.print_newline(!1)}else N.indent_content=!N.custom_beautifier_name,N.tag_start_char==="<"&&(N.tag_name==="html"?N.indent_content=this._options.indent_inner_html:N.tag_name==="head"?N.indent_content=this._options.indent_head_inner_html:N.tag_name==="body"&&(N.indent_content=this._options.indent_body_inner_html)),!(N.is_inline_element||N.is_unformatted)&&(D.type!=="TK_CONTENT"||N.is_content_unformatted)&&S.print_newline(!1),this._calcluate_parent_multiline(S,N)},I.prototype._calcluate_parent_multiline=function(S,a){a.parent&&S._output.just_added_newline()&&!((a.is_inline_element||a.is_unformatted)&&a.parent.is_inline_element)&&(a.parent.multiline_content=!0)};var h=["address","article","aside","blockquote","details","div","dl","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","main","menu","nav","ol","p","pre","section","table","ul"],L=["a","audio","del","ins","map","noscript","video"];return I.prototype._do_optional_end_element=function(S){var a=null;if(!(S.is_empty_element||!S.is_start_tag||!S.parent)){if(S.tag_name==="body")a=a||this._tag_stack.try_pop("head");else if(S.tag_name==="li")a=a||this._tag_stack.try_pop("li",["ol","ul","menu"]);else if(S.tag_name==="dd"||S.tag_name==="dt")a=a||this._tag_stack.try_pop("dt",["dl"]),a=a||this._tag_stack.try_pop("dd",["dl"]);else if(S.parent.tag_name==="p"&&h.indexOf(S.tag_name)!==-1){var N=S.parent.parent;(!N||L.indexOf(N.tag_name)===-1)&&(a=a||this._tag_stack.try_pop("p"))}else S.tag_name==="rp"||S.tag_name==="rt"?(a=a||this._tag_stack.try_pop("rt",["ruby","rtc"]),a=a||this._tag_stack.try_pop("rp",["ruby","rtc"])):S.tag_name==="optgroup"?a=a||this._tag_stack.try_pop("optgroup",["select"]):S.tag_name==="option"?a=a||this._tag_stack.try_pop("option",["select","datalist","optgroup"]):S.tag_name==="colgroup"?a=a||this._tag_stack.try_pop("caption",["table"]):S.tag_name==="thead"?(a=a||this._tag_stack.try_pop("caption",["table"]),a=a||this._tag_stack.try_pop("colgroup",["table"])):S.tag_name==="tbody"||S.tag_name==="tfoot"?(a=a||this._tag_stack.try_pop("caption",["table"]),a=a||this._tag_stack.try_pop("colgroup",["table"]),a=a||this._tag_stack.try_pop("thead",["table"]),a=a||this._tag_stack.try_pop("tbody",["table"])):S.tag_name==="tr"?(a=a||this._tag_stack.try_pop("caption",["table"]),a=a||this._tag_stack.try_pop("colgroup",["table"]),a=a||this._tag_stack.try_pop("tr",["table","thead","tbody","tfoot"])):(S.tag_name==="th"||S.tag_name==="td")&&(a=a||this._tag_stack.try_pop("td",["table","thead","tbody","tfoot","tr"]),a=a||this._tag_stack.try_pop("th",["table","thead","tbody","tfoot","tr"]));return S.parent=this._tag_stack.get_parser_token(),a}},AT.Beautifier=I,AT}var zi;function kS(){if(zi)return ME.exports;zi=1;var t=$S().Beautifier,e=_A().Options;function E(s,T,n,i){var r=new t(s,T,n,i);return r.beautify()}return ME.exports=E,ME.exports.defaultOptions=function(){return new e},ME.exports}var er;function JS(){if(er)return zt;er=1;var t=XS(),e=xS(),E=kS();function s(T,n,i,r){return i=i||t,r=r||e,E(T,n,i,r)}return s.defaultOptions=E.defaultOptions,zt.js=t,zt.css=e,zt.html=s,zt}var tr;function QS(){return tr||(tr=1,(function(t){function e(E,s,T){var n=function(i,r){return E.js_beautify(i,r)};return n.js=E.js_beautify,n.css=s.css_beautify,n.html=T.html_beautify,n.js_beautify=E.js_beautify,n.css_beautify=s.css_beautify,n.html_beautify=T.html_beautify,n}(function(E){var s=JS();s.js_beautify=s.js,s.css_beautify=s.css,s.html_beautify=s.html,E.exports=e(s,s,s)})(t)})(Qs)),Qs.exports}var qS=QS();const Eu=c_(qS),c=t=>t.flatMap(jS),jS=t=>WE(zS(t)).map(ZS),ZS=t=>t.replace(/ +/g," ").trim(),zS=t=>({type:"mandatory_block",items:Yn(t,0)[0]}),Yn=(t,e,E)=>{const s=[];for(;t[e];){const[T,n]=eO(t,e);if(s.push(T),e=n,t[e]==="|")e++;else if(t[e]==="}"||t[e]==="]"){if(E!==t[e])throw new Error(`Unbalanced parenthesis in: ${t}`);return e++,[s,e]}else if(e===t.length){if(E)throw new Error(`Unbalanced parenthesis in: ${t}`);return[s,e]}else throw new Error(`Unexpected "${t[e]}"`)}return[s,e]},eO=(t,e)=>{const E=[];for(;;){const[s,T]=tO(t,e);if(s)E.push(s),e=T;else break}return E.length===1?[E[0],e]:[{type:"concatenation",items:E},e]},tO=(t,e)=>{if(t[e]==="{")return EO(t,e+1);if(t[e]==="[")return sO(t,e+1);{let E="";for(;t[e]&&/[A-Za-z0-9_ ]/.test(t[e]);)E+=t[e],e++;return[E,e]}},EO=(t,e)=>{const[E,s]=Yn(t,e,"}");return[{type:"mandatory_block",items:E},s]},sO=(t,e)=>{const[E,s]=Yn(t,e,"]");return[{type:"optional_block",items:E},s]},WE=t=>{if(typeof t=="string")return[t];if(t.type==="concatenation")return t.items.map(WE).reduce(TO,[""]);if(t.type==="mandatory_block")return t.items.flatMap(WE);if(t.type==="optional_block")return["",...t.items.flatMap(WE)];throw new Error(`Unknown node type: ${t}`)},TO=(t,e)=>{const E=[];for(const s of t)for(const T of e)E.push(s+T);return E};var M;(function(t){t.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",t.IDENTIFIER="IDENTIFIER",t.STRING="STRING",t.VARIABLE="VARIABLE",t.RESERVED_DATA_TYPE="RESERVED_DATA_TYPE",t.RESERVED_PARAMETERIZED_DATA_TYPE="RESERVED_PARAMETERIZED_DATA_TYPE",t.RESERVED_KEYWORD="RESERVED_KEYWORD",t.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",t.RESERVED_KEYWORD_PHRASE="RESERVED_KEYWORD_PHRASE",t.RESERVED_DATA_TYPE_PHRASE="RESERVED_DATA_TYPE_PHRASE",t.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",t.RESERVED_CLAUSE="RESERVED_CLAUSE",t.RESERVED_SELECT="RESERVED_SELECT",t.RESERVED_JOIN="RESERVED_JOIN",t.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",t.ARRAY_KEYWORD="ARRAY_KEYWORD",t.CASE="CASE",t.END="END",t.WHEN="WHEN",t.ELSE="ELSE",t.THEN="THEN",t.LIMIT="LIMIT",t.BETWEEN="BETWEEN",t.AND="AND",t.OR="OR",t.XOR="XOR",t.OPERATOR="OPERATOR",t.COMMA="COMMA",t.ASTERISK="ASTERISK",t.PROPERTY_ACCESS_OPERATOR="PROPERTY_ACCESS_OPERATOR",t.OPEN_PAREN="OPEN_PAREN",t.CLOSE_PAREN="CLOSE_PAREN",t.LINE_COMMENT="LINE_COMMENT",t.BLOCK_COMMENT="BLOCK_COMMENT",t.DISABLE_COMMENT="DISABLE_COMMENT",t.NUMBER="NUMBER",t.NAMED_PARAMETER="NAMED_PARAMETER",t.QUOTED_PARAMETER="QUOTED_PARAMETER",t.NUMBERED_PARAMETER="NUMBERED_PARAMETER",t.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",t.CUSTOM_PARAMETER="CUSTOM_PARAMETER",t.DELIMITER="DELIMITER",t.EOF="EOF"})(M=M||(M={}));const aA=t=>({type:M.EOF,raw:"«EOF»",text:"«EOF»",start:t}),Vt=aA(1/0),Lt=t=>e=>e.type===t.type&&e.text===t.text,rt={ARRAY:Lt({text:"ARRAY",type:M.RESERVED_DATA_TYPE}),BY:Lt({text:"BY",type:M.RESERVED_KEYWORD}),SET:Lt({text:"SET",type:M.RESERVED_CLAUSE}),STRUCT:Lt({text:"STRUCT",type:M.RESERVED_DATA_TYPE}),WINDOW:Lt({text:"WINDOW",type:M.RESERVED_CLAUSE}),VALUES:Lt({text:"VALUES",type:M.RESERVED_CLAUSE})},SA=t=>t===M.RESERVED_DATA_TYPE||t===M.RESERVED_KEYWORD||t===M.RESERVED_FUNCTION_NAME||t===M.RESERVED_KEYWORD_PHRASE||t===M.RESERVED_DATA_TYPE_PHRASE||t===M.RESERVED_CLAUSE||t===M.RESERVED_SELECT||t===M.RESERVED_SET_OPERATION||t===M.RESERVED_JOIN||t===M.ARRAY_KEYWORD||t===M.CASE||t===M.END||t===M.WHEN||t===M.ELSE||t===M.THEN||t===M.LIMIT||t===M.BETWEEN||t===M.AND||t===M.OR||t===M.XOR,nO=t=>t===M.AND||t===M.OR||t===M.XOR,iO=["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH","ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP","ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM","APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM","ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL","BIT_COUNT","PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST","CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE","CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME","ERROR","EXTERNAL_QUERY","S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y","FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512","HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT","MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING","ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET","FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC","NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER","SESSION_USER","CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE","ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER","CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME","CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS","GENERATE_UUID","COALESCE","IF","IFNULL","NULLIF","AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP","BIT_COUNT","BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING","COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR","FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP","JSON_EXTRACT","JSON_EXTRACT_SCALAR","ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH","REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE","CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER","TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY","HOST","DOMAIN","TLD","AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64","BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW","OPTIONS","PIVOT","UNPIVOT"],rO=["ALL","AND","ANY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN","SAFE","LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"],RO=["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],AO=c(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),_O=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),Er=c(["CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]"]),aT=c(["CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),aO=c(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),SO=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),OO=c(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN","IS [NOT] DISTINCT FROM"]),oO=c([]),IO={name:"bigquery",tokenizerOptions:{reservedSelect:AO,reservedClauses:[..._O,...aT,...Er],reservedSetOperations:aO,reservedJoins:SO,reservedKeywordPhrases:OO,reservedDataTypePhrases:oO,reservedKeywords:rO,reservedDataTypes:RO,reservedFunctionNames:iO,extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},variableTypes:[{regex:String.raw`@@\w+`}],lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||","=>"],postProcess:NO},formatOptions:{onelineClauses:[...Er,...aT],tabularOnelineClauses:aT}};function NO(t){return lO(LO(t))}function lO(t){let e=Vt;return t.map(E=>E.text==="OFFSET"&&e.text==="["?(e=E,Object.assign(Object.assign({},E),{type:M.RESERVED_FUNCTION_NAME})):(e=E,E))}function LO(t){var e;const E=[];for(let s=0;s<t.length;s++){const T=t[s];if((rt.ARRAY(T)||rt.STRUCT(T))&&((e=t[s+1])===null||e===void 0?void 0:e.text)==="<"){const n=uO(t,s+1),i=t.slice(s,n+1);E.push({type:M.IDENTIFIER,raw:i.map(sr("raw")).join(""),text:i.map(sr("text")).join(""),start:T.start}),s=n}else E.push(T)}return E}const sr=t=>e=>e.type===M.IDENTIFIER||e.type===M.COMMA?e[t]+" ":e[t];function uO(t,e){let E=0;for(let s=e;s<t.length;s++){const T=t[s];if(T.text==="<"?E++:T.text===">"?E--:T.text===">>"&&(E-=2),E===0)return s}return t.length-1}const CO=["ARRAY_AGG","AVG","CORRELATION","COUNT","COUNT_BIG","COVARIANCE","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_SAMP","SUM","VARIANCE","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","AGE","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ASCII","ASCII_STR","ASIN","ATAN","ATAN2","ATANH","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BPCHAR","BSON_TO_JSON","BTRIM","CARDINALITY","CEILING","CEIL","CHARACTER_LENGTH","CHR","COALESCE","COLLATION_KEY","COLLATION_KEY_BIT","COMPARE_DECFLOAT","CONCAT","COS","COSH","COT","CURSOR_ROWCOUNT","DATAPARTITIONNUM","DATE_PART","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DAYS_TO_END_OF_MONTH","DBPARTITIONNUM","DECFLOAT","DECFLOAT_FORMAT","DECODE","DECRYPT_BIN","DECRYPT_CHAR","DEGREES","DEREF","DIFFERENCE","DIGITS","DOUBLE_PRECISION","EMPTY_BLOB","EMPTY_CLOB","EMPTY_DBCLOB","EMPTY_NCLOB","ENCRYPT","EVENT_MON_STATE","EXP","EXTRACT","FIRST_DAY","FLOOR","FROM_UTC_TIMESTAMP","GENERATE_UNIQUE","GETHINT","GREATEST","HASH","HASH4","HASH8","HASHEDVALUE","HEX","HEXTORAW","HOUR","HOURS_BETWEEN","IDENTITY_VAL_LOCAL","IFNULL","INITCAP","INSERT","INSTR","INSTR2","INSTR4","INSTRB","INTNAND","INTNOR","INTNXOR","INTNNOT","ISNULL","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_VALUE","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LENGTH2","LENGTH4","LENGTHB","LN","LOCATE","LOCATE_IN_STRING","LOG10","LONG_VARCHAR","LONG_VARGRAPHIC","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MINUTES_BETWEEN","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NEXT_QUARTER","NEXT_WEEK","NEXT_YEAR","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARAMETER","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","QUOTE_IDENT","QUOTE_LITERAL","RADIANS","RAISE_ERROR","RAND","RANDOM","RAWTOHEX","REC2XML","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_MATCH_COUNT","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RID_BIT","RIGHT","ROUND","ROUND_TIMESTAMP","RPAD","RTRIM","SECLABEL","SECLABEL_BY_NAME","SECLABEL_TO_CHAR","SECOND","SECONDS_BETWEEN","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTR2","SUBSTR4","SUBSTRB","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","THIS_MONTH","THIS_QUARTER","THIS_WEEK","THIS_YEAR","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF","TIMEZONE","TO_CHAR","TO_CLOB","TO_DATE","TO_HEX","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_UTC_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM","TRIM_ARRAY","TRUNC_TIMESTAMP","TRUNCATE","TRUNC","TYPE_ID","TYPE_NAME","TYPE_SCHEMA","UCASE","UNICODE_STR","UPPER","VALUE","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARCHAR_FORMAT_BIT","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WEEKS_BETWEEN","WIDTH_BUCKET","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XMLXSROBJECTID","XSLTRANSFORM","YEAR","YEARS_BETWEEN","YMD_BETWEEN","BASE_TABLE","JSON_TABLE","UNNEST","XMLTABLE","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT","CAST"],cO=["ACTIVATE","ADD","AFTER","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","AS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","ATTRIBUTES","AUDIT","AUTHORIZATION","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BINARY","BUFFERPOOL","BY","CACHE","CALL","CALLED","CAPTURE","CARDINALITY","CASCADED","CASE","CAST","CHECK","CLONE","CLOSE","CLUSTER","COLLECTION","COLLID","COLUMN","COMMENT","COMMIT","CONCAT","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONTAINS","CONTINUE","COUNT","COUNT_BIG","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFINITION","DELETE","DENSERANK","DENSE_RANK","DESCRIBE","DESCRIPTOR","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DSSIZE","DYNAMIC","EACH","EDITPROC","ELSE","ELSEIF","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ERASE","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTERNAL","EXTRACT","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST1","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GRAPHIC","GROUP","HANDLER","HASH","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IMMEDIATE","IMPORT","IN","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDICATOR","INDICATORS","INF","INFINITY","INHERIT","INNER","INOUT","INSENSITIVE","INSERT","INTEGRITY","INTERSECT","INTO","IS","ISNULL","ISOBID","ISOLATION","ITERATE","JAR","JAVA","JOIN","KEEP","KEY","LABEL","LANGUAGE","LAST3","LATERAL","LC_CTYPE","LEAVE","LEFT","LIKE","LIMIT","LINKTYPE","LOCAL","LOCALDATE","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LOOP","MAINTAINED","MATERIALIZED","MAXVALUE","MICROSECOND","MICROSECONDS","MINUTE","MINUTES","MINVALUE","MODE","MODIFIES","MONTH","MONTHS","NAN","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT2","NOTNULL","NULL","NULLS","NUMPARTS","OBID","OF","OFF","OFFSET","OLD","OLD_TABLE","ON","OPEN","OPTIMIZATION","OPTIMIZE","OPTION","OR","ORDER","OUT","OUTER","OVER","OVERRIDING","PACKAGE","PADDED","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSWORD","PATH","PERCENT","PIECESIZE","PLAN","POSITION","PRECISION","PREPARE","PREVVAL","PRIMARY","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","RANGE","RANK","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWNUMBER","ROWS","ROWSET","ROW_NUMBER","RRN","RUN","SAVEPOINT","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURITY","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","STACKED","STANDARD","START","STARTING","STATEMENT","STATIC","STATMENT","STAY","STOGROUP","STORES","STYLE","SUBSTRING","SUMMARY","SYNONYM","SYSFUN","SYSIBM","SYSPROC","SYSTEM","SYSTEM_USER","TABLE","TABLESPACE","THEN","TO","TRANSACTION","TRIGGER","TRIM","TRUNCATE","TYPE","UNDO","UNION","UNIQUE","UNTIL","UPDATE","USAGE","USER","USING","VALIDPROC","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VIEW","VOLATILE","VOLUMES","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHOUT","WLM","WRITE","XMLELEMENT","XMLEXISTS","XMLNAMESPACES","YEAR","YEARS"],fO=["ARRAY","BIGINT","BINARY","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATE","DATETIME","DBCLOB","DEC","DECIMAL","DOUBLE","DOUBLE PRECISION","FLOAT","FLOAT4","FLOAT8","GRAPHIC","INT","INT2","INT4","INT8","INTEGER","INTERVAL","LONG VARCHAR","LONG VARGRAPHIC","NCHAR","NCHR","NCLOB","NVARCHAR","NUMERIC","SMALLINT","REAL","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC"],hO=c(["SELECT [ALL | DISTINCT]"]),pO=c(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH NEXT","FOR UPDATE [OF]","FOR {READ | FETCH} ONLY","FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]","WAIT FOR OUTCOME","SKIP LOCKED DATA","INTO","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT"]),Tr=c(["CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]"]),ST=c(["CREATE [OR REPLACE] VIEW","UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME COLUMN","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {DEFAULT | GENERATED | NOT NULL}","TRUNCATE [TABLE]","ALLOCATE","ALTER AUDIT POLICY","ALTER BUFFERPOOL","ALTER DATABASE PARTITION GROUP","ALTER DATABASE","ALTER EVENT MONITOR","ALTER FUNCTION","ALTER HISTOGRAM TEMPLATE","ALTER INDEX","ALTER MASK","ALTER METHOD","ALTER MODULE","ALTER NICKNAME","ALTER PACKAGE","ALTER PERMISSION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SECURITY LABEL COMPONENT","ALTER SECURITY POLICY","ALTER SEQUENCE","ALTER SERVER","ALTER SERVICE CLASS","ALTER STOGROUP","ALTER TABLESPACE","ALTER THRESHOLD","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER TYPE","ALTER USAGE LIST","ALTER USER MAPPING","ALTER VIEW","ALTER WORK ACTION SET","ALTER WORK CLASS SET","ALTER WORKLOAD","ALTER WRAPPER","ALTER XSROBJECT","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","AUDIT","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON","COMMIT [WORK]","CONNECT","CREATE [OR REPLACE] [PUBLIC] ALIAS","CREATE AUDIT POLICY","CREATE BUFFERPOOL","CREATE DATABASE PARTITION GROUP","CREATE EVENT MONITOR","CREATE [OR REPLACE] FUNCTION","CREATE FUNCTION MAPPING","CREATE HISTOGRAM TEMPLATE","CREATE [UNIQUE] INDEX","CREATE INDEX EXTENSION","CREATE [OR REPLACE] MASK","CREATE [SPECIFIC] METHOD","CREATE [OR REPLACE] MODULE","CREATE [OR REPLACE] NICKNAME","CREATE [OR REPLACE] PERMISSION","CREATE [OR REPLACE] PROCEDURE","CREATE ROLE","CREATE SCHEMA","CREATE SECURITY LABEL [COMPONENT]","CREATE SECURITY POLICY","CREATE [OR REPLACE] SEQUENCE","CREATE SERVICE CLASS","CREATE SERVER","CREATE STOGROUP","CREATE SYNONYM","CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE","CREATE THRESHOLD","CREATE {TRANSFORM | TRANSFORMS} FOR","CREATE [OR REPLACE] TRIGGER","CREATE TRUSTED CONTEXT","CREATE [OR REPLACE] TYPE","CREATE TYPE MAPPING","CREATE USAGE LIST","CREATE USER MAPPING FOR","CREATE [OR REPLACE] VARIABLE","CREATE WORK ACTION SET","CREATE WORK CLASS SET","CREATE WORKLOAD","CREATE WRAPPER","DECLARE","DECLARE GLOBAL TEMPORARY TABLE","DESCRIBE [INPUT | OUTPUT]","DISCONNECT","DROP [PUBLIC] ALIAS","DROP AUDIT POLICY","DROP BUFFERPOOL","DROP DATABASE PARTITION GROUP","DROP EVENT MONITOR","DROP [SPECIFIC] FUNCTION","DROP FUNCTION MAPPING","DROP HISTOGRAM TEMPLATE","DROP INDEX [EXTENSION]","DROP MASK","DROP [SPECIFIC] METHOD","DROP MODULE","DROP NICKNAME","DROP PACKAGE","DROP PERMISSION","DROP [SPECIFIC] PROCEDURE","DROP ROLE","DROP SCHEMA","DROP SECURITY LABEL [COMPONENT]","DROP SECURITY POLICY","DROP SEQUENCE","DROP SERVER","DROP SERVICE CLASS","DROP STOGROUP","DROP TABLE HIERARCHY","DROP {TABLESPACE | TABLESPACES}","DROP {TRANSFORM | TRANSFORMS}","DROP THRESHOLD","DROP TRIGGER","DROP TRUSTED CONTEXT","DROP TYPE [MAPPING]","DROP USAGE LIST","DROP USER MAPPING FOR","DROP VARIABLE","DROP VIEW [HIERARCHY]","DROP WORK {ACTION | CLASS} SET","DROP WORKLOAD","DROP WRAPPER","DROP XSROBJECT","END DECLARE SECTION","EXECUTE [IMMEDIATE]","EXPLAIN {PLAN [SECTION] | ALL}","FETCH [FROM]","FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL","FLUSH EVENT MONITOR","FLUSH FEDERATED CACHE","FLUSH OPTIMIZATION PROFILE CACHE","FLUSH PACKAGE CACHE [DYNAMIC]","FLUSH AUTHENTICATION CACHE [FOR ALL]","FREE LOCATOR","GET DIAGNOSTICS","GOTO","GRANT","INCLUDE","ITERATE","LEAVE","LOCK TABLE","LOOP","OPEN","PIPE","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]","REPEAT","RESIGNAL","RETURN","REVOKE","ROLLBACK [WORK] [TO SAVEPOINT]","SAVEPOINT","SET COMPILATION ENVIRONMENT","SET CONNECTION","SET CURRENT","SET ENCRYPTION PASSWORD","SET EVENT MONITOR STATE","SET INTEGRITY","SET PASSTHRU","SET PATH","SET ROLE","SET SCHEMA","SET SERVER OPTION","SET {SESSION AUTHORIZATION | SESSION_USER}","SET USAGE LIST","SIGNAL","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}","WHILE"]),DO=c(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),PO=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),dO=c(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),MO=c([]),UO={name:"db2",tokenizerOptions:{reservedSelect:hO,reservedClauses:[...pO,...Tr,...ST],reservedSetOperations:DO,reservedJoins:PO,reservedKeywordPhrases:dO,reservedDataTypePhrases:MO,reservedKeywords:cO,reservedDataTypes:fO,reservedFunctionNames:CO,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","%","|","&","^","~","¬=","¬>","¬<","!>","!<","^=","^>","^<","||","->","=>"]},formatOptions:{onelineClauses:[...Tr,...ST],tabularOnelineClauses:ST}},mO=["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","EVERY","GROUPING","JSON_ARRAYAGG","JSON_OBJECTAGG","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","SOME","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","ANTILOG","ARRAY_MAX_CARDINALITY","ARRAY_TRIM","ASCII","ASIN","ATAN","ATAN2","ATANH","BASE64_DECODE","BASE64_ENCODE","BIT_LENGTH","BITAND","BITANDNOT","BITNOT","BITOR","BITXOR","BSON_TO_JSON","CARDINALITY","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","COALESCE","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","COT","CURDATE","CURTIME","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK_ISO","DAYOFWEEK","DAYOFYEAR","DAYS","DBPARTITIONNAME","DBPARTITIONNUM","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DEGREES","DIFFERENCE","DIGITS","DLCOMMENT","DLLINKTYPE","DLURLCOMPLETE","DLURLPATH","DLURLPATHONLY","DLURLSCHEME","DLURLSERVER","DLVALUE","DOUBLE_PRECISION","DOUBLE","ENCRPYT","ENCRYPT_AES","ENCRYPT_AES256","ENCRYPT_RC2","ENCRYPT_TDES","EXP","EXTRACT","FIRST_DAY","FLOOR","GENERATE_UNIQUE","GET_BLOB_FROM_FILE","GET_CLOB_FROM_FILE","GET_DBCLOB_FROM_FILE","GET_XML_FILE","GETHINT","GREATEST","HASH_MD5","HASH_ROW","HASH_SHA1","HASH_SHA256","HASH_SHA512","HASH_VALUES","HASHED_VALUE","HEX","HEXTORAW","HOUR","HTML_ENTITY_DECODE","HTML_ENTITY_ENCODE","HTTP_DELETE_BLOB","HTTP_DELETE","HTTP_GET_BLOB","HTTP_GET","HTTP_PATCH_BLOB","HTTP_PATCH","HTTP_POST_BLOB","HTTP_POST","HTTP_PUT_BLOB","HTTP_PUT","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTERPRET","ISFALSE","ISNOTFALSE","ISNOTTRUE","ISTRUE","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_UPDATE","JSON_VALUE","JULIAN_DAY","LAND","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LNOT","LOCATE_IN_STRING","LOCATE","LOG10","LOR","LOWER","LPAD","LTRIM","MAX_CARDINALITY","MAX","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","OCTET_LENGTH","OVERLAY","PI","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND_TIMESTAMP","ROUND","RPAD","RRN","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF_BIG","TIMESTAMPDIFF","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TO_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM_ARRAY","TRIM","TRUNC_TIMESTAMP","TRUNC","TRUNCATE","UCASE","UPPER","URL_DECODE","URL_ENCODE","VALUE","VARBINARY_FORMAT","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT_BINARY","VARCHAR_FORMAT","VERIFY_GROUP_FOR_USER","WEEK_ISO","WEEK","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XOR","XSLTRANSFORM","YEAR","ZONED","BASE_TABLE","HTTP_DELETE_BLOB_VERBOSE","HTTP_DELETE_VERBOSE","HTTP_GET_BLOB_VERBOSE","HTTP_GET_VERBOSE","HTTP_PATCH_BLOB_VERBOSE","HTTP_PATCH_VERBOSE","HTTP_POST_BLOB_VERBOSE","HTTP_POST_VERBOSE","HTTP_PUT_BLOB_VERBOSE","HTTP_PUT_VERBOSE","JSON_TABLE","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE","UNPACK","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","RATIO_TO_REPORT","ROW_NUMBER","CAST"],GO=["ABSENT","ACCORDING","ACCTNG","ACTION","ACTIVATE","ADD","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","APPEND","APPLNAME","ARRAY","ARRAY_AGG","ARRAY_TRIM","AS","ASC","ASENSITIVE","ASSOCIATE","ATOMIC","ATTACH","ATTRIBUTES","AUTHORIZATION","AUTONOMOUS","BEFORE","BEGIN","BETWEEN","BIND","BSON","BUFFERPOOL","BY","CACHE","CALL","CALLED","CARDINALITY","CASE","CAST","CHECK","CL","CLOSE","CLUSTER","COLLECT","COLLECTION","COLUMN","COMMENT","COMMIT","COMPACT","COMPARISONS","COMPRESS","CONCAT","CONCURRENT","CONDITION","CONNECT","CONNECT_BY_ROOT","CONNECTION","CONSTANT","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","COPY","COUNT","COUNT_BIG","CREATE","CREATEIN","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEACTIVATE","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFER","DEFINE","DEFINITION","DELETE","DELETING","DENSE_RANK","DENSERANK","DESC","DESCRIBE","DESCRIPTOR","DETACH","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ENFORCED","ERROR","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTEND","EXTERNAL","EXTRACT","FALSE","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST_VALUE","FOR","FOREIGN","FORMAT","FREE","FREEPAGE","FROM","FULL","FUNCTION","GBPCACHE","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HANDLER","HASH","HASH_ROW","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IGNORE","IMMEDIATE","IMPLICITLY","IN","INCLUDE","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDEXBP","INDICATOR","INF","INFINITY","INHERIT","INLINE","INNER","INOUT","INSENSITIVE","INSERT","INSERTING","INTEGRITY","INTERPRET","INTERSECT","INTO","IS","ISNULL","ISOLATION","ITERATE","JAVA","JOIN","JSON","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_TABLE","JSON_VALUE","KEEP","KEY","KEYS","LABEL","LAG","LANGUAGE","LAST_VALUE","LATERAL","LEAD","LEAVE","LEFT","LEVEL2","LIKE","LIMIT","LINKTYPE","LISTAGG","LOCAL","LOCALDATE","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCATOR","LOCK","LOCKSIZE","LOG","LOGGED","LOOP","MAINTAINED","MASK","MATCHED","MATERIALIZED","MAXVALUE","MERGE","MICROSECOND","MICROSECONDS","MINPCTUSED","MINUTE","MINUTES","MINVALUE","MIRROR","MIXED","MODE","MODIFIES","MONTH","MONTHS","NAMESPACE","NAN","NATIONAL","NCHAR","NCLOB","NESTED","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT","NOTNULL","NTH_VALUE","NTILE","NULL","NULLS","NVARCHAR","OBID","OBJECT","OF","OFF","OFFSET","OLD","OLD_TABLE","OMIT","ON","ONLY","OPEN","OPTIMIZE","OPTION","OR","ORDER","ORDINALITY","ORGANIZE","OUT","OUTER","OVER","OVERLAY","OVERRIDING","PACKAGE","PADDED","PAGE","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PATH","PCTFREE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PERIOD","PERMISSION","PIECESIZE","PIPE","PLAN","POSITION","PREPARE","PREVVAL","PRIMARY","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PROGRAMID","QUERY","RANGE","RANK","RATIO_TO_REPORT","RCDFMT","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","REGEXP_LIKE","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNING","RETURNS","REVOKE","RID","RIGHT","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_NUMBER","ROWNUMBER","ROWS","RRN","RUN","SAVEPOINT","SBCS","SCALAR","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURED","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SKIP","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","SQLIND_DEFAULT","SQLIND_UNASSIGNED","STACKED","START","STARTING","STATEMENT","STATIC","STOGROUP","SUBSTRING","SUMMARY","SYNONYM","SYSTEM_TIME","SYSTEM_USER","TABLE","TABLESPACE","TABLESPACES","TAG","THEN","THREADSAFE","TO","TRANSACTION","TRANSFER","TRIGGER","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRY_CAST","TYPE","UNDO","UNION","UNIQUE","UNIT","UNKNOWN","UNNEST","UNTIL","UPDATE","UPDATING","URI","USAGE","USE","USER","USERID","USING","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VERSIONING","VIEW","VOLATILE","WAIT","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHIN","WITHOUT","WRAPPED","WRAPPER","WRITE","WRKSTNNAME","XMLAGG","XMLATTRIBUTES","XMLCAST","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLGROUP","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTABLE","XMLTEXT","XMLVALIDATE","XSLTRANSFORM","XSROBJECT","YEAR","YEARS","YES","ZONE"],yO=["ARRAY","BIGINT","BINARY","BIT","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATA","DATALINK","DATE","DBCLOB","DECFLOAT","DECIMAL","DEC","DOUBLE","DOUBLE PRECISION","FLOAT","GRAPHIC","INT","INTEGER","LONG","NUMERIC","REAL","ROWID","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC","XML"],gO=c(["SELECT [ALL | DISTINCT]"]),BO=c(["WITH [RECURSIVE]","INTO","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","FOR READ ONLY","OPTIMIZE FOR","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","DELETE","INSERT","FOR SYSTEM NAME"]),nr=c(["CREATE [OR REPLACE] TABLE"]),OT=c(["CREATE [OR REPLACE] [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","WITH {NC | RR | RS | CS | UR}","DELETE FROM","DROP TABLE","ALTER TABLE","ADD [COLUMN]","ALTER [COLUMN]","DROP [COLUMN]","SET DATA TYPE","SET {GENERATED ALWAYS | GENERATED BY DEFAULT}","SET NOT NULL","SET {NOT HIDDEN | IMPLICITLY HIDDEN}","SET FIELDPROC","DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","SET CURRENT_SCHEMA","ALLOCATE CURSOR","ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL","ALTER [SPECIFIC] {FUNCTION | PROCEDURE}","ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON [TABLE FUNCTION] RETURN COLUMN","COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]","COMMIT [WORK] [HOLD]","CONNECT [TO | RESET] USER","CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}","CREATE [ENCODED VECTOR] INDEX","CREATE UNIQUE [WHERE NOT NULL] INDEX","CREATE SCHEMA","CREATE TYPE","DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE [OUTPUT]","DESCRIBE {PROCEDURE | ROUTINE}","DESCRIBE TABLE","DISCONNECT ALL [SQL]","DISCONNECT [CURRENT]","DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]","DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]","END DECLARE SECTION","EXECUTE [IMMEDIATE]","FREE LOCATOR","GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","GET [CURRENT | STACKED] DIAGNOSTICS","GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","HOLD LOCATOR","INCLUDE","LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","LOCK TABLE","OPEN","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX] TO","REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","ROLLBACK [WORK] [HOLD | TO SAVEPOINT]","SAVEPOINT","SET CONNECTION","SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}","SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","SET ENCRYPTION PASSWORD","SET OPTION","SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}","SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]","SET SESSION AUTHORIZATION","SET SESSION_USER","SET TRANSACTION","SIGNAL SQLSTATE [VALUE]","TAG","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}"]),HO=c(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),bO=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT | RIGHT] EXCEPTION JOIN","{INNER | CROSS} JOIN"]),FO=c(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),YO=c([]),wO={name:"db2i",tokenizerOptions:{reservedSelect:gO,reservedClauses:[...BO,...nr,...OT],reservedSetOperations:HO,reservedJoins:bO,reservedKeywordPhrases:FO,reservedDataTypePhrases:YO,reservedKeywords:GO,reservedDataTypes:yO,reservedFunctionNames:mO,nestedBlockComments:!0,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","¬=","¬>","¬<","!>","!<","||","=>"]},formatOptions:{onelineClauses:[...nr,...OT],tabularOnelineClauses:OT}},VO=["ABS","ACOS","ADD","ADD_PARQUET_KEY","AGE","AGGREGATE","ALIAS","ALL_PROFILING_OUTPUT","ANY_VALUE","APPLY","APPROX_COUNT_DISTINCT","APPROX_QUANTILE","ARBITRARY","ARGMAX","ARGMIN","ARG_MAX","ARG_MAX_NULL","ARG_MIN","ARG_MIN_NULL","ARRAY_AGG","ARRAY_AGGR","ARRAY_AGGREGATE","ARRAY_APPEND","ARRAY_APPLY","ARRAY_CAT","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COSINE_SIMILARITY","ARRAY_CROSS_PRODUCT","ARRAY_DISTANCE","ARRAY_DISTINCT","ARRAY_DOT_PRODUCT","ARRAY_EXTRACT","ARRAY_FILTER","ARRAY_GRADE_UP","ARRAY_HAS","ARRAY_HAS_ALL","ARRAY_HAS_ANY","ARRAY_INDEXOF","ARRAY_INNER_PRODUCT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_POP_BACK","ARRAY_POP_FRONT","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUSH_BACK","ARRAY_PUSH_FRONT","ARRAY_REDUCE","ARRAY_RESIZE","ARRAY_REVERSE","ARRAY_REVERSE_SORT","ARRAY_SELECT","ARRAY_SLICE","ARRAY_SORT","ARRAY_TO_JSON","ARRAY_TO_STRING","ARRAY_TRANSFORM","ARRAY_UNIQUE","ARRAY_VALUE","ARRAY_WHERE","ARRAY_ZIP","ARROW_SCAN","ARROW_SCAN_DUMB","ASCII","ASIN","ATAN","ATAN2","AVG","BASE64","BIN","BITSTRING","BITSTRING_AGG","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_POSITION","BIT_XOR","BOOL_AND","BOOL_OR","CARDINALITY","CBRT","CEIL","CEILING","CENTURY","CHECKPOINT","CHR","COLLATIONS","COL_DESCRIPTION","COMBINE","CONCAT","CONCAT_WS","CONSTANT_OR_NULL","CONTAINS","COPY_DATABASE","CORR","COS","COT","COUNT","COUNT_IF","COUNT_STAR","COVAR_POP","COVAR_SAMP","CREATE_SORT_KEY","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_DATE","CURRENT_LOCALTIME","CURRENT_LOCALTIMESTAMP","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SETTING","CURRENT_USER","CURRVAL","DAMERAU_LEVENSHTEIN","DATABASE_LIST","DATABASE_SIZE","DATEDIFF","DATEPART","DATESUB","DATETRUNC","DATE_ADD","DATE_DIFF","DATE_PART","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECADE","DECODE","DEGREES","DISABLE_CHECKPOINT_ON_SHUTDOWN","DISABLE_OBJECT_CACHE","DISABLE_OPTIMIZER","DISABLE_PRINT_PROGRESS_BAR","DISABLE_PROFILE","DISABLE_PROFILING","DISABLE_PROGRESS_BAR","DISABLE_VERIFICATION","DISABLE_VERIFY_EXTERNAL","DISABLE_VERIFY_FETCH_ROW","DISABLE_VERIFY_PARALLELISM","DISABLE_VERIFY_SERIALIZER","DIVIDE","DUCKDB_COLUMNS","DUCKDB_CONSTRAINTS","DUCKDB_DATABASES","DUCKDB_DEPENDENCIES","DUCKDB_EXTENSIONS","DUCKDB_FUNCTIONS","DUCKDB_INDEXES","DUCKDB_KEYWORDS","DUCKDB_MEMORY","DUCKDB_OPTIMIZERS","DUCKDB_SCHEMAS","DUCKDB_SECRETS","DUCKDB_SEQUENCES","DUCKDB_SETTINGS","DUCKDB_TABLES","DUCKDB_TEMPORARY_FILES","DUCKDB_TYPES","DUCKDB_VIEWS","EDIT","EDITDIST3","ELEMENT_AT","ENABLE_CHECKPOINT_ON_SHUTDOWN","ENABLE_OBJECT_CACHE","ENABLE_OPTIMIZER","ENABLE_PRINT_PROGRESS_BAR","ENABLE_PROFILE","ENABLE_PROFILING","ENABLE_PROGRESS_BAR","ENABLE_VERIFICATION","ENCODE","ENDS_WITH","ENTROPY","ENUM_CODE","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","ENUM_RANGE_BOUNDARY","EPOCH","EPOCH_MS","EPOCH_NS","EPOCH_US","ERA","ERROR","EVEN","EXP","FACTORIAL","FAVG","FDIV","FILTER","FINALIZE","FIRST","FLATTEN","FLOOR","FMOD","FORCE_CHECKPOINT","FORMAT","FORMATREADABLEDECIMALSIZE","FORMATREADABLESIZE","FORMAT_BYTES","FORMAT_PG_TYPE","FORMAT_TYPE","FROM_BASE64","FROM_BINARY","FROM_HEX","FROM_JSON","FROM_JSON_STRICT","FSUM","FUNCTIONS","GAMMA","GCD","GENERATE_SERIES","GENERATE_SUBSCRIPTS","GEN_RANDOM_UUID","GEOMEAN","GEOMETRIC_MEAN","GETENV","GET_BIT","GET_BLOCK_SIZE","GET_CURRENT_TIME","GET_CURRENT_TIMESTAMP","GLOB","GRADE_UP","GREATEST","GREATEST_COMMON_DIVISOR","GROUP_CONCAT","HAMMING","HASH","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HEX","HISTOGRAM","HOUR","ICU_CALENDAR_NAMES","ICU_SORT_KEY","ILIKE_ESCAPE","IMPORT_DATABASE","INDEX_SCAN","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","INSTR","IN_SEARCH_PATH","ISFINITE","ISINF","ISNAN","ISODOW","ISOYEAR","JACCARD","JARO_SIMILARITY","JARO_WINKLER_SIMILARITY","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_CONTAINS","JSON_DESERIALIZE_SQL","JSON_EXECUTE_SERIALIZED_SQL","JSON_EXTRACT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_EXTRACT_STRING","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_GROUP_STRUCTURE","JSON_KEYS","JSON_MERGE_PATCH","JSON_OBJECT","JSON_QUOTE","JSON_SERIALIZE_PLAN","JSON_SERIALIZE_SQL","JSON_STRUCTURE","JSON_TRANSFORM","JSON_TRANSFORM_STRICT","JSON_TYPE","JSON_VALID","JULIAN","KAHAN_SUM","KURTOSIS","KURTOSIS_POP","LAST","LAST_DAY","LCASE","LCM","LEAST","LEAST_COMMON_MULTIPLE","LEFT","LEFT_GRAPHEME","LEN","LENGTH","LENGTH_GRAPHEME","LEVENSHTEIN","LGAMMA","LIKE_ESCAPE","LIST","LISTAGG","LIST_AGGR","LIST_AGGREGATE","LIST_ANY_VALUE","LIST_APPEND","LIST_APPLY","LIST_APPROX_COUNT_DISTINCT","LIST_AVG","LIST_BIT_AND","LIST_BIT_OR","LIST_BIT_XOR","LIST_BOOL_AND","LIST_BOOL_OR","LIST_CAT","LIST_CONCAT","LIST_CONTAINS","LIST_COSINE_SIMILARITY","LIST_COUNT","LIST_DISTANCE","LIST_DISTINCT","LIST_DOT_PRODUCT","LIST_ELEMENT","LIST_ENTROPY","LIST_EXTRACT","LIST_FILTER","LIST_FIRST","LIST_GRADE_UP","LIST_HAS","LIST_HAS_ALL","LIST_HAS_ANY","LIST_HISTOGRAM","LIST_INDEXOF","LIST_INNER_PRODUCT","LIST_INTERSECT","LIST_KURTOSIS","LIST_KURTOSIS_POP","LIST_LAST","LIST_MAD","LIST_MAX","LIST_MEDIAN","LIST_MIN","LIST_MODE","LIST_PACK","LIST_POSITION","LIST_PREPEND","LIST_PRODUCT","LIST_REDUCE","LIST_RESIZE","LIST_REVERSE","LIST_REVERSE_SORT","LIST_SELECT","LIST_SEM","LIST_SKEWNESS","LIST_SLICE","LIST_SORT","LIST_STDDEV_POP","LIST_STDDEV_SAMP","LIST_STRING_AGG","LIST_SUM","LIST_TRANSFORM","LIST_UNIQUE","LIST_VALUE","LIST_VAR_POP","LIST_VAR_SAMP","LIST_WHERE","LIST_ZIP","LN","LOG","LOG10","LOG2","LOWER","LPAD","LSMODE","LTRIM","MAD","MAKE_DATE","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","MAP","MAP_CONCAT","MAP_ENTRIES","MAP_EXTRACT","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","MAX","MAX_BY","MD5","MD5_NUMBER","MD5_NUMBER_LOWER","MD5_NUMBER_UPPER","MEAN","MEDIAN","METADATA_INFO","MICROSECOND","MILLENNIUM","MILLISECOND","MIN","MINUTE","MIN_BY","MISMATCHES","MOD","MODE","MONTH","MONTHNAME","MULTIPLY","NEXTAFTER","NEXTVAL","NFC_NORMALIZE","NOT_ILIKE_ESCAPE","NOT_LIKE_ESCAPE","NOW","NULLIF","OBJ_DESCRIPTION","OCTET_LENGTH","ORD","PARQUET_FILE_METADATA","PARQUET_KV_METADATA","PARQUET_METADATA","PARQUET_SCAN","PARQUET_SCHEMA","PARSE_DIRNAME","PARSE_DIRPATH","PARSE_FILENAME","PARSE_PATH","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONVERSION_IS_VISIBLE","PG_FUNCTION_IS_VISIBLE","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IS_OTHER_TEMP_SCHEMA","PG_MY_TEMP_SCHEMA","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_POSTMASTER_START_TIME","PG_SIZE_PRETTY","PG_TABLE_IS_VISIBLE","PG_TIMEZONE_NAMES","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PI","PLATFORM","POSITION","POW","POWER","PRAGMA_COLLATIONS","PRAGMA_DATABASE_SIZE","PRAGMA_METADATA_INFO","PRAGMA_PLATFORM","PRAGMA_SHOW","PRAGMA_STORAGE_INFO","PRAGMA_TABLE_INFO","PRAGMA_USER_AGENT","PRAGMA_VERSION","PREFIX","PRINTF","PRODUCT","QUANTILE","QUANTILE_CONT","QUANTILE_DISC","QUARTER","RADIANS","RANDOM","RANGE","READFILE","READ_BLOB","READ_CSV","READ_CSV_AUTO","READ_JSON","READ_JSON_AUTO","READ_JSON_OBJECTS","READ_JSON_OBJECTS_AUTO","READ_NDJSON","READ_NDJSON_AUTO","READ_NDJSON_OBJECTS","READ_PARQUET","READ_TEXT","REDUCE","REGEXP_ESCAPE","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_FULL_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REPEAT","REPEAT_ROW","REPLACE","RESERVOIR_QUANTILE","REVERSE","RIGHT","RIGHT_GRAPHEME","ROUND","ROUNDBANKERS","ROUND_EVEN","ROW","ROW_TO_JSON","RPAD","RTRIM","SECOND","SEM","SEQ_SCAN","SESSION_USER","SETSEED","SET_BIT","SHA256","SHA3","SHELL_ADD_SCHEMA","SHELL_ESCAPE_CRNL","SHELL_IDQUOTE","SHELL_MODULE_SCHEMA","SHELL_PUTSNL","SHOBJ_DESCRIPTION","SHOW","SHOW_DATABASES","SHOW_TABLES","SHOW_TABLES_EXPANDED","SIGN","SIGNBIT","SIN","SKEWNESS","SNIFF_CSV","SPLIT","SPLIT_PART","SQL_AUTO_COMPLETE","SQRT","STARTS_WITH","STATS","STDDEV","STDDEV_POP","STDDEV_SAMP","STORAGE_INFO","STRFTIME","STRING_AGG","STRING_SPLIT","STRING_SPLIT_REGEX","STRING_TO_ARRAY","STRIP_ACCENTS","STRLEN","STRPOS","STRPTIME","STRUCT_EXTRACT","STRUCT_INSERT","STRUCT_PACK","STR_SPLIT","STR_SPLIT_REGEX","SUBSTR","SUBSTRING","SUBSTRING_GRAPHEME","SUBTRACT","SUFFIX","SUM","SUMKAHAN","SUMMARY","SUM_NO_OVERFLOW","TABLE_INFO","TAN","TEST_ALL_TYPES","TEST_VECTOR_TYPES","TIMEZONE","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIME_BUCKET","TODAY","TO_BASE","TO_BASE64","TO_BINARY","TO_CENTURIES","TO_DAYS","TO_DECADES","TO_HEX","TO_HOURS","TO_JSON","TO_MICROSECONDS","TO_MILLENNIA","TO_MILLISECONDS","TO_MINUTES","TO_MONTHS","TO_SECONDS","TO_TIMESTAMP","TO_WEEKS","TO_YEARS","TRANSACTION_TIMESTAMP","TRANSLATE","TRIM","TRUNC","TRY_STRPTIME","TXID_CURRENT","TYPEOF","UCASE","UNBIN","UNHEX","UNICODE","UNION_EXTRACT","UNION_TAG","UNION_VALUE","UNNEST","UNPIVOT_LIST","UPPER","USER","USER_AGENT","UUID","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_TYPE","VERIFY_EXTERNAL","VERIFY_FETCH_ROW","VERIFY_PARALLELISM","VERIFY_SERIALIZER","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","WHICH_SECRET","WRITEFILE","XOR","YEAR","YEARWEEK","CAST","COALESCE","RANK","ROW_NUMBER"],WO=["ALL","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ATTACH","ASYMMETRIC","BOTH","CASE","CAST","CHECK","COLLATE","COLUMN","CONSTRAINT","CREATE","DEFAULT","DEFERRABLE","DESC","DESCRIBE","DETACH","DISTINCT","DO","ELSE","END","EXCEPT","FALSE","FETCH","FOR","FOREIGN","FROM","GRANT","GROUP","HAVING","IN","INITIALLY","INTERSECT","INTO","IS","LATERAL","LEADING","LIMIT","NOT","NULL","OFFSET","ON","ONLY","OR","ORDER","PIVOT","PIVOT_LONGER","PIVOT_WIDER","PLACING","PRIMARY","REFERENCES","RETURNING","SELECT","SHOW","SOME","SUMMARIZE","SYMMETRIC","TABLE","THEN","TO","TRAILING","TRUE","UNION","UNIQUE","UNPIVOT","USING","VARIADIC","WHEN","WHERE","WINDOW","WITH"],vO=["ARRAY","BIGINT","BINARY","BIT","BITSTRING","BLOB","BOOL","BOOLEAN","BPCHAR","BYTEA","CHAR","DATE","DATETIME","DEC","DECIMAL","DOUBLE","ENUM","FLOAT","FLOAT4","FLOAT8","GUID","HUGEINT","INET","INT","INT1","INT128","INT16","INT2","INT32","INT4","INT64","INT8","INTEGER","INTEGRAL","INTERVAL","JSON","LIST","LOGICAL","LONG","MAP","NUMERIC","NVARCHAR","OID","REAL","ROW","SHORT","SIGNED","SMALLINT","STRING","STRUCT","TEXT","TIME","TIMESTAMP_MS","TIMESTAMP_NS","TIMESTAMP_S","TIMESTAMP_US","TIMESTAMP","TIMESTAMPTZ","TIMETZ","TINYINT","UBIGINT","UHUGEINT","UINT128","UINT16","UINT32","UINT64","UINT8","UINTEGER","UNION","USMALLINT","UTINYINT","UUID","VARBINARY","VARCHAR"],XO=c(["SELECT [ALL | DISTINCT]"]),KO=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL]","HAVING","WINDOW","PARTITION BY","ORDER BY [ALL]","LIMIT","OFFSET","USING SAMPLE","QUALIFY","INSERT [OR REPLACE] INTO","VALUES","DEFAULT VALUES","SET","RETURNING"]),ir=c(["CREATE [OR REPLACE] [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"]),oT=c(["UPDATE","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","TRUNCATE","ALTER TABLE","ADD [COLUMN] [IF NOT EXISTS]","ADD PRIMARY KEY","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","RENAME [COLUMN]","RENAME TO","SET [DATA] TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","CREATE [OR REPLACE] [TEMPORARY | TEMP] {MACRO | FUNCTION}","DROP MACRO [TABLE] [IF EXISTS]","DROP FUNCTION [IF EXISTS]","CREATE [UNIQUE] INDEX [IF NOT EXISTS]","DROP INDEX [IF EXISTS]","CREATE [OR REPLACE] SCHEMA [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","CREATE [OR REPLACE] [PERSISTENT | TEMPORARY] SECRET [IF NOT EXISTS]","DROP [PERSISTENT | TEMPORARY] SECRET [IF EXISTS]","CREATE [OR REPLACE] [TEMPORARY | TEMP] SEQUENCE","DROP SEQUENCE [IF EXISTS]","CREATE [OR REPLACE] [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","DROP VIEW [IF EXISTS]","ALTER VIEW","CREATE TYPE","DROP TYPE [IF EXISTS]","ANALYZE","ATTACH [DATABASE] [IF NOT EXISTS]","DETACH [DATABASE] [IF EXISTS]","CALL","[FORCE] CHECKPOINT","COMMENT ON [TABLE | COLUMN | VIEW | INDEX | SEQUENCE | TYPE | MACRO | MACRO TABLE]","COPY [FROM DATABASE]","DESCRIBE","EXPORT DATABASE","IMPORT DATABASE","INSTALL","LOAD","PIVOT","PIVOT_WIDER","UNPIVOT","EXPLAIN [ANALYZE]","SET {LOCAL | SESSION | GLOBAL}","RESET [LOCAL | SESSION | GLOBAL]","{SET | RESET} VARIABLE","SUMMARIZE","BEGIN TRANSACTION","ROLLBACK","COMMIT","ABORT","USE","VACUUM [ANALYZE]","PREPARE","EXECUTE","DEALLOCATE [PREPARE]"]),xO=c(["UNION [ALL | BY NAME]","EXCEPT [ALL]","INTERSECT [ALL]"]),$O=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{NATURAL | ASOF} [INNER] JOIN","{NATURAL | ASOF} {LEFT | RIGHT | FULL} [OUTER] JOIN","POSITIONAL JOIN","ANTI JOIN","SEMI JOIN"]),kO=c(["{ROWS | RANGE | GROUPS} BETWEEN","SIMILAR TO","IS [NOT] DISTINCT FROM"]),JO=c(["TIMESTAMP WITH TIME ZONE"]),QO={name:"duckdb",tokenizerOptions:{reservedSelect:XO,reservedClauses:[...KO,...ir,...oT],reservedSetOperations:xO,reservedJoins:$O,reservedKeywordPhrases:kO,reservedDataTypePhrases:JO,supportsXor:!0,reservedKeywords:WO,reservedDataTypes:vO,reservedFunctionNames:VO,nestedBlockComments:!0,extraParens:["[]","{}"],underscoresInNumbers:!0,stringTypes:["$$","''-qq",{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{rest:"$"},paramTypes:{positional:!0,numbered:["$"],quoted:["$"]},operators:["//","%","**","^","!","&","|","~","<<",">>","::","==","->","->>",":",":=","=>","~~","!~~","~~*","!~~*","~~~","~","!~","~*","!~*","^@","||",">>=","<<="]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...ir,...oT],tabularOnelineClauses:oT}},qO=["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET","ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY","BINARY","CAST","ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR","ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL","ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER","MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N","AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION","AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK","LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],jO=["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE","ALL","ALTER","AND","AS","AUTHORIZATION","BETWEEN","BOTH","BY","CASE","CAST","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DELETE","DESCRIBE","DISTINCT","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","TABLE","TABLESAMPLE","THEN","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","VIEWS","TIME","SYNC","TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"],ZO=["ARRAY","BIGINT","BINARY","BOOLEAN","CHAR","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MAP","NUMERIC","PRECISION","SMALLINT","STRUCT","TIMESTAMP","VARCHAR"],zO=c(["SELECT [ALL | DISTINCT]"]),eo=c(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),rr=c(["CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]"]),IT=c(["CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),to=c(["UNION [ALL | DISTINCT]"]),Eo=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),so=c(["{ROWS | RANGE} BETWEEN"]),To=c([]),no={name:"hive",tokenizerOptions:{reservedSelect:zO,reservedClauses:[...eo,...rr,...IT],reservedSetOperations:to,reservedJoins:Eo,reservedKeywordPhrases:so,reservedDataTypePhrases:To,reservedKeywords:jO,reservedDataTypes:ZO,reservedFunctionNames:qO,extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:[...rr,...IT],tabularOnelineClauses:IT}};function fs(t){return t.map((e,E)=>{const s=t[E+1]||Vt;if(rt.SET(e)&&s.text==="(")return Object.assign(Object.assign({},e),{type:M.RESERVED_FUNCTION_NAME});const T=t[E-1]||Vt;return rt.VALUES(e)&&T.text==="="?Object.assign(Object.assign({},e),{type:M.RESERVED_FUNCTION_NAME}):e})}const io=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO_DOMAIN_IDS","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERAL","GRANT","GROUP","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MASTER_HEARTBEAT_PERIOD","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OFFSET","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PAGE_CHECKSUM","PARSE_VCOL_EXPR","PARTITION","POSITION","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","READ_WRITE","RECURSIVE","REF_SYSTEM_ID","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","RETURNING","REVOKE","RIGHT","RLIKE","ROW_NUMBER","ROWS","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SLOW","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],ro=["BIGINT","BINARY","BIT","BLOB","CHAR BYTE","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],Ro=["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF"],Ao=c(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),_o=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET","RETURNING"]),Rr=c(["CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]"]),NT=c(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),ao=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),So=c(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),Oo=c(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),oo=c([]),Io={name:"mariadb",tokenizerOptions:{reservedSelect:Ao,reservedClauses:[..._o,...Rr,...NT],reservedSetOperations:ao,reservedJoins:So,reservedKeywordPhrases:Oo,reservedDataTypePhrases:oo,supportsXor:!0,reservedKeywords:io,reservedDataTypes:ro,reservedFunctionNames:Ro,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!","*.*"],postProcess:fs},formatOptions:{onelineClauses:[...Rr,...NT],tabularOnelineClauses:NT}},No=["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CUBE","CUME_DIST","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DENSE_RANK","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","EMPTY","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FIRST_VALUE","FOR","FORCE","FOREIGN","FROM","FULLTEXT","FUNCTION","GENERATED","GET","GRANT","GROUP","GROUPING","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","INTERSECT","INTERVAL","INTO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IS","ITERATE","JOIN","JSON_TABLE","KEY","KEYS","KILL","LAG","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOOP","LOW_PRIORITY","MASTER_BIND","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","OF","ON","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PERCENT_RANK","PRIMARY","PROCEDURE","PURGE","RANGE","RANK","READ","READS","READ_WRITE","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","REVOKE","RIGHT","RLIKE","ROW","ROWS","ROW_NUMBER","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STORED","STRAIGHT_JOIN","SYSTEM","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],lo=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],Lo=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],uo=c(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),Co=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),Ar=c(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),lT=c(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),co=c(["UNION [ALL | DISTINCT]"]),fo=c(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),ho=c(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),po=c([]),Do={name:"mysql",tokenizerOptions:{reservedSelect:uo,reservedClauses:[...Co,...Ar,...lT],reservedSetOperations:co,reservedJoins:fo,reservedKeywordPhrases:ho,reservedDataTypePhrases:po,supportsXor:!0,reservedKeywords:No,reservedDataTypes:lo,reservedFunctionNames:Lo,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:fs},formatOptions:{onelineClauses:[...Ar,...lT],tabularOnelineClauses:lT}},Po=["ADD","ALL","ALTER","ANALYZE","AND","ARRAY","AS","ASC","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DISTINCT","DISTINCTROW","DIV","DOUBLE","DROP","DUAL","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERATED","GRANT","GROUP","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","ILIKE","IN","INDEX","INFILE","INNER","INOUT","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOW_PRIORITY","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OF","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PRIMARY","PROCEDURE","RANGE","READ","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","REVOKE","RIGHT","RLIKE","ROW","ROWS","SECOND_MICROSECOND","SELECT","SET","SHOW","SPATIAL","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_EXTENDED","STORED","STRAIGHT_JOIN","TABLE","TABLESAMPLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","TiDB_CURRENT_TSO","UNION","UNIQUE","UNLOCK","UNSIGNED","UNTIL","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],Mo=["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],Uo=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","BITAND","BITNEG","BITOR","BITXOR","CASE","CAST","CEIL","CEILING","CHAR_FUNC","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_RESOURCE_GROUP","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT_FUNC","DEGREES","DENSE_RANK","DES_DECRYPT","DES_ENCRYPT","DIV","ELT","ENCODE","ENCRYPT","EQ","EXP","EXPORT_SET","EXTRACT","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_NANO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GE","GET_FORMAT","GET_LOCK","GETPARAM","GREATEST","GROUP_CONCAT","GROUPING","GT","HEX","HOUR","IF","IFNULL","ILIKE","INET6_ATON","INET6_NTOA","INET_ATON","INET_NTOA","INSERT_FUNC","INSTR","INTDIV","INTERVAL","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS_USED_LOCK","IS_UUID","ISFALSE","ISNULL","ISTRUE","JSON_ARRAY","JSON_ARRAYAGG","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MEMBEROF","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LASTVAL","LCASE","LE","LEAD","LEAST","LEFT","LEFTSHIFT","LENGTH","LIKE","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LT","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MAX","MD5","MICROSECOND","MID","MIN","MINUS","MINUTE","MOD","MONTH","MONTHNAME","MUL","NAME_CONST","NE","NEXTVAL","NOT","NOW","NTH_VALUE","NTILE","NULLEQ","OCT","OCTET_LENGTH","OLD_PASSWORD","ORD","PASSWORD_FUNC","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","PLUS","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RIGHTSHIFT","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SETVAL","SETVAR","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SM3","SPACE","SQRT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIDB_BOUNDED_STALENESS","TIDB_CURRENT_TSO","TIDB_DECODE_BINARY_PLAN","TIDB_DECODE_KEY","TIDB_DECODE_PLAN","TIDB_DECODE_SQL_DIGESTS","TIDB_ENCODE_SQL_DIGEST","TIDB_IS_DDL_OWNER","TIDB_PARSE_TSO","TIDB_PARSE_TSO_LOGICAL","TIDB_ROW_CHECKSUM","TIDB_SHARD","TIDB_VERSION","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRANSLATE","TRIM","TRUNCATE","UCASE","UNARYMINUS","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VAR_POP","VAR_SAMP","VARIANCE","VERSION","VITESS_HASH","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],mo=c(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),Go=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),_r=c(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),LT=c(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER INSTANCE","ALTER RESOURCE GROUP","ALTER SEQUENCE","ALTER USER","ALTER VIEW","ANALYZE TABLE","CHECK TABLE","CHECKSUM TABLE","COMMIT","CREATE DATABASE","CREATE INDEX","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SEQUENCE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP INDEX","DROP RESOURCE GROUP","DROP ROLE","DROP TABLESPACE","DROP USER","DROP VIEW","EXPLAIN","FLUSH","GRANT","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOCK INSTANCE FOR BACKUP","LOCK TABLES","OPTIMIZE TABLE","PREPARE","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE"]),yo=c(["UNION [ALL | DISTINCT]"]),go=c(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),Bo=c(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),Ho=c([]),bo={name:"tidb",tokenizerOptions:{reservedSelect:mo,reservedClauses:[...Go,..._r,...LT],reservedSetOperations:yo,reservedJoins:go,reservedKeywordPhrases:Bo,reservedDataTypePhrases:Ho,supportsXor:!0,reservedKeywords:Po,reservedDataTypes:Mo,reservedFunctionNames:Uo,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:fs},formatOptions:{onelineClauses:[..._r,...LT],tabularOnelineClauses:LT}},Fo=["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"],Yo=["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","ISOLATION","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"],wo=[],Vo=c(["SELECT [ALL | DISTINCT]"]),Wo=c(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),ar=c(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),vo=c(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),Xo=c(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),Ko=c(["{ROWS | RANGE | GROUPS} BETWEEN"]),xo=c([]),$o={name:"n1ql",tokenizerOptions:{reservedSelect:Vo,reservedClauses:[...Wo,...ar],reservedSetOperations:vo,reservedJoins:Xo,reservedKeywordPhrases:Ko,reservedDataTypePhrases:xo,supportsXor:!0,reservedKeywords:Yo,reservedDataTypes:wo,reservedFunctionNames:Fo,stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:ar}},ko=["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DAY","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"],Jo=["ARRAY","BFILE_BASE","BINARY","BLOB_BASE","CHAR VARYING","CHAR_BASE","CHAR","CHARACTER VARYING","CHARACTER","CLOB_BASE","DATE_BASE","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTERVAL DAY","INTERVAL YEAR","LONG","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR VARYING","NCHAR","NCHAR","NUMBER_BASE","NUMBER","NUMBERIC","NVARCHAR","PRECISION","RAW","TIMESTAMP","UROWID","VARCHAR","VARCHAR2"],Qo=["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET","CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR","ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET","GREATEST","LEAST","ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR","BFILENAME","EMPTY_BLOB,","EMPTY_CLOB","CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET","SYS_CONNECT_BY_PATH","CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET","APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM","DECODE","DUMP","ORA_HASH","VSIZE","COALESCE","LNNVL","NULLIF","NVL","NVL2","SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV","AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER","DEREF","MAKE_REF","REF","REFTOHEX","VALUE","CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],qo=c(["SELECT [ALL | DISTINCT | UNIQUE]"]),jo=c(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","RETURNING"]),Sr=c(["CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE"]),uT=c(["CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),Zo=c(["UNION [ALL]","MINUS","INTERSECT"]),zo=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),eI=c(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),tI=c([]),EI={name:"plsql",tokenizerOptions:{reservedSelect:qo,reservedClauses:[...jo,...Sr,...uT],reservedSetOperations:Zo,reservedJoins:zo,reservedKeywordPhrases:eI,reservedDataTypePhrases:tI,supportsXor:!0,reservedKeywords:ko,reservedDataTypes:Jo,reservedFunctionNames:Qo,stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:sI},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:[...Sr,...uT],tabularOnelineClauses:uT}};function sI(t){let e=Vt;return t.map(E=>rt.SET(E)&&rt.BY(e)?Object.assign(Object.assign({},E),{type:M.RESERVED_KEYWORD}):(SA(E.type)&&(e=E),E))}const TI=["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET","ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER","BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM","BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP","CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH","ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TRUNC","ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY","GEN_RANDOM_UUID","CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS","ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP","CURRVAL","LASTVAL","NEXTVAL","SETVAL","COALESCE","GREATEST","LEAST","NULLIF","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST","ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF","ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","GENERATE_SERIES","GENERATE_SUBSCRIPTS","ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION","BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG","SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN","PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS","PG_MCV_LIST_ITEMS","CAST"],nI=["ALL","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ASYMMETRIC","AUTHORIZATION","BETWEEN","BINARY","BOTH","CASE","CAST","CHECK","COLLATE","COLLATION","COLUMN","CONCURRENTLY","CONSTRAINT","CREATE","CROSS","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DAY","DEFAULT","DEFERRABLE","DESC","DISTINCT","DO","ELSE","END","EXCEPT","EXISTS","FALSE","FETCH","FILTER","FOR","FOREIGN","FREEZE","FROM","FULL","GRANT","GROUP","HAVING","HOUR","ILIKE","IN","INITIALLY","INNER","INOUT","INTERSECT","INTO","IS","ISNULL","JOIN","LATERAL","LEADING","LEFT","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","MINUTE","MONTH","NATURAL","NOT","NOTNULL","NULL","NULLIF","OFFSET","ON","ONLY","OR","ORDER","OUT","OUTER","OVER","OVERLAPS","PLACING","PRIMARY","REFERENCES","RETURNING","RIGHT","ROW","SECOND","SELECT","SESSION_USER","SIMILAR","SOME","SYMMETRIC","TABLE","TABLESAMPLE","THEN","TO","TRAILING","TRUE","UNION","UNIQUE","USER","USING","VALUES","VARIADIC","VERBOSE","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","YEAR"],iI=["ARRAY","BIGINT","BIT","BIT VARYING","BOOL","BOOLEAN","CHAR","CHARACTER","CHARACTER VARYING","DECIMAL","DEC","DOUBLE","ENUM","FLOAT","INT","INTEGER","INTERVAL","NCHAR","NUMERIC","JSON","JSONB","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TIMESTAMPTZ","UUID","VARCHAR","XML","ZONE"],rI=c(["SELECT [ALL | DISTINCT]"]),RI=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]","INSERT INTO","VALUES","DEFAULT VALUES","SET","RETURNING"]),Or=c(["CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]"]),CT=c(["CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","SET DATA TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE [OR REPLACE] AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE [DEFAULT] CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE [OR REPLACE] FUNCTION","CREATE GROUP","CREATE [UNIQUE] INDEX","CREATE [OR REPLACE] [TRUSTED] [PROCEDURAL] LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE [OR REPLACE] PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE [OR REPLACE] RULE","CREATE SCHEMA [AUTHORIZATION]","CREATE [TEMPORARY | TEMP | UNLOGGED] SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE [OR REPLACE] TRANSFORM","CREATE [OR REPLACE] [CONSTRAINT] TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP IDENTITY","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW [IF EXISTS]","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","OVERRIDING SYSTEM VALUE","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET [ALL|ROLE|SESSION AUTHORIZATION]","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),AI=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),_I=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),aI=c(["PRIMARY KEY","GENERATED {ALWAYS | BY DEFAULT} AS IDENTITY","ON {UPDATE | DELETE} [NO ACTION | RESTRICT | CASCADE | SET NULL | SET DEFAULT]","DO {NOTHING | UPDATE}","AS MATERIALIZED","{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM","NULLS {FIRST | LAST}","WITH ORDINALITY"]),SI=c(["[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE"]),OI={name:"postgresql",tokenizerOptions:{reservedSelect:rI,reservedClauses:[...RI,...Or,...CT],reservedSetOperations:AI,reservedJoins:_I,reservedKeywordPhrases:aI,reservedDataTypePhrases:SI,reservedKeywords:nI,reservedDataTypes:iI,reservedFunctionNames:TI,nestedBlockComments:!0,extraParens:["[]"],underscoresInNumbers:!0,stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","^@","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::",":","<#>","<=>","<+>","<~>","<%>"],operatorKeyword:!0},formatOptions:{alwaysDenseOperators:["::",":"],onelineClauses:[...Or,...CT],tabularOnelineClauses:CT}},oI=["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","array_concat","array_flatten","get_array_length","split_to_array","subarray","BIT_AND","BIT_OR","BOOL_AND","BOOL_OR","COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF","ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC","AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox","CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2","HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE","IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE","ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC","EXPLAIN_MODEL","ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER","decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof","AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT","CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG","CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],II=["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT","ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS","COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE","FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC","ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN","BZIP2","GZIP","LZOP","ZSTD","MANIFEST","READRATIO","REGION","SSH","RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K","CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],NI=["ARRAY","BIGINT","BPCHAR","CHAR","CHARACTER VARYING","CHARACTER","DECIMAL","INT","INT2","INT4","INT8","INTEGER","NCHAR","NUMERIC","NVARCHAR","SMALLINT","TEXT","VARBYTE","VARCHAR"],lI=c(["SELECT [ALL | DISTINCT]"]),LI=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET"]),or=c(["CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]"]),cT=c(["CREATE [OR REPLACE | MATERIALIZED] VIEW","UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),uI=c(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),CI=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),cI=c(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),fI=c([]),hI={name:"redshift",tokenizerOptions:{reservedSelect:lI,reservedClauses:[...LI,...or,...cT],reservedSetOperations:uI,reservedJoins:CI,reservedKeywordPhrases:cI,reservedDataTypePhrases:fI,reservedKeywords:II,reservedDataTypes:NI,reservedFunctionNames:oI,extraParens:["[]"],stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...or,...cT],tabularOnelineClauses:cT}},pI=["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"],DI=["ARRAY","BIGINT","BINARY","BOOLEAN","BYTE","CHAR","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","LONG","MAP","NUMERIC","REAL","SHORT","SMALLINT","STRING","STRUCT","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TINYINT","VARCHAR"],PI=["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY","ELEMENT_AT","ELEMENT_AT","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP","ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR","FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON","ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIN","BIT_COUNT","BIT_GET","BIT_LENGTH","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DEGREES","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH","CAST","COALESCE","NULLIF"],dI=c(["SELECT [ALL | DISTINCT]"]),MI=c(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),Ir=c(["CREATE [EXTERNAL] TABLE [IF NOT EXISTS]"]),fT=c(["CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),UI=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),mI=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),GI=c(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),yI=c([]),gI={name:"spark",tokenizerOptions:{reservedSelect:dI,reservedClauses:[...MI,...Ir,...fT],reservedSetOperations:UI,reservedJoins:mI,reservedKeywordPhrases:GI,reservedDataTypePhrases:yI,supportsXor:!0,reservedKeywords:pI,reservedDataTypes:DI,reservedFunctionNames:PI,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],identChars:{allowFirstCharNumber:!0},variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:BI},formatOptions:{onelineClauses:[...Ir,...fT],tabularOnelineClauses:fT}};function BI(t){return t.map((e,E)=>{const s=t[E-1]||Vt,T=t[E+1]||Vt;return rt.WINDOW(e)&&T.type===M.OPEN_PAREN?Object.assign(Object.assign({},e),{type:M.RESERVED_FUNCTION_NAME}):e.text==="ITEMS"&&e.type===M.RESERVED_KEYWORD&&!(s.text==="COLLECTION"&&T.text==="TERMINATED")?Object.assign(Object.assign({},e),{type:M.IDENTIFIER,text:e.raw}):e})}const HI=["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB","AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL","DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME","row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value","ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC","JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE","CAST"],bI=["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ARE","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"],FI=["ANY","ARRAY","BLOB","CHARACTER","DECIMAL","INT","INTEGER","NATIVE CHARACTER","NCHAR","NUMERIC","NVARCHAR","REAL","TEXT","VARCHAR","VARYING CHARACTER"],YI=c(["SELECT [ALL | DISTINCT]"]),wI=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET","RETURNING"]),Nr=c(["CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"]),hT=c(["CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),VI=c(["UNION [ALL]","EXCEPT","INTERSECT"]),WI=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),vI=c(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","DO UPDATE"]),XI=c([]),KI={name:"sqlite",tokenizerOptions:{reservedSelect:YI,reservedClauses:[...wI,...Nr,...hT],reservedSetOperations:VI,reservedJoins:WI,reservedKeywordPhrases:vI,reservedDataTypePhrases:XI,reservedKeywords:bI,reservedDataTypes:FI,reservedFunctionNames:HI,stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:[...Nr,...hT],tabularOnelineClauses:hT}},xI=["GROUPING","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER","POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET","SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE","CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP","COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC","CAST","COALESCE","NULLIF","ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],$I=["ALL","ALLOCATE","ALTER","ANY","ARE","AS","ASC","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHECK","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DEALLOCATE","DAY","DECLARE","DEFAULT","DELETE","DEREF","DESC","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","NATURAL","NEW","NO","NONE","NOT","NULL","NULLIF","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"],kI=["ARRAY","BIGINT","BINARY LARGE OBJECT","BINARY VARYING","BINARY","BLOB","BOOLEAN","CHAR LARGE OBJECT","CHAR VARYING","CHAR","CHARACTER LARGE OBJECT","CHARACTER VARYING","CHARACTER","CLOB","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MULTISET","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER LARGE OBJECT","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR LARGE OBJECT","NCHAR VARYING","NCHAR","NCLOB","NUMERIC","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],JI=c(["SELECT [ALL | DISTINCT]"]),QI=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET"]),lr=c(["CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE"]),pT=c(["CREATE [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),qI=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),jI=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),ZI=c(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),zI=c([]),eN={name:"sql",tokenizerOptions:{reservedSelect:JI,reservedClauses:[...QI,...lr,...pT],reservedSetOperations:qI,reservedJoins:jI,reservedKeywordPhrases:ZI,reservedDataTypePhrases:zI,reservedKeywords:$I,reservedDataTypes:kI,reservedFunctionNames:xI,stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:[...lr,...pT],tabularOnelineClauses:pT}},tN=["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH","CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"],EN=["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],sN=["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"],TN=c(["SELECT [ALL | DISTINCT]"]),nN=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),Lr=c(["CREATE TABLE [IF NOT EXISTS]"]),DT=c(["CREATE [OR REPLACE] [MATERIALIZED] VIEW","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),iN=c(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),rN=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),RN=c(["{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM"]),AN=c([]),_N={name:"trino",tokenizerOptions:{reservedSelect:TN,reservedClauses:[...nN,...Lr,...DT],reservedSetOperations:iN,reservedJoins:rN,reservedKeywordPhrases:RN,reservedDataTypePhrases:AN,reservedKeywords:EN,reservedDataTypes:sN,reservedFunctionNames:tN,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:[...Lr,...DT],tabularOnelineClauses:DT}},aN=["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST","@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER","$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","COALESCE","NULLIF"],SN=["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT","$ACTION"],ON=["BINARY","BIT","CHAR","CHAR","CHARACTER","DATE","DATETIME2","DATETIMEOFFSET","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","NATIONAL","NCHAR","NUMERIC","NVARCHAR","PRECISION","REAL","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],oN=c(["SELECT [ALL | DISTINCT]"]),IN=c(["WITH","INTO","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","FOR {BROWSE | XML | JSON}","OPTION","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] {PROC | PROCEDURE}"]),ur=c(["CREATE TABLE"]),PT=c(["CREATE [OR ALTER] [MATERIALIZED] VIEW","UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","CREATE [UNIQUE] [CLUSTERED] INDEX","CREATE DATABASE","ALTER DATABASE","DROP DATABASE [IF EXISTS]","ALTER {FUNCTION | PROCEDURE | PROC}","GO","USE","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),NN=c(["UNION [ALL]","EXCEPT","INTERSECT"]),lN=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),LN=c(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),uN=c([]),CN={name:"transactsql",tokenizerOptions:{reservedSelect:oN,reservedClauses:[...IN,...ur,...PT],reservedSetOperations:NN,reservedJoins:lN,reservedKeywordPhrases:LN,reservedDataTypePhrases:uN,reservedKeywords:SN,reservedDataTypes:ON,reservedFunctionNames:aN,nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]},"{}"],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::",":"],propertyAccessOperators:[".."]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...ur,...PT],tabularOnelineClauses:PT}},cN=["ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","_BINARY","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","EXTRA_JOIN","FALSE","FETCH","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREIGN","FROM","FULL","FULLTEXT","GRANT","GROUP","HAVING","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","_INTERNAL_DYNAMIC_TYPECAST","INTERSECT","INTERVAL","INTO","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MATCH","MAXVALUE","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NO_QUERY_REWRITE","NOT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NULL","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","RETURN","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SEMI_JOIN","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNBOUNDED","UNDO","UNION","UNIQUE","UNLOCK","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WRITE","XOR","YEAR_MONTH","ZEROFILL"],fN=["BIGINT","BINARY","BIT","BLOB","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","UNSIGNED","VARBINARY","VARCHAR","VARCHARACTER","YEAR"],hN=["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR"],pN=c(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),DN=c(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","ON DUPLICATE KEY UPDATE","SET","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),Cr=c(["CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]"]),dT=c(["CREATE VIEW","UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),PN=c(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),dN=c(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),MN=c(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),UN=c([]),mN={name:"singlestoredb",tokenizerOptions:{reservedSelect:pN,reservedClauses:[...DN,...Cr,...dT],reservedSetOperations:PN,reservedJoins:dN,reservedKeywordPhrases:MN,reservedDataTypePhrases:UN,reservedKeywords:cN,reservedDataTypes:fN,reservedFunctionNames:hN,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>","*.*"],postProcess:fs},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:[...Cr,...dT],tabularOnelineClauses:dT}},GN=["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FILTER","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GREATEST_IGNORE_NULLS","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IDENTIFIER","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER — Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"],yN=["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH","COMMENT"],gN=["NUMBER","DECIMAL","NUMERIC","INT","INTEGER","BIGINT","SMALLINT","TINYINT","BYTEINT","FLOAT","FLOAT4","FLOAT8","DOUBLE","DOUBLE PRECISION","REAL","VARCHAR","CHAR","CHARACTER","STRING","TEXT","BINARY","VARBINARY","BOOLEAN","DATE","DATETIME","TIME","TIMESTAMP","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TIMESTAMP_TZ","VARIANT","OBJECT","ARRAY","GEOGRAPHY","GEOMETRY"],BN=c(["SELECT [ALL | DISTINCT]"]),HN=c(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","QUALIFY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),cr=c(["CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]"]),MT=c(["CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","SET DATA TYPE","UNSET COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),bN=c(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),FN=c(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),YN=c(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),wN=c([]),VN={name:"snowflake",tokenizerOptions:{reservedSelect:BN,reservedClauses:[...HN,...cr,...MT],reservedSetOperations:bN,reservedJoins:FN,reservedKeywordPhrases:YN,reservedDataTypePhrases:wN,reservedKeywords:yN,reservedDataTypes:gN,reservedFunctionNames:GN,stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||","=>",":=","->"],propertyAccessOperators:[":"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...cr,...MT],tabularOnelineClauses:MT}},WN=Object.freeze(Object.defineProperty({__proto__:null,bigquery:IO,db2:UO,db2i:wO,duckdb:QO,hive:no,mariadb:Io,mysql:Do,n1ql:$o,plsql:EI,postgresql:OI,redshift:hI,singlestoredb:mN,snowflake:VN,spark:gI,sql:eN,sqlite:KI,tidb:bo,transactsql:CN,trino:_N},Symbol.toStringTag,{value:"Module"})),RE=t=>t[t.length-1],OA=t=>t.sort((e,E)=>E.length-e.length||e.localeCompare(E)),vE=t=>t.replace(/\s+/gu," "),UT=t=>/\n/.test(t),Le=t=>t.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),fr=/\s+/uy,at=t=>new RegExp(`(?:${t})`,"uy"),vN=t=>t.split("").map(e=>/ /gu.test(e)?"\\s+":`[${e.toUpperCase()}${e.toLowerCase()}]`).join(""),XN=t=>t+"(?:-"+t+")*",KN=({prefixes:t,requirePrefix:e})=>`(?:${t.map(vN).join("|")}${e?"":"|"})`,xN=t=>new RegExp(`(?:${t.map(Le).join("|")}).*?(?=\r
|\r|
|$)`,"uy"),hr=(t,e=[])=>{const E=t==="open"?0:1,s=["()",...e].map(T=>T[E]);return at(s.map(Le).join("|"))},pr=t=>at(`${OA(t).map(Le).join("|")}`),$N=({rest:t,dashes:e})=>t||e?`(?![${t||""}${e?"-":""}])`:"",Ue=(t,e={})=>{if(t.length===0)return/^\b$/u;const E=$N(e),s=OA(t).map(Le).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${s})${E}\\b`,"iuy")},mT=(t,e)=>{if(!t.length)return;const E=t.map(Le).join("|");return at(`(?:${E})(?:${e})`)},kN=()=>{const t={"<":">","[":"]","(":")","{":"}"},e="{left}(?:(?!{right}').)*?{right}",E=Object.entries(t).map(([i,r])=>e.replace(/{left}/g,Le(i)).replace(/{right}/g,Le(r))),s=Le(Object.keys(t).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${s}])(?:(?!\k<tag>').)*?\k<tag>`}|${E.join("|")})'`},Dr={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":kN()},oA=t=>typeof t=="string"?Dr[t]:"regex"in t?t.regex:KN(t)+Dr[t.quote],JN=t=>at(t.map(e=>"regex"in e?e.regex:oA(e)).join("|")),IA=t=>t.map(oA).join("|"),Pr=t=>at(IA(t)),QN=(t={})=>at(NA(t)),NA=({first:t,rest:e,dashes:E,allowFirstCharNumber:s}={})=>{const T="\\p{Alphabetic}\\p{Mark}_",n="\\p{Decimal_Number}",i=Le(t!=null?t:""),r=Le(e!=null?e:""),R=s?`[${T}${n}${i}][${T}${n}${r}]*`:`[${T}${i}][${T}${n}${r}]*`;return E?XN(R):R};function lA(t,e){const E=t.slice(0,e).split(/\n/);return{line:E.length,col:E[E.length-1].length+1}}class qN{constructor(e,E){this.rules=e,this.dialectName=E,this.input="",this.index=0}tokenize(e){this.input=e,this.index=0;const E=[];let s;for(;this.index<this.input.length;){const T=this.getWhitespace();if(this.index<this.input.length){if(s=this.getNextToken(),!s)throw this.createParseError();E.push(Object.assign(Object.assign({},s),{precedingWhitespace:T}))}}return E}createParseError(){const e=this.input.slice(this.index,this.index+10),{line:E,col:s}=lA(this.input,this.index);return new Error(`Parse error: Unexpected "${e}" at line ${E} column ${s}.
${this.dialectInfo()}`)}dialectInfo(){return this.dialectName==="sql"?`This likely happens because you're using the default "sql" dialect.
If possible, please select a more specific dialect (like sqlite, postgresql, etc).`:`SQL dialect used: "${this.dialectName}".`}getWhitespace(){fr.lastIndex=this.index;const e=fr.exec(this.input);if(e)return this.index+=e[0].length,e[0]}getNextToken(){for(const e of this.rules){const E=this.match(e);if(E)return E}}match(e){e.regex.lastIndex=this.index;const E=e.regex.exec(this.input);if(E){const s=E[0],T={type:e.type,raw:s,text:e.text?e.text(s):s,start:this.index};return e.key&&(T.key=e.key(s)),this.index+=s.length,T}}}const dr=/\/\*/uy,jN=/[\s\S]/uy,ZN=/\*\//uy;class zN{constructor(){this.lastIndex=0}exec(e){let E="",s,T=0;if(s=this.matchSection(dr,e))E+=s,T++;else return null;for(;T>0;)if(s=this.matchSection(dr,e))E+=s,T++;else if(s=this.matchSection(ZN,e))E+=s,T--;else if(s=this.matchSection(jN,e))E+=s;else return null;return[E]}matchSection(e,E){e.lastIndex=this.lastIndex;const s=e.exec(E);return s&&(this.lastIndex+=s[0].length),s?s[0]:null}}class el{constructor(e,E){this.cfg=e,this.dialectName=E,this.rulesBeforeParams=this.buildRulesBeforeParams(e),this.rulesAfterParams=this.buildRulesAfterParams(e)}tokenize(e,E){const s=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,E),...this.rulesAfterParams],T=new qN(s,this.dialectName).tokenize(e);return this.cfg.postProcess?this.cfg.postProcess(T):T}buildRulesBeforeParams(e){var E,s,T;return this.validRules([{type:M.BLOCK_COMMENT,regex:/(\/\* *sql-formatter-disable *\*\/[\s\S]*?(?:\/\* *sql-formatter-enable *\*\/|$))/uy},{type:M.BLOCK_COMMENT,regex:e.nestedBlockComments?new zN:/(\/\*[^]*?\*\/)/uy},{type:M.LINE_COMMENT,regex:xN((E=e.lineCommentTypes)!==null&&E!==void 0?E:["--"])},{type:M.QUOTED_IDENTIFIER,regex:Pr(e.identTypes)},{type:M.NUMBER,regex:e.underscoresInNumbers?/(?:0x[0-9a-fA-F_]+|0b[01_]+|(?:-\s*)?(?:[0-9_]*\.[0-9_]+|[0-9_]+(?:\.[0-9_]*)?)(?:[eE][-+]?[0-9_]+(?:\.[0-9_]+)?)?)(?![\w\p{Alphabetic}])/uy:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?(?:[0-9]*\.[0-9]+|[0-9]+(?:\.[0-9]*)?)(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?![\w\p{Alphabetic}])/uy},{type:M.RESERVED_KEYWORD_PHRASE,regex:Ue((s=e.reservedKeywordPhrases)!==null&&s!==void 0?s:[],e.identChars),text:q},{type:M.RESERVED_DATA_TYPE_PHRASE,regex:Ue((T=e.reservedDataTypePhrases)!==null&&T!==void 0?T:[],e.identChars),text:q},{type:M.CASE,regex:/CASE\b/iuy,text:q},{type:M.END,regex:/END\b/iuy,text:q},{type:M.BETWEEN,regex:/BETWEEN\b/iuy,text:q},{type:M.LIMIT,regex:e.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:q},{type:M.RESERVED_CLAUSE,regex:Ue(e.reservedClauses,e.identChars),text:q},{type:M.RESERVED_SELECT,regex:Ue(e.reservedSelect,e.identChars),text:q},{type:M.RESERVED_SET_OPERATION,regex:Ue(e.reservedSetOperations,e.identChars),text:q},{type:M.WHEN,regex:/WHEN\b/iuy,text:q},{type:M.ELSE,regex:/ELSE\b/iuy,text:q},{type:M.THEN,regex:/THEN\b/iuy,text:q},{type:M.RESERVED_JOIN,regex:Ue(e.reservedJoins,e.identChars),text:q},{type:M.AND,regex:/AND\b/iuy,text:q},{type:M.OR,regex:/OR\b/iuy,text:q},{type:M.XOR,regex:e.supportsXor?/XOR\b/iuy:void 0,text:q},...e.operatorKeyword?[{type:M.OPERATOR,regex:/OPERATOR *\([^)]+\)/iuy}]:[],{type:M.RESERVED_FUNCTION_NAME,regex:Ue(e.reservedFunctionNames,e.identChars),text:q},{type:M.RESERVED_DATA_TYPE,regex:Ue(e.reservedDataTypes,e.identChars),text:q},{type:M.RESERVED_KEYWORD,regex:Ue(e.reservedKeywords,e.identChars),text:q}])}buildRulesAfterParams(e){var E,s;return this.validRules([{type:M.VARIABLE,regex:e.variableTypes?JN(e.variableTypes):void 0},{type:M.STRING,regex:Pr(e.stringTypes)},{type:M.IDENTIFIER,regex:QN(e.identChars)},{type:M.DELIMITER,regex:/[;]/uy},{type:M.COMMA,regex:/[,]/y},{type:M.OPEN_PAREN,regex:hr("open",e.extraParens)},{type:M.CLOSE_PAREN,regex:hr("close",e.extraParens)},{type:M.OPERATOR,regex:pr(["+","-","/",">","<","=","<>","<=",">=","!=",...(E=e.operators)!==null&&E!==void 0?E:[]])},{type:M.ASTERISK,regex:/[*]/uy},{type:M.PROPERTY_ACCESS_OPERATOR,regex:pr([".",...(s=e.propertyAccessOperators)!==null&&s!==void 0?s:[]])}])}buildParamRules(e,E){var s,T,n,i,r;const R={named:(E==null?void 0:E.named)||((s=e.paramTypes)===null||s===void 0?void 0:s.named)||[],quoted:(E==null?void 0:E.quoted)||((T=e.paramTypes)===null||T===void 0?void 0:T.quoted)||[],numbered:(E==null?void 0:E.numbered)||((n=e.paramTypes)===null||n===void 0?void 0:n.numbered)||[],positional:typeof(E==null?void 0:E.positional)=="boolean"?E.positional:(i=e.paramTypes)===null||i===void 0?void 0:i.positional,custom:(E==null?void 0:E.custom)||((r=e.paramTypes)===null||r===void 0?void 0:r.custom)||[]};return this.validRules([{type:M.NAMED_PARAMETER,regex:mT(R.named,NA(e.paramChars||e.identChars)),key:_=>_.slice(1)},{type:M.QUOTED_PARAMETER,regex:mT(R.quoted,IA(e.identTypes)),key:_=>(({tokenKey:o,quoteChar:O})=>o.replace(new RegExp(Le("\\"+O),"gu"),O))({tokenKey:_.slice(2,-1),quoteChar:_.slice(-1)})},{type:M.NUMBERED_PARAMETER,regex:mT(R.numbered,"[0-9]+"),key:_=>_.slice(1)},{type:M.POSITIONAL_PARAMETER,regex:R.positional?/[?]/y:void 0},...R.custom.map(_=>{var o;return{type:M.CUSTOM_PARAMETER,regex:at(_.regex),key:(o=_.key)!==null&&o!==void 0?o:(O=>O)}})])}validRules(e){return e.filter(E=>!!E.regex)}}const q=t=>vE(t.toUpperCase()),Mr=new Map,tl=t=>{let e=Mr.get(t);return e||(e=El(t),Mr.set(t,e)),e},El=t=>({tokenizer:new el(t.tokenizerOptions,t.name),formatOptions:sl(t.formatOptions)}),sl=t=>{var e;return{alwaysDenseOperators:t.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(t.onelineClauses.map(E=>[E,!0])),tabularOnelineClauses:Object.fromEntries(((e=t.tabularOnelineClauses)!==null&&e!==void 0?e:t.onelineClauses).map(E=>[E,!0]))}};function Tl(t){return t.indentStyle==="tabularLeft"||t.indentStyle==="tabularRight"?" ".repeat(10):t.useTabs?"	":" ".repeat(t.tabWidth)}function ut(t){return t.indentStyle==="tabularLeft"||t.indentStyle==="tabularRight"}class nl{constructor(e){this.params=e,this.index=0}get({key:e,text:E}){return this.params?e?this.params[e]:this.params[this.index++]:E}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(e){this.index=e}}function il(t){return t.map(rl).map(Rl).map(Al).map(_l).map(al)}const rl=(t,e,E)=>{if(SA(t.type)){const s=Sl(E,e);if(s&&s.type===M.PROPERTY_ACCESS_OPERATOR)return Object.assign(Object.assign({},t),{type:M.IDENTIFIER,text:t.raw});const T=Kt(E,e);if(T&&T.type===M.PROPERTY_ACCESS_OPERATOR)return Object.assign(Object.assign({},t),{type:M.IDENTIFIER,text:t.raw})}return t},Rl=(t,e,E)=>{if(t.type===M.RESERVED_FUNCTION_NAME){const s=Kt(E,e);if(!s||!LA(s))return Object.assign(Object.assign({},t),{type:M.IDENTIFIER,text:t.raw})}return t},Al=(t,e,E)=>{if(t.type===M.RESERVED_DATA_TYPE){const s=Kt(E,e);if(s&&LA(s))return Object.assign(Object.assign({},t),{type:M.RESERVED_PARAMETERIZED_DATA_TYPE})}return t},_l=(t,e,E)=>{if(t.type===M.IDENTIFIER){const s=Kt(E,e);if(s&&uA(s))return Object.assign(Object.assign({},t),{type:M.ARRAY_IDENTIFIER})}return t},al=(t,e,E)=>{if(t.type===M.RESERVED_DATA_TYPE){const s=Kt(E,e);if(s&&uA(s))return Object.assign(Object.assign({},t),{type:M.ARRAY_KEYWORD})}return t},Sl=(t,e)=>Kt(t,e,-1),Kt=(t,e,E=1)=>{let s=1;for(;t[e+s*E]&&Ol(t[e+s*E]);)s++;return t[e+s*E]},LA=t=>t.type===M.OPEN_PAREN&&t.text==="(",uA=t=>t.type===M.OPEN_PAREN&&t.text==="[",Ol=t=>t.type===M.BLOCK_COMMENT||t.type===M.LINE_COMMENT;class CA{constructor(e){this.tokenize=e,this.index=0,this.tokens=[],this.input=""}reset(e,E){this.input=e,this.index=0,this.tokens=this.tokenize(e)}next(){return this.tokens[this.index++]}save(){}formatError(e){const{line:E,col:s}=lA(this.input,e.start);return`Parse error at token: ${e.text} at line ${E} column ${s}`}has(e){return e in M}}var B;(function(t){t.statement="statement",t.clause="clause",t.set_operation="set_operation",t.function_call="function_call",t.parameterized_data_type="parameterized_data_type",t.array_subscript="array_subscript",t.property_access="property_access",t.parenthesis="parenthesis",t.between_predicate="between_predicate",t.case_expression="case_expression",t.case_when="case_when",t.case_else="case_else",t.limit_clause="limit_clause",t.all_columns_asterisk="all_columns_asterisk",t.literal="literal",t.identifier="identifier",t.keyword="keyword",t.data_type="data_type",t.parameter="parameter",t.operator="operator",t.comma="comma",t.line_comment="line_comment",t.block_comment="block_comment",t.disable_comment="disable_comment"})(B=B||(B={}));function GT(t){return t[0]}const Y=new CA(t=>[]),qe=([[t]])=>t,Z=t=>({type:B.keyword,tokenType:t.type,text:t.text,raw:t.raw}),Ur=t=>({type:B.data_type,text:t.text,raw:t.raw}),z=(t,{leading:e,trailing:E})=>(e!=null&&e.length&&(t=Object.assign(Object.assign({},t),{leadingComments:e})),E!=null&&E.length&&(t=Object.assign(Object.assign({},t),{trailingComments:E})),t),ol=(t,{leading:e,trailing:E})=>{if(e!=null&&e.length){const[s,...T]=t;t=[z(s,{leading:e}),...T]}if(E!=null&&E.length){const s=t.slice(0,-1),T=t[t.length-1];t=[...s,z(T,{trailing:E})]}return t},Il={Lexer:Y,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:t=>t[0].concat([t[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([t])=>{const e=t[t.length-1];return e&&!e.hasSemicolon?e.children.length>0?t:t.slice(0,-1):t}},{name:"statement$subexpression$1",symbols:[Y.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[Y.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([t,[e]])=>({type:B.statement,children:t,hasSemicolon:e.type===M.DELIMITER})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:t=>t[0].concat([t[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([t,e])=>[...t,...e]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:qe},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[Y.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:GT},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[Y.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([t,e,E,s])=>{if(s){const[T,n]=s;return{type:B.limit_clause,limitKw:z(Z(t),{trailing:e}),offset:E,count:n}}else return{type:B.limit_clause,limitKw:z(Z(t),{trailing:e}),count:E}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[Y.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([t,[e,E]])=>({type:B.clause,nameKw:Z(t),children:[e,...E]})},{name:"select_clause",symbols:[Y.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([t])=>({type:B.clause,nameKw:Z(t),children:[]})},{name:"all_columns_asterisk",symbols:[Y.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:B.all_columns_asterisk})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"other_clause",symbols:[Y.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([t,e])=>({type:B.clause,nameKw:Z(t),children:e})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"set_operation",symbols:[Y.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([t,e])=>({type:B.set_operation,nameKw:Z(t),children:e})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:t=>t[0].concat([t[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:GT},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:t=>t[0].concat([t[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([t,e])=>[t,...e]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:t=>t[0].concat([t[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([t,e])=>[t,...e]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([t,e])=>z(t,{trailing:e})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([t,e])=>z(e,{leading:t})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([t,e])=>z(e,{leading:t})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:qe},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:qe},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:qe},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:qe},{name:"asteriskless_andless_expression$subexpression$1",symbols:["atomic_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:qe},{name:"atomic_expression$subexpression$1",symbols:["array_subscript"]},{name:"atomic_expression$subexpression$1",symbols:["function_call"]},{name:"atomic_expression$subexpression$1",symbols:["property_access"]},{name:"atomic_expression$subexpression$1",symbols:["parenthesis"]},{name:"atomic_expression$subexpression$1",symbols:["curly_braces"]},{name:"atomic_expression$subexpression$1",symbols:["square_brackets"]},{name:"atomic_expression$subexpression$1",symbols:["operator"]},{name:"atomic_expression$subexpression$1",symbols:["identifier"]},{name:"atomic_expression$subexpression$1",symbols:["parameter"]},{name:"atomic_expression$subexpression$1",symbols:["literal"]},{name:"atomic_expression$subexpression$1",symbols:["data_type"]},{name:"atomic_expression$subexpression$1",symbols:["keyword"]},{name:"atomic_expression",symbols:["atomic_expression$subexpression$1"],postprocess:qe},{name:"array_subscript",symbols:[Y.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([t,e,E])=>({type:B.array_subscript,array:z({type:B.identifier,quoted:!1,text:t.text},{trailing:e}),parenthesis:E})},{name:"array_subscript",symbols:[Y.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([t,e,E])=>({type:B.array_subscript,array:z(Z(t),{trailing:e}),parenthesis:E})},{name:"function_call",symbols:[Y.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([t,e,E])=>({type:B.function_call,nameKw:z(Z(t),{trailing:e}),parenthesis:E})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([t,e,E])=>({type:B.parenthesis,children:e,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([t,e,E])=>({type:B.parenthesis,children:e,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:t=>t[0].concat([t[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([t,e,E])=>({type:B.parenthesis,children:e,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access$subexpression$1",symbols:["parameter"]},{name:"property_access",symbols:["atomic_expression","_",Y.has("PROPERTY_ACCESS_OPERATOR")?{type:"PROPERTY_ACCESS_OPERATOR"}:PROPERTY_ACCESS_OPERATOR,"_","property_access$subexpression$1"],postprocess:([t,e,E,s,[T]])=>({type:B.property_access,object:z(t,{trailing:e}),operator:E.text,property:z(T,{leading:s})})},{name:"between_predicate",symbols:[Y.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",Y.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([t,e,E,s,T,n,i])=>({type:B.between_predicate,betweenKw:Z(t),expr1:ol(E,{leading:e,trailing:s}),andKw:Z(T),expr2:[z(i,{leading:n})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:GT},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:t=>t[0].concat([t[1]])},{name:"case_expression",symbols:[Y.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",Y.has("END")?{type:"END"}:END],postprocess:([t,e,E,s,T])=>({type:B.case_expression,caseKw:z(Z(t),{trailing:e}),endKw:Z(T),expr:E||[],clauses:s})},{name:"case_clause",symbols:[Y.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",Y.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([t,e,E,s,T,n])=>({type:B.case_when,whenKw:z(Z(t),{trailing:e}),thenKw:z(Z(s),{trailing:T}),condition:E,result:n})},{name:"case_clause",symbols:[Y.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([t,e,E])=>({type:B.case_else,elseKw:z(Z(t),{trailing:e}),result:E})},{name:"comma$subexpression$1",symbols:[Y.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[t]])=>({type:B.comma})},{name:"asterisk$subexpression$1",symbols:[Y.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[t]])=>({type:B.operator,text:t.text})},{name:"operator$subexpression$1",symbols:[Y.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[t]])=>({type:B.operator,text:t.text})},{name:"identifier$subexpression$1",symbols:[Y.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[Y.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[Y.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[t]])=>({type:B.identifier,quoted:t.type!=="IDENTIFIER",text:t.text})},{name:"parameter$subexpression$1",symbols:[Y.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[Y.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[Y.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[Y.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[Y.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[t]])=>({type:B.parameter,key:t.key,text:t.text})},{name:"literal$subexpression$1",symbols:[Y.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[Y.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[t]])=>({type:B.literal,text:t.text})},{name:"keyword$subexpression$1",symbols:[Y.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[Y.has("RESERVED_KEYWORD_PHRASE")?{type:"RESERVED_KEYWORD_PHRASE"}:RESERVED_KEYWORD_PHRASE]},{name:"keyword$subexpression$1",symbols:[Y.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[t]])=>Z(t)},{name:"data_type$subexpression$1",symbols:[Y.has("RESERVED_DATA_TYPE")?{type:"RESERVED_DATA_TYPE"}:RESERVED_DATA_TYPE]},{name:"data_type$subexpression$1",symbols:[Y.has("RESERVED_DATA_TYPE_PHRASE")?{type:"RESERVED_DATA_TYPE_PHRASE"}:RESERVED_DATA_TYPE_PHRASE]},{name:"data_type",symbols:["data_type$subexpression$1"],postprocess:([[t]])=>Ur(t)},{name:"data_type",symbols:[Y.has("RESERVED_PARAMETERIZED_DATA_TYPE")?{type:"RESERVED_PARAMETERIZED_DATA_TYPE"}:RESERVED_PARAMETERIZED_DATA_TYPE,"_","parenthesis"],postprocess:([t,e,E])=>({type:B.parameterized_data_type,dataType:z(Ur(t),{trailing:e}),parenthesis:E})},{name:"logic_operator$subexpression$1",symbols:[Y.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[Y.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[Y.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[t]])=>Z(t)},{name:"other_keyword$subexpression$1",symbols:[Y.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[Y.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[Y.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[Y.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[t]])=>Z(t)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:t=>t[0].concat([t[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([t])=>t},{name:"comment",symbols:[Y.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([t])=>({type:B.line_comment,text:t.text,precedingWhitespace:t.precedingWhitespace})},{name:"comment",symbols:[Y.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([t])=>({type:B.block_comment,text:t.text,precedingWhitespace:t.precedingWhitespace})},{name:"comment",symbols:[Y.has("DISABLE_COMMENT")?{type:"DISABLE_COMMENT"}:DISABLE_COMMENT],postprocess:([t])=>({type:B.disable_comment,text:t.text,precedingWhitespace:t.precedingWhitespace})}],ParserStart:"main"},{Parser:Nl,Grammar:ll}=C_;function Ll(t){let e={};const E=new CA(T=>[...il(t.tokenize(T,e)),aA(T.length)]),s=new Nl(ll.fromCompiled(Il),{lexer:E});return{parse:(T,n)=>{e=n;const{results:i}=s.feed(T);if(i.length===1)return i[0];throw i.length===0?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar
${JSON.stringify(i,void 0,2)}`)}}}var d;(function(t){t[t.SPACE=0]="SPACE",t[t.NO_SPACE=1]="NO_SPACE",t[t.NO_NEWLINE=2]="NO_NEWLINE",t[t.NEWLINE=3]="NEWLINE",t[t.MANDATORY_NEWLINE=4]="MANDATORY_NEWLINE",t[t.INDENT=5]="INDENT",t[t.SINGLE_INDENT=6]="SINGLE_INDENT"})(d=d||(d={}));class cA{constructor(e){this.indentation=e,this.items=[]}add(...e){for(const E of e)switch(E){case d.SPACE:this.items.push(d.SPACE);break;case d.NO_SPACE:this.trimHorizontalWhitespace();break;case d.NO_NEWLINE:this.trimWhitespace();break;case d.NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(d.NEWLINE);break;case d.MANDATORY_NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(d.MANDATORY_NEWLINE);break;case d.INDENT:this.addIndentation();break;case d.SINGLE_INDENT:this.items.push(d.SINGLE_INDENT);break;default:this.items.push(E)}}trimHorizontalWhitespace(){for(;ul(RE(this.items));)this.items.pop()}trimWhitespace(){for(;Cl(RE(this.items));)this.items.pop()}addNewline(e){if(this.items.length>0)switch(RE(this.items)){case d.NEWLINE:this.items.pop(),this.items.push(e);break;case d.MANDATORY_NEWLINE:break;default:this.items.push(e);break}}addIndentation(){for(let e=0;e<this.indentation.getLevel();e++)this.items.push(d.SINGLE_INDENT)}toString(){return this.items.map(e=>this.itemToString(e)).join("")}getLayoutItems(){return this.items}itemToString(e){switch(e){case d.SPACE:return" ";case d.NEWLINE:case d.MANDATORY_NEWLINE:return`
`;case d.SINGLE_INDENT:return this.indentation.getSingleIndent();default:return e}}}const ul=t=>t===d.SPACE||t===d.SINGLE_INDENT,Cl=t=>t===d.SPACE||t===d.SINGLE_INDENT||t===d.NEWLINE;function mr(t,e){if(e==="standard")return t;let E=[];return t.length>=10&&t.includes(" ")&&([t,...E]=t.split(" ")),e==="tabularLeft"?t=t.padEnd(9," "):t=t.padStart(9," "),t+["",...E].join(" ")}function Gr(t){return nO(t)||t===M.RESERVED_CLAUSE||t===M.RESERVED_SELECT||t===M.RESERVED_SET_OPERATION||t===M.RESERVED_JOIN||t===M.LIMIT}const yT="top-level",cl="block-level";class fA{constructor(e){this.indent=e,this.indentTypes=[]}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(yT)}increaseBlockLevel(){this.indentTypes.push(cl)}decreaseTopLevel(){this.indentTypes.length>0&&RE(this.indentTypes)===yT&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0&&this.indentTypes.pop()===yT;);}}class fl extends cA{constructor(e){super(new fA("")),this.expressionWidth=e,this.length=0,this.trailingSpace=!1}add(...e){if(e.forEach(E=>this.addToLength(E)),this.length>this.expressionWidth)throw new Sn;super.add(...e)}addToLength(e){if(typeof e=="string")this.length+=e.length,this.trailingSpace=!1;else{if(e===d.MANDATORY_NEWLINE||e===d.NEWLINE)throw new Sn;e===d.INDENT||e===d.SINGLE_INDENT||e===d.SPACE?this.trailingSpace||(this.length++,this.trailingSpace=!0):(e===d.NO_NEWLINE||e===d.NO_SPACE)&&this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}}class Sn extends Error{}class _s{constructor({cfg:e,dialectCfg:E,params:s,layout:T,inline:n=!1}){this.inline=!1,this.nodes=[],this.index=-1,this.cfg=e,this.dialectCfg=E,this.inline=n,this.params=s,this.layout=T}format(e){for(this.nodes=e,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(e){this.formatComments(e.leadingComments),this.formatNodeWithoutComments(e),this.formatComments(e.trailingComments)}formatNodeWithoutComments(e){switch(e.type){case B.function_call:return this.formatFunctionCall(e);case B.parameterized_data_type:return this.formatParameterizedDataType(e);case B.array_subscript:return this.formatArraySubscript(e);case B.property_access:return this.formatPropertyAccess(e);case B.parenthesis:return this.formatParenthesis(e);case B.between_predicate:return this.formatBetweenPredicate(e);case B.case_expression:return this.formatCaseExpression(e);case B.case_when:return this.formatCaseWhen(e);case B.case_else:return this.formatCaseElse(e);case B.clause:return this.formatClause(e);case B.set_operation:return this.formatSetOperation(e);case B.limit_clause:return this.formatLimitClause(e);case B.all_columns_asterisk:return this.formatAllColumnsAsterisk(e);case B.literal:return this.formatLiteral(e);case B.identifier:return this.formatIdentifier(e);case B.parameter:return this.formatParameter(e);case B.operator:return this.formatOperator(e);case B.comma:return this.formatComma(e);case B.line_comment:return this.formatLineComment(e);case B.block_comment:return this.formatBlockComment(e);case B.disable_comment:return this.formatBlockComment(e);case B.data_type:return this.formatDataType(e);case B.keyword:return this.formatKeywordNode(e)}}formatFunctionCall(e){this.withComments(e.nameKw,()=>{this.layout.add(this.showFunctionKw(e.nameKw))}),this.formatNode(e.parenthesis)}formatParameterizedDataType(e){this.withComments(e.dataType,()=>{this.layout.add(this.showDataType(e.dataType))}),this.formatNode(e.parenthesis)}formatArraySubscript(e){let E;switch(e.array.type){case B.data_type:E=this.showDataType(e.array);break;case B.keyword:E=this.showKw(e.array);break;default:E=this.showIdentifier(e.array);break}this.withComments(e.array,()=>{this.layout.add(E)}),this.formatNode(e.parenthesis)}formatPropertyAccess(e){this.formatNode(e.object),this.layout.add(d.NO_SPACE,e.operator),this.formatNode(e.property)}formatParenthesis(e){const E=this.formatInlineExpression(e.children);E?(this.layout.add(e.openParen),this.layout.add(...E.getLayoutItems()),this.layout.add(d.NO_SPACE,e.closeParen,d.SPACE)):(this.layout.add(e.openParen,d.NEWLINE),ut(this.cfg)?(this.layout.add(d.INDENT),this.layout=this.formatSubExpression(e.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(d.INDENT),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(d.NEWLINE,d.INDENT,e.closeParen,d.SPACE))}formatBetweenPredicate(e){this.layout.add(this.showKw(e.betweenKw),d.SPACE),this.layout=this.formatSubExpression(e.expr1),this.layout.add(d.NO_SPACE,d.SPACE,this.showNonTabularKw(e.andKw),d.SPACE),this.layout=this.formatSubExpression(e.expr2),this.layout.add(d.SPACE)}formatCaseExpression(e){this.formatNode(e.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(e.expr),this.layout=this.formatSubExpression(e.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(d.NEWLINE,d.INDENT),this.formatNode(e.endKw)}formatCaseWhen(e){this.layout.add(d.NEWLINE,d.INDENT),this.formatNode(e.whenKw),this.layout=this.formatSubExpression(e.condition),this.formatNode(e.thenKw),this.layout=this.formatSubExpression(e.result)}formatCaseElse(e){this.layout.add(d.NEWLINE,d.INDENT),this.formatNode(e.elseKw),this.layout=this.formatSubExpression(e.result)}formatClause(e){this.isOnelineClause(e)?this.formatClauseInOnelineStyle(e):ut(this.cfg)?this.formatClauseInTabularStyle(e):this.formatClauseInIndentedStyle(e)}isOnelineClause(e){return ut(this.cfg)?this.dialectCfg.tabularOnelineClauses[e.nameKw.text]:this.dialectCfg.onelineClauses[e.nameKw.text]}formatClauseInIndentedStyle(e){this.layout.add(d.NEWLINE,d.INDENT,this.showKw(e.nameKw),d.NEWLINE),this.layout.indentation.increaseTopLevel(),this.layout.add(d.INDENT),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(e){this.layout.add(d.NEWLINE,d.INDENT,this.showKw(e.nameKw),d.SPACE),this.layout=this.formatSubExpression(e.children)}formatClauseInTabularStyle(e){this.layout.add(d.NEWLINE,d.INDENT,this.showKw(e.nameKw),d.SPACE),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(e){this.layout.add(d.NEWLINE,d.INDENT,this.showKw(e.nameKw),d.NEWLINE),this.layout.add(d.INDENT),this.layout=this.formatSubExpression(e.children)}formatLimitClause(e){this.withComments(e.limitKw,()=>{this.layout.add(d.NEWLINE,d.INDENT,this.showKw(e.limitKw))}),this.layout.indentation.increaseTopLevel(),ut(this.cfg)?this.layout.add(d.SPACE):this.layout.add(d.NEWLINE,d.INDENT),e.offset?(this.layout=this.formatSubExpression(e.offset),this.layout.add(d.NO_SPACE,",",d.SPACE),this.layout=this.formatSubExpression(e.count)):this.layout=this.formatSubExpression(e.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(e){this.layout.add("*",d.SPACE)}formatLiteral(e){this.layout.add(e.text,d.SPACE)}formatIdentifier(e){this.layout.add(this.showIdentifier(e),d.SPACE)}formatParameter(e){this.layout.add(this.params.get(e),d.SPACE)}formatOperator({text:e}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(e)?this.layout.add(d.NO_SPACE,e):e===":"?this.layout.add(d.NO_SPACE,e,d.SPACE):this.layout.add(e,d.SPACE)}formatComma(e){this.inline?this.layout.add(d.NO_SPACE,",",d.SPACE):this.layout.add(d.NO_SPACE,",",d.NEWLINE,d.INDENT)}withComments(e,E){this.formatComments(e.leadingComments),E(),this.formatComments(e.trailingComments)}formatComments(e){e&&e.forEach(E=>{E.type===B.line_comment?this.formatLineComment(E):this.formatBlockComment(E)})}formatLineComment(e){UT(e.precedingWhitespace||"")?this.layout.add(d.NEWLINE,d.INDENT,e.text,d.MANDATORY_NEWLINE,d.INDENT):this.layout.getLayoutItems().length>0?this.layout.add(d.NO_NEWLINE,d.SPACE,e.text,d.MANDATORY_NEWLINE,d.INDENT):this.layout.add(e.text,d.MANDATORY_NEWLINE,d.INDENT)}formatBlockComment(e){e.type===B.block_comment&&this.isMultilineBlockComment(e)?(this.splitBlockComment(e.text).forEach(E=>{this.layout.add(d.NEWLINE,d.INDENT,E)}),this.layout.add(d.NEWLINE,d.INDENT)):this.layout.add(e.text,d.SPACE)}isMultilineBlockComment(e){return UT(e.text)||UT(e.precedingWhitespace||"")}isDocComment(e){const E=e.split(/\n/);return/^\/\*\*?$/.test(E[0])&&E.slice(1,E.length-1).every(s=>/^\s*\*/.test(s))&&/^\s*\*\/$/.test(RE(E))}splitBlockComment(e){return this.isDocComment(e)?e.split(/\n/).map(E=>/^\s*\*/.test(E)?" "+E.replace(/^\s*/,""):E):e.split(/\n/).map(E=>E.replace(/^\s*/,""))}formatSubExpression(e){return new _s({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(e)}formatInlineExpression(e){const E=this.params.getPositionalParameterIndex();try{return new _s({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new fl(this.cfg.expressionWidth),inline:!0}).format(e)}catch(s){if(s instanceof Sn){this.params.setPositionalParameterIndex(E);return}else throw s}}formatKeywordNode(e){switch(e.tokenType){case M.RESERVED_JOIN:return this.formatJoin(e);case M.AND:case M.OR:case M.XOR:return this.formatLogicalOperator(e);default:return this.formatKeyword(e)}}formatJoin(e){ut(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(d.NEWLINE,d.INDENT,this.showKw(e),d.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(d.NEWLINE,d.INDENT,this.showKw(e),d.SPACE)}formatKeyword(e){this.layout.add(this.showKw(e),d.SPACE)}formatLogicalOperator(e){this.cfg.logicalOperatorNewline==="before"?ut(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(d.NEWLINE,d.INDENT,this.showKw(e),d.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(d.NEWLINE,d.INDENT,this.showKw(e),d.SPACE):this.layout.add(this.showKw(e),d.NEWLINE,d.INDENT)}formatDataType(e){this.layout.add(this.showDataType(e),d.SPACE)}showKw(e){return Gr(e.tokenType)?mr(this.showNonTabularKw(e),this.cfg.indentStyle):this.showNonTabularKw(e)}showNonTabularKw(e){switch(this.cfg.keywordCase){case"preserve":return vE(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}showFunctionKw(e){return Gr(e.tokenType)?mr(this.showNonTabularFunctionKw(e),this.cfg.indentStyle):this.showNonTabularFunctionKw(e)}showNonTabularFunctionKw(e){switch(this.cfg.functionCase){case"preserve":return vE(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}showIdentifier(e){if(e.quoted)return e.text;switch(this.cfg.identifierCase){case"preserve":return e.text;case"upper":return e.text.toUpperCase();case"lower":return e.text.toLowerCase()}}showDataType(e){switch(this.cfg.dataTypeCase){case"preserve":return vE(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}}class hl{constructor(e,E){this.dialect=e,this.cfg=E,this.params=new nl(this.cfg.params)}format(e){const E=this.parse(e);return this.formatAst(E).trimEnd()}parse(e){return Ll(this.dialect.tokenizer).parse(e,this.cfg.paramTypes||{})}formatAst(e){return e.map(E=>this.formatStatement(E)).join(`
`.repeat(this.cfg.linesBetweenQueries+1))}formatStatement(e){const E=new _s({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new cA(new fA(Tl(this.cfg)))}).format(e.children);return e.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?E.add(d.NEWLINE,";"):E.add(d.NO_NEWLINE,";")),E.toString()}}class XE extends Error{}function pl(t){const e=["multilineLists","newlineBeforeOpenParen","newlineBeforeCloseParen","aliasAs","commaPosition","tabulateAlias"];for(const E of e)if(E in t)throw new XE(`${E} config is no more supported.`);if(t.expressionWidth<=0)throw new XE(`expressionWidth config must be positive number. Received ${t.expressionWidth} instead.`);if(t.params&&!Dl(t.params)&&console.warn('WARNING: All "params" option values should be strings.'),t.paramTypes&&!Pl(t.paramTypes))throw new XE("Empty regex given in custom paramTypes. That would result in matching infinite amount of parameters.");return t}function Dl(t){return(t instanceof Array?t:Object.values(t)).every(E=>typeof E=="string")}function Pl(t){return t.custom&&Array.isArray(t.custom)?t.custom.every(e=>e.regex!==""):!0}var dl=function(t,e){var E={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(E[s]=t[s]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var T=0,s=Object.getOwnPropertySymbols(t);T<s.length;T++)e.indexOf(s[T])<0&&Object.prototype.propertyIsEnumerable.call(t,s[T])&&(E[s[T]]=t[s[T]]);return E};const hA={bigquery:"bigquery",db2:"db2",db2i:"db2i",duckdb:"duckdb",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",tidb:"tidb",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},Ml=Object.keys(hA),Ul={tabWidth:2,useTabs:!1,keywordCase:"preserve",identifierCase:"preserve",dataTypeCase:"preserve",functionCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},su=(t,e={})=>{if(typeof e.language=="string"&&!Ml.includes(e.language))throw new XE(`Unsupported SQL dialect: ${e.language}`);const E=hA[e.language||"sql"];return ml(t,Object.assign(Object.assign({},e),{dialect:WN[E]}))},ml=(t,e)=>{var{dialect:E}=e,s=dl(e,["dialect"]);if(typeof t!="string")throw new Error("Invalid query argument. Expected string, instead got "+typeof t);const T=pl(Object.assign(Object.assign({},Ul),s));return new hl(tl(E),T).format(t)},wn=Symbol.for("yaml.alias"),On=Symbol.for("yaml.document"),xe=Symbol.for("yaml.map"),pA=Symbol.for("yaml.pair"),de=Symbol.for("yaml.scalar"),xt=Symbol.for("yaml.seq"),Oe=Symbol.for("yaml.node.type"),Qe=t=>!!t&&typeof t=="object"&&t[Oe]===wn,St=t=>!!t&&typeof t=="object"&&t[Oe]===On,$t=t=>!!t&&typeof t=="object"&&t[Oe]===xe,x=t=>!!t&&typeof t=="object"&&t[Oe]===pA,X=t=>!!t&&typeof t=="object"&&t[Oe]===de,kt=t=>!!t&&typeof t=="object"&&t[Oe]===xt;function k(t){if(t&&typeof t=="object")switch(t[Oe]){case xe:case xt:return!0}return!1}function J(t){if(t&&typeof t=="object")switch(t[Oe]){case wn:case xe:case de:case xt:return!0}return!1}const DA=t=>(X(t)||k(t))&&!!t.anchor,ne=Symbol("break visit"),PA=Symbol("skip children"),pe=Symbol("remove node");function Ot(t,e){const E=dA(e);St(t)?Mt(null,t.contents,E,Object.freeze([t]))===pe&&(t.contents=null):Mt(null,t,E,Object.freeze([]))}Ot.BREAK=ne;Ot.SKIP=PA;Ot.REMOVE=pe;function Mt(t,e,E,s){const T=MA(t,e,E,s);if(J(T)||x(T))return UA(t,s,T),Mt(t,T,E,s);if(typeof T!="symbol"){if(k(e)){s=Object.freeze(s.concat(e));for(let n=0;n<e.items.length;++n){const i=Mt(n,e.items[n],E,s);if(typeof i=="number")n=i-1;else{if(i===ne)return ne;i===pe&&(e.items.splice(n,1),n-=1)}}}else if(x(e)){s=Object.freeze(s.concat(e));const n=Mt("key",e.key,E,s);if(n===ne)return ne;n===pe&&(e.key=null);const i=Mt("value",e.value,E,s);if(i===ne)return ne;i===pe&&(e.value=null)}}return T}async function hs(t,e){const E=dA(e);St(t)?await Ut(null,t.contents,E,Object.freeze([t]))===pe&&(t.contents=null):await Ut(null,t,E,Object.freeze([]))}hs.BREAK=ne;hs.SKIP=PA;hs.REMOVE=pe;async function Ut(t,e,E,s){const T=await MA(t,e,E,s);if(J(T)||x(T))return UA(t,s,T),Ut(t,T,E,s);if(typeof T!="symbol"){if(k(e)){s=Object.freeze(s.concat(e));for(let n=0;n<e.items.length;++n){const i=await Ut(n,e.items[n],E,s);if(typeof i=="number")n=i-1;else{if(i===ne)return ne;i===pe&&(e.items.splice(n,1),n-=1)}}}else if(x(e)){s=Object.freeze(s.concat(e));const n=await Ut("key",e.key,E,s);if(n===ne)return ne;n===pe&&(e.key=null);const i=await Ut("value",e.value,E,s);if(i===ne)return ne;i===pe&&(e.value=null)}}return T}function dA(t){return typeof t=="object"&&(t.Collection||t.Node||t.Value)?Object.assign({Alias:t.Node,Map:t.Node,Scalar:t.Node,Seq:t.Node},t.Value&&{Map:t.Value,Scalar:t.Value,Seq:t.Value},t.Collection&&{Map:t.Collection,Seq:t.Collection},t):t}function MA(t,e,E,s){var T,n,i,r,R;if(typeof E=="function")return E(t,e,s);if($t(e))return(T=E.Map)==null?void 0:T.call(E,t,e,s);if(kt(e))return(n=E.Seq)==null?void 0:n.call(E,t,e,s);if(x(e))return(i=E.Pair)==null?void 0:i.call(E,t,e,s);if(X(e))return(r=E.Scalar)==null?void 0:r.call(E,t,e,s);if(Qe(e))return(R=E.Alias)==null?void 0:R.call(E,t,e,s)}function UA(t,e,E){const s=e[e.length-1];if(k(s))s.items[t]=E;else if(x(s))t==="key"?s.key=E:s.value=E;else if(St(s))s.contents=E;else{const T=Qe(s)?"alias":"scalar";throw new Error(`Cannot replace node with ${T} parent`)}}const Gl={"!":"%21",",":"%2C","[":"%5B","]":"%5D","{":"%7B","}":"%7D"},yl=t=>t.replace(/[!,[\]{}]/g,e=>Gl[e]);class Te{constructor(e,E){this.docStart=null,this.docEnd=!1,this.yaml=Object.assign({},Te.defaultYaml,e),this.tags=Object.assign({},Te.defaultTags,E)}clone(){const e=new Te(this.yaml,this.tags);return e.docStart=this.docStart,e}atDocument(){const e=new Te(this.yaml,this.tags);switch(this.yaml.version){case"1.1":this.atNextDocument=!0;break;case"1.2":this.atNextDocument=!1,this.yaml={explicit:Te.defaultYaml.explicit,version:"1.2"},this.tags=Object.assign({},Te.defaultTags);break}return e}add(e,E){this.atNextDocument&&(this.yaml={explicit:Te.defaultYaml.explicit,version:"1.1"},this.tags=Object.assign({},Te.defaultTags),this.atNextDocument=!1);const s=e.trim().split(/[ \t]+/),T=s.shift();switch(T){case"%TAG":{if(s.length!==2&&(E(0,"%TAG directive should contain exactly two parts"),s.length<2))return!1;const[n,i]=s;return this.tags[n]=i,!0}case"%YAML":{if(this.yaml.explicit=!0,s.length!==1)return E(0,"%YAML directive should contain exactly one part"),!1;const[n]=s;if(n==="1.1"||n==="1.2")return this.yaml.version=n,!0;{const i=/^\d+\.\d+$/.test(n);return E(6,`Unsupported YAML version ${n}`,i),!1}}default:return E(0,`Unknown directive ${T}`,!0),!1}}tagName(e,E){if(e==="!")return"!";if(e[0]!=="!")return E(`Not a valid tag: ${e}`),null;if(e[1]==="<"){const i=e.slice(2,-1);return i==="!"||i==="!!"?(E(`Verbatim tags aren't resolved, so ${e} is invalid.`),null):(e[e.length-1]!==">"&&E("Verbatim tags must end with a >"),i)}const[,s,T]=e.match(/^(.*!)([^!]*)$/s);T||E(`The ${e} tag has no suffix`);const n=this.tags[s];if(n)try{return n+decodeURIComponent(T)}catch(i){return E(String(i)),null}return s==="!"?e:(E(`Could not resolve tag: ${e}`),null)}tagString(e){for(const[E,s]of Object.entries(this.tags))if(e.startsWith(s))return E+yl(e.substring(s.length));return e[0]==="!"?e:`!<${e}>`}toString(e){const E=this.yaml.explicit?[`%YAML ${this.yaml.version||"1.2"}`]:[],s=Object.entries(this.tags);let T;if(e&&s.length>0&&J(e.contents)){const n={};Ot(e.contents,(i,r)=>{J(r)&&r.tag&&(n[r.tag]=!0)}),T=Object.keys(n)}else T=[];for(const[n,i]of s)n==="!!"&&i==="tag:yaml.org,2002:"||(!e||T.some(r=>r.startsWith(i)))&&E.push(`%TAG ${n} ${i}`);return E.join(`
`)}}Te.defaultYaml={explicit:!1,version:"1.2"};Te.defaultTags={"!!":"tag:yaml.org,2002:"};function mA(t){if(/[\x00-\x19\s,[\]{}]/.test(t)){const E=`Anchor must not contain whitespace or control characters: ${JSON.stringify(t)}`;throw new Error(E)}return!0}function GA(t){const e=new Set;return Ot(t,{Value(E,s){s.anchor&&e.add(s.anchor)}}),e}function yA(t,e){for(let E=1;;++E){const s=`${t}${E}`;if(!e.has(s))return s}}function gl(t,e){const E=[],s=new Map;let T=null;return{onAnchor:n=>{E.push(n),T!=null||(T=GA(t));const i=yA(e,T);return T.add(i),i},setAnchors:()=>{for(const n of E){const i=s.get(n);if(typeof i=="object"&&i.anchor&&(X(i.node)||k(i.node)))i.node.anchor=i.anchor;else{const r=new Error("Failed to resolve repeated object (this should not happen)");throw r.source=n,r}}},sourceObjects:s}}function mt(t,e,E,s){if(s&&typeof s=="object")if(Array.isArray(s))for(let T=0,n=s.length;T<n;++T){const i=s[T],r=mt(t,s,String(T),i);r===void 0?delete s[T]:r!==i&&(s[T]=r)}else if(s instanceof Map)for(const T of Array.from(s.keys())){const n=s.get(T),i=mt(t,s,T,n);i===void 0?s.delete(T):i!==n&&s.set(T,i)}else if(s instanceof Set)for(const T of Array.from(s)){const n=mt(t,s,T,T);n===void 0?s.delete(T):n!==T&&(s.delete(T),s.add(n))}else for(const[T,n]of Object.entries(s)){const i=mt(t,s,T,n);i===void 0?delete s[T]:i!==n&&(s[T]=i)}return t.call(e,E,s)}function Se(t,e,E){if(Array.isArray(t))return t.map((s,T)=>Se(s,String(T),E));if(t&&typeof t.toJSON=="function"){if(!E||!DA(t))return t.toJSON(e,E);const s={aliasCount:0,count:1,res:void 0};E.anchors.set(t,s),E.onCreate=n=>{s.res=n,delete E.onCreate};const T=t.toJSON(e,E);return E.onCreate&&E.onCreate(T),T}return typeof t=="bigint"&&!(E!=null&&E.keep)?Number(t):t}class Vn{constructor(e){Object.defineProperty(this,Oe,{value:e})}clone(){const e=Object.create(Object.getPrototypeOf(this),Object.getOwnPropertyDescriptors(this));return this.range&&(e.range=this.range.slice()),e}toJS(e,{mapAsMap:E,maxAliasCount:s,onAnchor:T,reviver:n}={}){if(!St(e))throw new TypeError("A document argument is required");const i={anchors:new Map,doc:e,keep:!0,mapAsMap:E===!0,mapKeyWarned:!1,maxAliasCount:typeof s=="number"?s:100},r=Se(this,"",i);if(typeof T=="function")for(const{count:R,res:_}of i.anchors.values())T(_,R);return typeof n=="function"?mt(n,{"":r},"",r):r}}class ps extends Vn{constructor(e){super(wn),this.source=e,Object.defineProperty(this,"tag",{set(){throw new Error("Alias nodes cannot have tags")}})}resolve(e,E){let s;E!=null&&E.aliasResolveCache?s=E.aliasResolveCache:(s=[],Ot(e,{Node:(n,i)=>{(Qe(i)||DA(i))&&s.push(i)}}),E&&(E.aliasResolveCache=s));let T;for(const n of s){if(n===this)break;n.anchor===this.source&&(T=n)}return T}toJSON(e,E){if(!E)return{source:this.source};const{anchors:s,doc:T,maxAliasCount:n}=E,i=this.resolve(T,E);if(!i){const R=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new ReferenceError(R)}let r=s.get(i);if(r||(Se(i,null,E),r=s.get(i)),!r||r.res===void 0){const R="This should not happen: Alias anchor was not resolved?";throw new ReferenceError(R)}if(n>=0&&(r.count+=1,r.aliasCount===0&&(r.aliasCount=KE(T,i,s)),r.count*r.aliasCount>n)){const R="Excessive alias count indicates a resource exhaustion attack";throw new ReferenceError(R)}return r.res}toString(e,E,s){const T=`*${this.source}`;if(e){if(mA(this.source),e.options.verifyAliasOrder&&!e.anchors.has(this.source)){const n=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new Error(n)}if(e.implicitKey)return`${T} `}return T}}function KE(t,e,E){if(Qe(e)){const s=e.resolve(t),T=E&&s&&E.get(s);return T?T.count*T.aliasCount:0}else if(k(e)){let s=0;for(const T of e.items){const n=KE(t,T,E);n>s&&(s=n)}return s}else if(x(e)){const s=KE(t,e.key,E),T=KE(t,e.value,E);return Math.max(s,T)}return 1}const gA=t=>!t||typeof t!="function"&&typeof t!="object";class w extends Vn{constructor(e){super(de),this.value=e}toJSON(e,E){return E!=null&&E.keep?this.value:Se(this.value,e,E)}toString(){return String(this.value)}}w.BLOCK_FOLDED="BLOCK_FOLDED";w.BLOCK_LITERAL="BLOCK_LITERAL";w.PLAIN="PLAIN";w.QUOTE_DOUBLE="QUOTE_DOUBLE";w.QUOTE_SINGLE="QUOTE_SINGLE";const Bl="tag:yaml.org,2002:";function Hl(t,e,E){var s;if(e){const T=E.filter(i=>i.tag===e),n=(s=T.find(i=>!i.format))!=null?s:T[0];if(!n)throw new Error(`Tag ${e} not found`);return n}return E.find(T=>{var n;return((n=T.identify)==null?void 0:n.call(T,t))&&!T.format})}function SE(t,e,E){var O,I,C,h;if(St(t)&&(t=t.contents),J(t))return t;if(x(t)){const L=(I=(O=E.schema[xe]).createNode)==null?void 0:I.call(O,E.schema,null,E);return L.items.push(t),L}(t instanceof String||t instanceof Number||t instanceof Boolean||typeof BigInt!="undefined"&&t instanceof BigInt)&&(t=t.valueOf());const{aliasDuplicateObjects:s,onAnchor:T,onTagObj:n,schema:i,sourceObjects:r}=E;let R;if(s&&t&&typeof t=="object"){if(R=r.get(t),R)return(C=R.anchor)!=null||(R.anchor=T(t)),new ps(R.anchor);R={anchor:null,node:null},r.set(t,R)}e!=null&&e.startsWith("!!")&&(e=Bl+e.slice(2));let _=Hl(t,e,i.tags);if(!_){if(t&&typeof t.toJSON=="function"&&(t=t.toJSON()),!t||typeof t!="object"){const L=new w(t);return R&&(R.node=L),L}_=t instanceof Map?i[xe]:Symbol.iterator in Object(t)?i[xt]:i[xe]}n&&(n(_),delete E.onTagObj);const o=_!=null&&_.createNode?_.createNode(E.schema,t,E):typeof((h=_==null?void 0:_.nodeClass)==null?void 0:h.from)=="function"?_.nodeClass.from(E.schema,t,E):new w(t);return e?o.tag=e:_.default||(o.tag=_.tag),R&&(R.node=o),o}function as(t,e,E){let s=E;for(let T=e.length-1;T>=0;--T){const n=e[T];if(typeof n=="number"&&Number.isInteger(n)&&n>=0){const i=[];i[n]=s,s=i}else s=new Map([[n,s]])}return SE(s,void 0,{aliasDuplicateObjects:!1,keepUndefined:!1,onAnchor:()=>{throw new Error("This should not happen, please report a bug.")},schema:t,sourceObjects:new Map})}const rE=t=>t==null||typeof t=="object"&&!!t[Symbol.iterator]().next().done;class BA extends Vn{constructor(e,E){super(e),Object.defineProperty(this,"schema",{value:E,configurable:!0,enumerable:!1,writable:!0})}clone(e){const E=Object.create(Object.getPrototypeOf(this),Object.getOwnPropertyDescriptors(this));return e&&(E.schema=e),E.items=E.items.map(s=>J(s)||x(s)?s.clone(e):s),this.range&&(E.range=this.range.slice()),E}addIn(e,E){if(rE(e))this.add(E);else{const[s,...T]=e,n=this.get(s,!0);if(k(n))n.addIn(T,E);else if(n===void 0&&this.schema)this.set(s,as(this.schema,T,E));else throw new Error(`Expected YAML collection at ${s}. Remaining path: ${T}`)}}deleteIn(e){const[E,...s]=e;if(s.length===0)return this.delete(E);const T=this.get(E,!0);if(k(T))return T.deleteIn(s);throw new Error(`Expected YAML collection at ${E}. Remaining path: ${s}`)}getIn(e,E){const[s,...T]=e,n=this.get(s,!0);return T.length===0?!E&&X(n)?n.value:n:k(n)?n.getIn(T,E):void 0}hasAllNullValues(e){return this.items.every(E=>{if(!x(E))return!1;const s=E.value;return s==null||e&&X(s)&&s.value==null&&!s.commentBefore&&!s.comment&&!s.tag})}hasIn(e){const[E,...s]=e;if(s.length===0)return this.has(E);const T=this.get(E,!0);return k(T)?T.hasIn(s):!1}setIn(e,E){const[s,...T]=e;if(T.length===0)this.set(s,E);else{const n=this.get(s,!0);if(k(n))n.setIn(T,E);else if(n===void 0&&this.schema)this.set(s,as(this.schema,T,E));else throw new Error(`Expected YAML collection at ${s}. Remaining path: ${T}`)}}}const bl=t=>t.replace(/^(?!$)(?: $)?/gm,"#");function ge(t,e){return/^\n+$/.test(t)?t.substring(1):e?t.replace(/^(?! *$)/gm,e):t}const Et=(t,e,E)=>t.endsWith(`
`)?ge(E,e):E.includes(`
`)?`
`+ge(E,e):(t.endsWith(" ")?"":" ")+E,HA="flow",on="block",xE="quoted";function Ds(t,e,E="flow",{indentAtStart:s,lineWidth:T=80,minContentWidth:n=20,onFold:i,onOverflow:r}={}){if(!T||T<0)return t;T<n&&(n=0);const R=Math.max(1+n,1+T-e.length);if(t.length<=R)return t;const _=[],o={};let O=T-e.length;typeof s=="number"&&(s>T-Math.max(2,n)?_.push(0):O=T-s);let I,C,h=!1,L=-1,S=-1,a=-1;E===on&&(L=yr(t,L,e.length),L!==-1&&(O=L+R));for(let G;G=t[L+=1];){if(E===xE&&G==="\\"){switch(S=L,t[L+1]){case"x":L+=3;break;case"u":L+=5;break;case"U":L+=9;break;default:L+=1}a=L}if(G===`
`)E===on&&(L=yr(t,L,e.length)),O=L+e.length+R,I=void 0;else{if(G===" "&&C&&C!==" "&&C!==`
`&&C!=="	"){const D=t[L+1];D&&D!==" "&&D!==`
`&&D!=="	"&&(I=L)}if(L>=O)if(I)_.push(I),O=I+R,I=void 0;else if(E===xE){for(;C===" "||C==="	";)C=G,G=t[L+=1],h=!0;const D=L>a+1?L-2:S-1;if(o[D])return t;_.push(D),o[D]=!0,O=D+R,I=void 0}else h=!0}C=G}if(h&&r&&r(),_.length===0)return t;i&&i();let N=t.slice(0,_[0]);for(let G=0;G<_.length;++G){const D=_[G],U=_[G+1]||t.length;D===0?N=`
${e}${t.slice(0,U)}`:(E===xE&&o[D]&&(N+=`${t[D]}\\`),N+=`
${e}${t.slice(D+1,U)}`)}return N}function yr(t,e,E){let s=e,T=e+1,n=t[T];for(;n===" "||n==="	";)if(e<T+E)n=t[++e];else{do n=t[++e];while(n&&n!==`
`);s=e,T=e+1,n=t[T]}return s}const Ps=(t,e)=>({indentAtStart:e?t.indent.length:t.indentAtStart,lineWidth:t.options.lineWidth,minContentWidth:t.options.minContentWidth}),ds=t=>/^(%|---|\.\.\.)/m.test(t);function Fl(t,e,E){if(!e||e<0)return!1;const s=e-E,T=t.length;if(T<=s)return!1;for(let n=0,i=0;n<T;++n)if(t[n]===`
`){if(n-i>s)return!0;if(i=n+1,T-i<=s)return!1}return!0}function AE(t,e){const E=JSON.stringify(t);if(e.options.doubleQuotedAsJSON)return E;const{implicitKey:s}=e,T=e.options.doubleQuotedMinMultiLineLength,n=e.indent||(ds(t)?"  ":"");let i="",r=0;for(let R=0,_=E[R];_;_=E[++R])if(_===" "&&E[R+1]==="\\"&&E[R+2]==="n"&&(i+=E.slice(r,R)+"\\ ",R+=1,r=R,_="\\"),_==="\\")switch(E[R+1]){case"u":{i+=E.slice(r,R);const o=E.substr(R+2,4);switch(o){case"0000":i+="\\0";break;case"0007":i+="\\a";break;case"000b":i+="\\v";break;case"001b":i+="\\e";break;case"0085":i+="\\N";break;case"00a0":i+="\\_";break;case"2028":i+="\\L";break;case"2029":i+="\\P";break;default:o.substr(0,2)==="00"?i+="\\x"+o.substr(2):i+=E.substr(R,6)}R+=5,r=R+1}break;case"n":if(s||E[R+2]==='"'||E.length<T)R+=1;else{for(i+=E.slice(r,R)+`

`;E[R+2]==="\\"&&E[R+3]==="n"&&E[R+4]!=='"';)i+=`
`,R+=2;i+=n,E[R+2]===" "&&(i+="\\"),R+=1,r=R+1}break;default:R+=1}return i=r?i+E.slice(r):E,s?i:Ds(i,n,xE,Ps(e,!1))}function In(t,e){if(e.options.singleQuote===!1||e.implicitKey&&t.includes(`
`)||/[ \t]\n|\n[ \t]/.test(t))return AE(t,e);const E=e.indent||(ds(t)?"  ":""),s="'"+t.replace(/'/g,"''").replace(/\n+/g,`$&
${E}`)+"'";return e.implicitKey?s:Ds(s,E,HA,Ps(e,!1))}function Gt(t,e){const{singleQuote:E}=e.options;let s;if(E===!1)s=AE;else{const T=t.includes('"'),n=t.includes("'");T&&!n?s=In:n&&!T?s=AE:s=E?In:AE}return s(t,e)}let Nn;try{Nn=new RegExp(`(^|(?<!
))
+(?!
|$)`,"g")}catch{Nn=/\n+(?!\n|$)/g}function $E({comment:t,type:e,value:E},s,T,n){const{blockQuote:i,commentString:r,lineWidth:R}=s.options;if(!i||/\n[\t ]+$/.test(E))return Gt(E,s);const _=s.indent||(s.forceBlockIndent||ds(E)?"  ":""),o=i==="literal"?!0:i==="folded"||e===w.BLOCK_FOLDED?!1:e===w.BLOCK_LITERAL?!0:!Fl(E,R,_.length);if(!E)return o?`|
`:`>
`;let O,I;for(I=E.length;I>0;--I){const U=E[I-1];if(U!==`
`&&U!=="	"&&U!==" ")break}let C=E.substring(I);const h=C.indexOf(`
`);h===-1?O="-":E===C||h!==C.length-1?(O="+",n&&n()):O="",C&&(E=E.slice(0,-C.length),C[C.length-1]===`
`&&(C=C.slice(0,-1)),C=C.replace(Nn,`$&${_}`));let L=!1,S,a=-1;for(S=0;S<E.length;++S){const U=E[S];if(U===" ")L=!0;else if(U===`
`)a=S;else break}let N=E.substring(0,a<S?a+1:S);N&&(E=E.substring(N.length),N=N.replace(/\n+/g,`$&${_}`));let D=(L?_?"2":"1":"")+O;if(t&&(D+=" "+r(t.replace(/ ?[\r\n]+/g," ")),T&&T()),!o){const U=E.replace(/\n+/g,`
$&`).replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g,"$1$2").replace(/\n+/g,`$&${_}`);let u=!1;const f=Ps(s,!0);i!=="folded"&&e!==w.BLOCK_FOLDED&&(f.onOverflow=()=>{u=!0});const l=Ds(`${N}${U}${C}`,_,on,f);if(!u)return`>${D}
${_}${l}`}return E=E.replace(/\n+/g,`$&${_}`),`|${D}
${_}${N}${E}${C}`}function Yl(t,e,E,s){const{type:T,value:n}=t,{actualString:i,implicitKey:r,indent:R,indentStep:_,inFlow:o}=e;if(r&&n.includes(`
`)||o&&/[[\]{},]/.test(n))return Gt(n,e);if(/^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(n))return r||o||!n.includes(`
`)?Gt(n,e):$E(t,e,E,s);if(!r&&!o&&T!==w.PLAIN&&n.includes(`
`))return $E(t,e,E,s);if(ds(n)){if(R==="")return e.forceBlockIndent=!0,$E(t,e,E,s);if(r&&R===_)return Gt(n,e)}const O=n.replace(/\n+/g,`$&
${R}`);if(i){const I=L=>{var S;return L.default&&L.tag!=="tag:yaml.org,2002:str"&&((S=L.test)==null?void 0:S.test(O))},{compat:C,tags:h}=e.doc.schema;if(h.some(I)||C!=null&&C.some(I))return Gt(n,e)}return r?O:Ds(O,R,HA,Ps(e,!1))}function IE(t,e,E,s){const{implicitKey:T,inFlow:n}=e,i=typeof t.value=="string"?t:Object.assign({},t,{value:String(t.value)});let{type:r}=t;r!==w.QUOTE_DOUBLE&&/[\x00-\x08\x0b-\x1f\x7f-\x9f\u{D800}-\u{DFFF}]/u.test(i.value)&&(r=w.QUOTE_DOUBLE);const R=o=>{switch(o){case w.BLOCK_FOLDED:case w.BLOCK_LITERAL:return T||n?Gt(i.value,e):$E(i,e,E,s);case w.QUOTE_DOUBLE:return AE(i.value,e);case w.QUOTE_SINGLE:return In(i.value,e);case w.PLAIN:return Yl(i,e,E,s);default:return null}};let _=R(r);if(_===null){const{defaultKeyType:o,defaultStringType:O}=e.options,I=T&&o||O;if(_=R(I),_===null)throw new Error(`Unsupported default string type ${I}`)}return _}function bA(t,e){const E=Object.assign({blockQuote:!0,commentString:bl,defaultKeyType:null,defaultStringType:"PLAIN",directives:null,doubleQuotedAsJSON:!1,doubleQuotedMinMultiLineLength:40,falseStr:"false",flowCollectionPadding:!0,indentSeq:!0,lineWidth:80,minContentWidth:20,nullStr:"null",simpleKeys:!1,singleQuote:null,trueStr:"true",verifyAliasOrder:!0},t.schema.toStringOptions,e);let s;switch(E.collectionStyle){case"block":s=!1;break;case"flow":s=!0;break;default:s=null}return{anchors:new Set,doc:t,flowCollectionPadding:E.flowCollectionPadding?" ":"",indent:"",indentStep:typeof E.indent=="number"?" ".repeat(E.indent):"  ",inFlow:s,options:E}}function wl(t,e){var T,n,i,r;if(e.tag){const R=t.filter(_=>_.tag===e.tag);if(R.length>0)return(T=R.find(_=>_.format===e.format))!=null?T:R[0]}let E,s;if(X(e)){s=e.value;let R=t.filter(_=>{var o;return(o=_.identify)==null?void 0:o.call(_,s)});if(R.length>1){const _=R.filter(o=>o.test);_.length>0&&(R=_)}E=(n=R.find(_=>_.format===e.format))!=null?n:R.find(_=>!_.format)}else s=e,E=t.find(R=>R.nodeClass&&s instanceof R.nodeClass);if(!E){const R=(r=(i=s==null?void 0:s.constructor)==null?void 0:i.name)!=null?r:s===null?"null":typeof s;throw new Error(`Tag not resolved for ${R} value`)}return E}function Vl(t,e,{anchors:E,doc:s}){var r;if(!s.directives)return"";const T=[],n=(X(t)||k(t))&&t.anchor;n&&mA(n)&&(E.add(n),T.push(`&${n}`));const i=(r=t.tag)!=null?r:e.default?null:e.tag;return i&&T.push(s.directives.tagString(i)),T.join(" ")}function Wt(t,e,E,s){var R,_;if(x(t))return t.toString(e,E,s);if(Qe(t)){if(e.doc.directives)return t.toString(e);if((R=e.resolvedAliases)!=null&&R.has(t))throw new TypeError("Cannot stringify circular structure without alias nodes");e.resolvedAliases?e.resolvedAliases.add(t):e.resolvedAliases=new Set([t]),t=t.resolve(e.doc)}let T;const n=J(t)?t:e.doc.createNode(t,{onTagObj:o=>T=o});T!=null||(T=wl(e.doc.schema.tags,n));const i=Vl(n,T,e);i.length>0&&(e.indentAtStart=((_=e.indentAtStart)!=null?_:0)+i.length+1);const r=typeof T.stringify=="function"?T.stringify(n,e,E,s):X(n)?IE(n,e,E,s):n.toString(e,E,s);return i?X(n)||r[0]==="{"||r[0]==="["?`${i} ${r}`:`${i}
${e.indent}${r}`:r}function Wl({key:t,value:e},E,s,T){var f,l;const{allNullValues:n,doc:i,indent:r,indentStep:R,options:{commentString:_,indentSeq:o,simpleKeys:O}}=E;let I=J(t)&&t.comment||null;if(O){if(I)throw new Error("With simple keys, key nodes cannot have comments");if(k(t)||!J(t)&&typeof t=="object"){const m="With simple keys, collection cannot be used as a key value";throw new Error(m)}}let C=!O&&(!t||I&&e==null&&!E.inFlow||k(t)||(X(t)?t.type===w.BLOCK_FOLDED||t.type===w.BLOCK_LITERAL:typeof t=="object"));E=Object.assign({},E,{allNullValues:!1,implicitKey:!C&&(O||!n),indent:r+R});let h=!1,L=!1,S=Wt(t,E,()=>h=!0,()=>L=!0);if(!C&&!E.inFlow&&S.length>1024){if(O)throw new Error("With simple keys, single line scalar must not span more than 1024 characters");C=!0}if(E.inFlow){if(n||e==null)return h&&s&&s(),S===""?"?":C?`? ${S}`:S}else if(n&&!O||e==null&&C)return S=`? ${S}`,I&&!h?S+=Et(S,E.indent,_(I)):L&&T&&T(),S;h&&(I=null),C?(I&&(S+=Et(S,E.indent,_(I))),S=`? ${S}
${r}:`):(S=`${S}:`,I&&(S+=Et(S,E.indent,_(I))));let a,N,G;J(e)?(a=!!e.spaceBefore,N=e.commentBefore,G=e.comment):(a=!1,N=null,G=null,e&&typeof e=="object"&&(e=i.createNode(e))),E.implicitKey=!1,!C&&!I&&X(e)&&(E.indentAtStart=S.length+1),L=!1,!o&&R.length>=2&&!E.inFlow&&!C&&kt(e)&&!e.flow&&!e.tag&&!e.anchor&&(E.indent=E.indent.substring(2));let D=!1;const U=Wt(e,E,()=>D=!0,()=>L=!0);let u=" ";if(I||a||N){if(u=a?`
`:"",N){const m=_(N);u+=`
${ge(m,E.indent)}`}U===""&&!E.inFlow?u===`
`&&(u=`

`):u+=`
${E.indent}`}else if(!C&&k(e)){const m=U[0],A=U.indexOf(`
`),p=A!==-1,P=(l=(f=E.inFlow)!=null?f:e.flow)!=null?l:e.items.length===0;if(p||!P){let F=!1;if(p&&(m==="&"||m==="!")){let H=U.indexOf(" ");m==="&"&&H!==-1&&H<A&&U[H+1]==="!"&&(H=U.indexOf(" ",H+1)),(H===-1||A<H)&&(F=!0)}F||(u=`
${E.indent}`)}}else(U===""||U[0]===`
`)&&(u="");return S+=u+U,E.inFlow?D&&s&&s():G&&!D?S+=Et(S,E.indent,_(G)):L&&T&&T(),S}function FA(t,e){(t==="debug"||t==="warn")&&console.warn(e)}const mE="<<",be={identify:t=>t===mE||typeof t=="symbol"&&t.description===mE,default:"key",tag:"tag:yaml.org,2002:merge",test:/^<<$/,resolve:()=>Object.assign(new w(Symbol(mE)),{addToJSMap:YA}),stringify:()=>mE},vl=(t,e)=>(be.identify(e)||X(e)&&(!e.type||e.type===w.PLAIN)&&be.identify(e.value))&&(t==null?void 0:t.doc.schema.tags.some(E=>E.tag===be.tag&&E.default));function YA(t,e,E){if(E=t&&Qe(E)?E.resolve(t.doc):E,kt(E))for(const s of E.items)gT(t,e,s);else if(Array.isArray(E))for(const s of E)gT(t,e,s);else gT(t,e,E)}function gT(t,e,E){const s=t&&Qe(E)?E.resolve(t.doc):E;if(!$t(s))throw new Error("Merge sources must be maps or map aliases");const T=s.toJSON(null,t,Map);for(const[n,i]of T)e instanceof Map?e.has(n)||e.set(n,i):e instanceof Set?e.add(n):Object.prototype.hasOwnProperty.call(e,n)||Object.defineProperty(e,n,{value:i,writable:!0,enumerable:!0,configurable:!0});return e}function wA(t,e,{key:E,value:s}){if(J(E)&&E.addToJSMap)E.addToJSMap(t,e,s);else if(vl(t,E))YA(t,e,s);else{const T=Se(E,"",t);if(e instanceof Map)e.set(T,Se(s,T,t));else if(e instanceof Set)e.add(T);else{const n=Xl(E,T,t),i=Se(s,n,t);n in e?Object.defineProperty(e,n,{value:i,writable:!0,enumerable:!0,configurable:!0}):e[n]=i}}return e}function Xl(t,e,E){if(e===null)return"";if(typeof e!="object")return String(e);if(J(t)&&(E!=null&&E.doc)){const s=bA(E.doc,{});s.anchors=new Set;for(const n of E.anchors.keys())s.anchors.add(n.anchor);s.inFlow=!0,s.inStringifyKey=!0;const T=t.toString(s);if(!E.mapKeyWarned){let n=JSON.stringify(T);n.length>40&&(n=n.substring(0,36)+'..."'),FA(E.doc.options.logLevel,`Keys with collection values will be stringified due to JS Object restrictions: ${n}. Set mapAsMap: true to use object keys.`),E.mapKeyWarned=!0}return T}return JSON.stringify(e)}function Wn(t,e,E){const s=SE(t,void 0,E),T=SE(e,void 0,E);return new se(s,T)}class se{constructor(e,E=null){Object.defineProperty(this,Oe,{value:pA}),this.key=e,this.value=E}clone(e){let{key:E,value:s}=this;return J(E)&&(E=E.clone(e)),J(s)&&(s=s.clone(e)),new se(E,s)}toJSON(e,E){const s=E!=null&&E.mapAsMap?new Map:{};return wA(E,s,this)}toString(e,E,s){return e!=null&&e.doc?Wl(this,e,E,s):JSON.stringify(this)}}function VA(t,e,E){var n;return(((n=e.inFlow)!=null?n:t.flow)?xl:Kl)(t,e,E)}function Kl({comment:t,items:e},E,{blockItemPrefix:s,flowChars:T,itemIndent:n,onChompKeep:i,onComment:r}){const{indent:R,options:{commentString:_}}=E,o=Object.assign({},E,{indent:n,type:null});let O=!1;const I=[];for(let h=0;h<e.length;++h){const L=e[h];let S=null;if(J(L))!O&&L.spaceBefore&&I.push(""),Ss(E,I,L.commentBefore,O),L.comment&&(S=L.comment);else if(x(L)){const N=J(L.key)?L.key:null;N&&(!O&&N.spaceBefore&&I.push(""),Ss(E,I,N.commentBefore,O))}O=!1;let a=Wt(L,o,()=>S=null,()=>O=!0);S&&(a+=Et(a,n,_(S))),O&&S&&(O=!1),I.push(s+a)}let C;if(I.length===0)C=T.start+T.end;else{C=I[0];for(let h=1;h<I.length;++h){const L=I[h];C+=L?`
${R}${L}`:`
`}}return t?(C+=`
`+ge(_(t),R),r&&r()):O&&i&&i(),C}function xl({items:t},e,{flowChars:E,itemIndent:s}){const{indent:T,indentStep:n,flowCollectionPadding:i,options:{commentString:r}}=e;s+=n;const R=Object.assign({},e,{indent:s,inFlow:!0,type:null});let _=!1,o=0;const O=[];for(let h=0;h<t.length;++h){const L=t[h];let S=null;if(J(L))L.spaceBefore&&O.push(""),Ss(e,O,L.commentBefore,!1),L.comment&&(S=L.comment);else if(x(L)){const N=J(L.key)?L.key:null;N&&(N.spaceBefore&&O.push(""),Ss(e,O,N.commentBefore,!1),N.comment&&(_=!0));const G=J(L.value)?L.value:null;G?(G.comment&&(S=G.comment),G.commentBefore&&(_=!0)):L.value==null&&(N!=null&&N.comment)&&(S=N.comment)}S&&(_=!0);let a=Wt(L,R,()=>S=null);h<t.length-1&&(a+=","),S&&(a+=Et(a,s,r(S))),!_&&(O.length>o||a.includes(`
`))&&(_=!0),O.push(a),o=O.length}const{start:I,end:C}=E;if(O.length===0)return I+C;if(!_){const h=O.reduce((L,S)=>L+S.length+2,2);_=e.options.lineWidth>0&&h>e.options.lineWidth}if(_){let h=I;for(const L of O)h+=L?`
${n}${T}${L}`:`
`;return`${h}
${T}${C}`}else return`${I}${i}${O.join(" ")}${i}${C}`}function Ss({indent:t,options:{commentString:e}},E,s,T){if(s&&T&&(s=s.replace(/^\n+/,"")),s){const n=ge(e(s),t);E.push(n.trimStart())}}function st(t,e){const E=X(e)?e.value:e;for(const s of t)if(x(s)&&(s.key===e||s.key===E||X(s.key)&&s.key.value===E))return s}class Re extends BA{static get tagName(){return"tag:yaml.org,2002:map"}constructor(e){super(xe,e),this.items=[]}static from(e,E,s){const{keepUndefined:T,replacer:n}=s,i=new this(e),r=(R,_)=>{if(typeof n=="function")_=n.call(E,R,_);else if(Array.isArray(n)&&!n.includes(R))return;(_!==void 0||T)&&i.items.push(Wn(R,_,s))};if(E instanceof Map)for(const[R,_]of E)r(R,_);else if(E&&typeof E=="object")for(const R of Object.keys(E))r(R,E[R]);return typeof e.sortMapEntries=="function"&&i.items.sort(e.sortMapEntries),i}add(e,E){var i;let s;x(e)?s=e:!e||typeof e!="object"||!("key"in e)?s=new se(e,e==null?void 0:e.value):s=new se(e.key,e.value);const T=st(this.items,s.key),n=(i=this.schema)==null?void 0:i.sortMapEntries;if(T){if(!E)throw new Error(`Key ${s.key} already set`);X(T.value)&&gA(s.value)?T.value.value=s.value:T.value=s.value}else if(n){const r=this.items.findIndex(R=>n(s,R)<0);r===-1?this.items.push(s):this.items.splice(r,0,s)}else this.items.push(s)}delete(e){const E=st(this.items,e);return E?this.items.splice(this.items.indexOf(E),1).length>0:!1}get(e,E){var n;const s=st(this.items,e),T=s==null?void 0:s.value;return(n=!E&&X(T)?T.value:T)!=null?n:void 0}has(e){return!!st(this.items,e)}set(e,E){this.add(new se(e,E),!0)}toJSON(e,E,s){const T=s?new s:E!=null&&E.mapAsMap?new Map:{};E!=null&&E.onCreate&&E.onCreate(T);for(const n of this.items)wA(E,T,n);return T}toString(e,E,s){if(!e)return JSON.stringify(this);for(const T of this.items)if(!x(T))throw new Error(`Map items must all be pairs; found ${JSON.stringify(T)} instead`);return!e.allNullValues&&this.hasAllNullValues(!1)&&(e=Object.assign({},e,{allNullValues:!0})),VA(this,e,{blockItemPrefix:"",flowChars:{start:"{",end:"}"},itemIndent:e.indent||"",onChompKeep:s,onComment:E})}}const Jt={collection:"map",default:!0,nodeClass:Re,tag:"tag:yaml.org,2002:map",resolve(t,e){return $t(t)||e("Expected a mapping for this tag"),t},createNode:(t,e,E)=>Re.from(t,e,E)};class Je extends BA{static get tagName(){return"tag:yaml.org,2002:seq"}constructor(e){super(xt,e),this.items=[]}add(e){this.items.push(e)}delete(e){const E=GE(e);return typeof E!="number"?!1:this.items.splice(E,1).length>0}get(e,E){const s=GE(e);if(typeof s!="number")return;const T=this.items[s];return!E&&X(T)?T.value:T}has(e){const E=GE(e);return typeof E=="number"&&E<this.items.length}set(e,E){const s=GE(e);if(typeof s!="number")throw new Error(`Expected a valid index, not ${e}.`);const T=this.items[s];X(T)&&gA(E)?T.value=E:this.items[s]=E}toJSON(e,E){const s=[];E!=null&&E.onCreate&&E.onCreate(s);let T=0;for(const n of this.items)s.push(Se(n,String(T++),E));return s}toString(e,E,s){return e?VA(this,e,{blockItemPrefix:"- ",flowChars:{start:"[",end:"]"},itemIndent:(e.indent||"")+"  ",onChompKeep:s,onComment:E}):JSON.stringify(this)}static from(e,E,s){const{replacer:T}=s,n=new this(e);if(E&&Symbol.iterator in Object(E)){let i=0;for(let r of E){if(typeof T=="function"){const R=E instanceof Set?r:String(i++);r=T.call(E,R,r)}n.items.push(SE(r,void 0,s))}}return n}}function GE(t){let e=X(t)?t.value:t;return e&&typeof e=="string"&&(e=Number(e)),typeof e=="number"&&Number.isInteger(e)&&e>=0?e:null}const Qt={collection:"seq",default:!0,nodeClass:Je,tag:"tag:yaml.org,2002:seq",resolve(t,e){return kt(t)||e("Expected a sequence for this tag"),t},createNode:(t,e,E)=>Je.from(t,e,E)},Ms={identify:t=>typeof t=="string",default:!0,tag:"tag:yaml.org,2002:str",resolve:t=>t,stringify(t,e,E,s){return e=Object.assign({actualString:!0},e),IE(t,e,E,s)}},Us={identify:t=>t==null,createNode:()=>new w(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>new w(null),stringify:({source:t},e)=>typeof t=="string"&&Us.test.test(t)?t:e.options.nullStr},vn={identify:t=>typeof t=="boolean",default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,resolve:t=>new w(t[0]==="t"||t[0]==="T"),stringify({source:t,value:e},E){if(t&&vn.test.test(t)){const s=t[0]==="t"||t[0]==="T";if(e===s)return t}return e?E.options.trueStr:E.options.falseStr}};function ue({format:t,minFractionDigits:e,tag:E,value:s}){if(typeof s=="bigint")return String(s);const T=typeof s=="number"?s:Number(s);if(!isFinite(T))return isNaN(T)?".nan":T<0?"-.inf":".inf";let n=JSON.stringify(s);if(!t&&e&&(!E||E==="tag:yaml.org,2002:float")&&/^\d/.test(n)){let i=n.indexOf(".");i<0&&(i=n.length,n+=".");let r=e-(n.length-i-1);for(;r-- >0;)n+="0"}return n}const WA={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF)|\.nan|\.NaN|\.NAN)$/,resolve:t=>t.slice(-3).toLowerCase()==="nan"?NaN:t[0]==="-"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:ue},vA={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,resolve:t=>parseFloat(t),stringify(t){const e=Number(t.value);return isFinite(e)?e.toExponential():ue(t)}},XA={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:\.[0-9]+|[0-9]+\.[0-9]*)$/,resolve(t){const e=new w(parseFloat(t)),E=t.indexOf(".");return E!==-1&&t[t.length-1]==="0"&&(e.minFractionDigits=t.length-E-1),e},stringify:ue},ms=t=>typeof t=="bigint"||Number.isInteger(t),Xn=(t,e,E,{intAsBigInt:s})=>s?BigInt(t):parseInt(t.substring(e),E);function KA(t,e,E){const{value:s}=t;return ms(s)&&s>=0?E+s.toString(e):ue(t)}const xA={identify:t=>ms(t)&&t>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^0o[0-7]+$/,resolve:(t,e,E)=>Xn(t,2,8,E),stringify:t=>KA(t,8,"0o")},$A={identify:ms,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9]+$/,resolve:(t,e,E)=>Xn(t,0,10,E),stringify:ue},kA={identify:t=>ms(t)&&t>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^0x[0-9a-fA-F]+$/,resolve:(t,e,E)=>Xn(t,2,16,E),stringify:t=>KA(t,16,"0x")},$l=[Jt,Qt,Ms,Us,vn,xA,$A,kA,WA,vA,XA];function gr(t){return typeof t=="bigint"||Number.isInteger(t)}const yE=({value:t})=>JSON.stringify(t),kl=[{identify:t=>typeof t=="string",default:!0,tag:"tag:yaml.org,2002:str",resolve:t=>t,stringify:yE},{identify:t=>t==null,createNode:()=>new w(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^null$/,resolve:()=>null,stringify:yE},{identify:t=>typeof t=="boolean",default:!0,tag:"tag:yaml.org,2002:bool",test:/^true$|^false$/,resolve:t=>t==="true",stringify:yE},{identify:gr,default:!0,tag:"tag:yaml.org,2002:int",test:/^-?(?:0|[1-9][0-9]*)$/,resolve:(t,e,{intAsBigInt:E})=>E?BigInt(t):parseInt(t,10),stringify:({value:t})=>gr(t)?t.toString():JSON.stringify(t)},{identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,resolve:t=>parseFloat(t),stringify:yE}],Jl={default:!0,tag:"",test:/^/,resolve(t,e){return e(`Unresolved plain scalar ${JSON.stringify(t)}`),t}},Ql=[Jt,Qt].concat(kl,Jl),Kn={identify:t=>t instanceof Uint8Array,default:!1,tag:"tag:yaml.org,2002:binary",resolve(t,e){if(typeof atob=="function"){const E=atob(t.replace(/[\n\r]/g,"")),s=new Uint8Array(E.length);for(let T=0;T<E.length;++T)s[T]=E.charCodeAt(T);return s}else return e("This environment does not support reading binary tags; either Buffer or atob is required"),t},stringify({comment:t,type:e,value:E},s,T,n){if(!E)return"";const i=E;let r;if(typeof btoa=="function"){let R="";for(let _=0;_<i.length;++_)R+=String.fromCharCode(i[_]);r=btoa(R)}else throw new Error("This environment does not support writing binary tags; either Buffer or btoa is required");if(e!=null||(e=w.BLOCK_LITERAL),e!==w.QUOTE_DOUBLE){const R=Math.max(s.options.lineWidth-s.indent.length,s.options.minContentWidth),_=Math.ceil(r.length/R),o=new Array(_);for(let O=0,I=0;O<_;++O,I+=R)o[O]=r.substr(I,R);r=o.join(e===w.BLOCK_LITERAL?`
`:" ")}return IE({comment:t,type:e,value:r},s,T,n)}};function JA(t,e){var E;if(kt(t))for(let s=0;s<t.items.length;++s){let T=t.items[s];if(!x(T)){if($t(T)){T.items.length>1&&e("Each pair must have its own sequence indicator");const n=T.items[0]||new se(new w(null));if(T.commentBefore&&(n.key.commentBefore=n.key.commentBefore?`${T.commentBefore}
${n.key.commentBefore}`:T.commentBefore),T.comment){const i=(E=n.value)!=null?E:n.key;i.comment=i.comment?`${T.comment}
${i.comment}`:T.comment}T=n}t.items[s]=x(T)?T:new se(T)}}else e("Expected a sequence for this tag");return t}function QA(t,e,E){const{replacer:s}=E,T=new Je(t);T.tag="tag:yaml.org,2002:pairs";let n=0;if(e&&Symbol.iterator in Object(e))for(let i of e){typeof s=="function"&&(i=s.call(e,String(n++),i));let r,R;if(Array.isArray(i))if(i.length===2)r=i[0],R=i[1];else throw new TypeError(`Expected [key, value] tuple: ${i}`);else if(i&&i instanceof Object){const _=Object.keys(i);if(_.length===1)r=_[0],R=i[r];else throw new TypeError(`Expected tuple with one key, not ${_.length} keys`)}else r=i;T.items.push(Wn(r,R,E))}return T}const xn={collection:"seq",default:!1,tag:"tag:yaml.org,2002:pairs",resolve:JA,createNode:QA};class Ht extends Je{constructor(){super(),this.add=Re.prototype.add.bind(this),this.delete=Re.prototype.delete.bind(this),this.get=Re.prototype.get.bind(this),this.has=Re.prototype.has.bind(this),this.set=Re.prototype.set.bind(this),this.tag=Ht.tag}toJSON(e,E){if(!E)return super.toJSON(e);const s=new Map;E!=null&&E.onCreate&&E.onCreate(s);for(const T of this.items){let n,i;if(x(T)?(n=Se(T.key,"",E),i=Se(T.value,n,E)):n=Se(T,"",E),s.has(n))throw new Error("Ordered maps must not include duplicate keys");s.set(n,i)}return s}static from(e,E,s){const T=QA(e,E,s),n=new this;return n.items=T.items,n}}Ht.tag="tag:yaml.org,2002:omap";const $n={collection:"seq",identify:t=>t instanceof Map,nodeClass:Ht,default:!1,tag:"tag:yaml.org,2002:omap",resolve(t,e){const E=JA(t,e),s=[];for(const{key:T}of E.items)X(T)&&(s.includes(T.value)?e(`Ordered maps must not include duplicate keys: ${T.value}`):s.push(T.value));return Object.assign(new Ht,E)},createNode:(t,e,E)=>Ht.from(t,e,E)};function qA({value:t,source:e},E){return e&&(t?jA:ZA).test.test(e)?e:t?E.options.trueStr:E.options.falseStr}const jA={identify:t=>t===!0,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,resolve:()=>new w(!0),stringify:qA},ZA={identify:t=>t===!1,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,resolve:()=>new w(!1),stringify:qA},ql={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF)|\.nan|\.NaN|\.NAN)$/,resolve:t=>t.slice(-3).toLowerCase()==="nan"?NaN:t[0]==="-"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:ue},jl={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:[0-9][0-9_]*)?(?:\.[0-9_]*)?[eE][-+]?[0-9]+$/,resolve:t=>parseFloat(t.replace(/_/g,"")),stringify(t){const e=Number(t.value);return isFinite(e)?e.toExponential():ue(t)}},Zl={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:[0-9][0-9_]*)?\.[0-9_]*$/,resolve(t){const e=new w(parseFloat(t.replace(/_/g,""))),E=t.indexOf(".");if(E!==-1){const s=t.substring(E+1).replace(/_/g,"");s[s.length-1]==="0"&&(e.minFractionDigits=s.length)}return e},stringify:ue},NE=t=>typeof t=="bigint"||Number.isInteger(t);function Gs(t,e,E,{intAsBigInt:s}){const T=t[0];if((T==="-"||T==="+")&&(e+=1),t=t.substring(e).replace(/_/g,""),s){switch(E){case 2:t=`0b${t}`;break;case 8:t=`0o${t}`;break;case 16:t=`0x${t}`;break}const i=BigInt(t);return T==="-"?BigInt(-1)*i:i}const n=parseInt(t,E);return T==="-"?-1*n:n}function kn(t,e,E){const{value:s}=t;if(NE(s)){const T=s.toString(e);return s<0?"-"+E+T.substr(1):E+T}return ue(t)}const zl={identify:NE,default:!0,tag:"tag:yaml.org,2002:int",format:"BIN",test:/^[-+]?0b[0-1_]+$/,resolve:(t,e,E)=>Gs(t,2,2,E),stringify:t=>kn(t,2,"0b")},eL={identify:NE,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^[-+]?0[0-7_]+$/,resolve:(t,e,E)=>Gs(t,1,8,E),stringify:t=>kn(t,8,"0")},tL={identify:NE,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9][0-9_]*$/,resolve:(t,e,E)=>Gs(t,0,10,E),stringify:ue},EL={identify:NE,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^[-+]?0x[0-9a-fA-F_]+$/,resolve:(t,e,E)=>Gs(t,2,16,E),stringify:t=>kn(t,16,"0x")};class bt extends Re{constructor(e){super(e),this.tag=bt.tag}add(e){let E;x(e)?E=e:e&&typeof e=="object"&&"key"in e&&"value"in e&&e.value===null?E=new se(e.key,null):E=new se(e,null),st(this.items,E.key)||this.items.push(E)}get(e,E){const s=st(this.items,e);return!E&&x(s)?X(s.key)?s.key.value:s.key:s}set(e,E){if(typeof E!="boolean")throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof E}`);const s=st(this.items,e);s&&!E?this.items.splice(this.items.indexOf(s),1):!s&&E&&this.items.push(new se(e))}toJSON(e,E){return super.toJSON(e,E,Set)}toString(e,E,s){if(!e)return JSON.stringify(this);if(this.hasAllNullValues(!0))return super.toString(Object.assign({},e,{allNullValues:!0}),E,s);throw new Error("Set items must all have null values")}static from(e,E,s){const{replacer:T}=s,n=new this(e);if(E&&Symbol.iterator in Object(E))for(let i of E)typeof T=="function"&&(i=T.call(E,i,i)),n.items.push(Wn(i,null,s));return n}}bt.tag="tag:yaml.org,2002:set";const Jn={collection:"map",identify:t=>t instanceof Set,nodeClass:bt,default:!1,tag:"tag:yaml.org,2002:set",createNode:(t,e,E)=>bt.from(t,e,E),resolve(t,e){if($t(t)){if(t.hasAllNullValues(!0))return Object.assign(new bt,t);e("Set items must all have null values")}else e("Expected a mapping for this tag");return t}};function Qn(t,e){const E=t[0],s=E==="-"||E==="+"?t.substring(1):t,T=i=>e?BigInt(i):Number(i),n=s.replace(/_/g,"").split(":").reduce((i,r)=>i*T(60)+T(r),T(0));return E==="-"?T(-1)*n:n}function zA(t){let{value:e}=t,E=i=>i;if(typeof e=="bigint")E=i=>BigInt(i);else if(isNaN(e)||!isFinite(e))return ue(t);let s="";e<0&&(s="-",e*=E(-1));const T=E(60),n=[e%T];return e<60?n.unshift(0):(e=(e-n[0])/T,n.unshift(e%T),e>=60&&(e=(e-n[0])/T,n.unshift(e))),s+n.map(i=>String(i).padStart(2,"0")).join(":").replace(/000000\d*$/,"")}const e_={identify:t=>typeof t=="bigint"||Number.isInteger(t),default:!0,tag:"tag:yaml.org,2002:int",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,resolve:(t,e,{intAsBigInt:E})=>Qn(t,E),stringify:zA},t_={identify:t=>typeof t=="number",default:!0,tag:"tag:yaml.org,2002:float",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*$/,resolve:t=>Qn(t,!1),stringify:zA},ys={identify:t=>t instanceof Date,default:!0,tag:"tag:yaml.org,2002:timestamp",test:RegExp("^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?$"),resolve(t){const e=t.match(ys.test);if(!e)throw new Error("!!timestamp expects a date, starting with yyyy-mm-dd");const[,E,s,T,n,i,r]=e.map(Number),R=e[7]?Number((e[7]+"00").substr(1,3)):0;let _=Date.UTC(E,s-1,T,n||0,i||0,r||0,R);const o=e[8];if(o&&o!=="Z"){let O=Qn(o,!1);Math.abs(O)<30&&(O*=60),_-=6e4*O}return new Date(_)},stringify:({value:t})=>{var e;return(e=t==null?void 0:t.toISOString().replace(/(T00:00:00)?\.000Z$/,""))!=null?e:""}},Br=[Jt,Qt,Ms,Us,jA,ZA,zl,eL,tL,EL,ql,jl,Zl,Kn,be,$n,xn,Jn,e_,t_,ys],Hr=new Map([["core",$l],["failsafe",[Jt,Qt,Ms]],["json",Ql],["yaml11",Br],["yaml-1.1",Br]]),br={binary:Kn,bool:vn,float:XA,floatExp:vA,floatNaN:WA,floatTime:t_,int:$A,intHex:kA,intOct:xA,intTime:e_,map:Jt,merge:be,null:Us,omap:$n,pairs:xn,seq:Qt,set:Jn,timestamp:ys},sL={"tag:yaml.org,2002:binary":Kn,"tag:yaml.org,2002:merge":be,"tag:yaml.org,2002:omap":$n,"tag:yaml.org,2002:pairs":xn,"tag:yaml.org,2002:set":Jn,"tag:yaml.org,2002:timestamp":ys};function BT(t,e,E){const s=Hr.get(e);if(s&&!t)return E&&!s.includes(be)?s.concat(be):s.slice();let T=s;if(!T)if(Array.isArray(t))T=[];else{const n=Array.from(Hr.keys()).filter(i=>i!=="yaml11").map(i=>JSON.stringify(i)).join(", ");throw new Error(`Unknown schema "${e}"; use one of ${n} or define customTags array`)}if(Array.isArray(t))for(const n of t)T=T.concat(n);else typeof t=="function"&&(T=t(T.slice()));return E&&(T=T.concat(be)),T.reduce((n,i)=>{const r=typeof i=="string"?br[i]:i;if(!r){const R=JSON.stringify(i),_=Object.keys(br).map(o=>JSON.stringify(o)).join(", ");throw new Error(`Unknown custom tag ${R}; use one of ${_}`)}return n.includes(r)||n.push(r),n},[])}const TL=(t,e)=>t.key<e.key?-1:t.key>e.key?1:0;class gs{constructor({compat:e,customTags:E,merge:s,resolveKnownTags:T,schema:n,sortMapEntries:i,toStringDefaults:r}){this.compat=Array.isArray(e)?BT(e,"compat"):e?BT(null,e):null,this.name=typeof n=="string"&&n||"core",this.knownTags=T?sL:{},this.tags=BT(E,this.name,s),this.toStringOptions=r!=null?r:null,Object.defineProperty(this,xe,{value:Jt}),Object.defineProperty(this,de,{value:Ms}),Object.defineProperty(this,xt,{value:Qt}),this.sortMapEntries=typeof i=="function"?i:i===!0?TL:null}clone(){const e=Object.create(gs.prototype,Object.getOwnPropertyDescriptors(this));return e.tags=this.tags.slice(),e}}function nL(t,e){var R;const E=[];let s=e.directives===!0;if(e.directives!==!1&&t.directives){const _=t.directives.toString(t);_?(E.push(_),s=!0):t.directives.docStart&&(s=!0)}s&&E.push("---");const T=bA(t,e),{commentString:n}=T.options;if(t.commentBefore){E.length!==1&&E.unshift("");const _=n(t.commentBefore);E.unshift(ge(_,""))}let i=!1,r=null;if(t.contents){if(J(t.contents)){if(t.contents.spaceBefore&&s&&E.push(""),t.contents.commentBefore){const O=n(t.contents.commentBefore);E.push(ge(O,""))}T.forceBlockIndent=!!t.comment,r=t.contents.comment}const _=r?void 0:()=>i=!0;let o=Wt(t.contents,T,()=>r=null,_);r&&(o+=Et(o,"",n(r))),(o[0]==="|"||o[0]===">")&&E[E.length-1]==="---"?E[E.length-1]=`--- ${o}`:E.push(o)}else E.push(Wt(t.contents,T));if((R=t.directives)!=null&&R.docEnd)if(t.comment){const _=n(t.comment);_.includes(`
`)?(E.push("..."),E.push(ge(_,""))):E.push(`... ${_}`)}else E.push("...");else{let _=t.comment;_&&i&&(_=_.replace(/^\n+/,"")),_&&((!i||r)&&E[E.length-1]!==""&&E.push(""),E.push(ge(n(_),"")))}return E.join(`
`)+`
`}class qt{constructor(e,E,s){this.commentBefore=null,this.comment=null,this.errors=[],this.warnings=[],Object.defineProperty(this,Oe,{value:On});let T=null;typeof E=="function"||Array.isArray(E)?T=E:s===void 0&&E&&(s=E,E=void 0);const n=Object.assign({intAsBigInt:!1,keepSourceTokens:!1,logLevel:"warn",prettyErrors:!0,strict:!0,stringKeys:!1,uniqueKeys:!0,version:"1.2"},s);this.options=n;let{version:i}=n;s!=null&&s._directives?(this.directives=s._directives.atDocument(),this.directives.yaml.explicit&&(i=this.directives.yaml.version)):this.directives=new Te({version:i}),this.setSchema(i,s),this.contents=e===void 0?null:this.createNode(e,T,s)}clone(){const e=Object.create(qt.prototype,{[Oe]:{value:On}});return e.commentBefore=this.commentBefore,e.comment=this.comment,e.errors=this.errors.slice(),e.warnings=this.warnings.slice(),e.options=Object.assign({},this.options),this.directives&&(e.directives=this.directives.clone()),e.schema=this.schema.clone(),e.contents=J(this.contents)?this.contents.clone(e.schema):this.contents,this.range&&(e.range=this.range.slice()),e}add(e){Ct(this.contents)&&this.contents.add(e)}addIn(e,E){Ct(this.contents)&&this.contents.addIn(e,E)}createAlias(e,E){if(!e.anchor){const s=GA(this);e.anchor=!E||s.has(E)?yA(E||"a",s):E}return new ps(e.anchor)}createNode(e,E,s){let T;if(typeof E=="function")e=E.call({"":e},"",e),T=E;else if(Array.isArray(E)){const S=N=>typeof N=="number"||N instanceof String||N instanceof Number,a=E.filter(S).map(String);a.length>0&&(E=E.concat(a)),T=E}else s===void 0&&E&&(s=E,E=void 0);const{aliasDuplicateObjects:n,anchorPrefix:i,flow:r,keepUndefined:R,onTagObj:_,tag:o}=s!=null?s:{},{onAnchor:O,setAnchors:I,sourceObjects:C}=gl(this,i||"a"),h={aliasDuplicateObjects:n!=null?n:!0,keepUndefined:R!=null?R:!1,onAnchor:O,onTagObj:_,replacer:T,schema:this.schema,sourceObjects:C},L=SE(e,o,h);return r&&k(L)&&(L.flow=!0),I(),L}createPair(e,E,s={}){const T=this.createNode(e,null,s),n=this.createNode(E,null,s);return new se(T,n)}delete(e){return Ct(this.contents)?this.contents.delete(e):!1}deleteIn(e){return rE(e)?this.contents==null?!1:(this.contents=null,!0):Ct(this.contents)?this.contents.deleteIn(e):!1}get(e,E){return k(this.contents)?this.contents.get(e,E):void 0}getIn(e,E){return rE(e)?!E&&X(this.contents)?this.contents.value:this.contents:k(this.contents)?this.contents.getIn(e,E):void 0}has(e){return k(this.contents)?this.contents.has(e):!1}hasIn(e){return rE(e)?this.contents!==void 0:k(this.contents)?this.contents.hasIn(e):!1}set(e,E){this.contents==null?this.contents=as(this.schema,[e],E):Ct(this.contents)&&this.contents.set(e,E)}setIn(e,E){rE(e)?this.contents=E:this.contents==null?this.contents=as(this.schema,Array.from(e),E):Ct(this.contents)&&this.contents.setIn(e,E)}setSchema(e,E={}){typeof e=="number"&&(e=String(e));let s;switch(e){case"1.1":this.directives?this.directives.yaml.version="1.1":this.directives=new Te({version:"1.1"}),s={resolveKnownTags:!1,schema:"yaml-1.1"};break;case"1.2":case"next":this.directives?this.directives.yaml.version=e:this.directives=new Te({version:e}),s={resolveKnownTags:!0,schema:"core"};break;case null:this.directives&&delete this.directives,s=null;break;default:{const T=JSON.stringify(e);throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${T}`)}}if(E.schema instanceof Object)this.schema=E.schema;else if(s)this.schema=new gs(Object.assign(s,E));else throw new Error("With a null YAML version, the { schema: Schema } option is required")}toJS({json:e,jsonArg:E,mapAsMap:s,maxAliasCount:T,onAnchor:n,reviver:i}={}){const r={anchors:new Map,doc:this,keep:!e,mapAsMap:s===!0,mapKeyWarned:!1,maxAliasCount:typeof T=="number"?T:100},R=Se(this.contents,E!=null?E:"",r);if(typeof n=="function")for(const{count:_,res:o}of r.anchors.values())n(o,_);return typeof i=="function"?mt(i,{"":R},"",R):R}toJSON(e,E){return this.toJS({json:!0,jsonArg:e,mapAsMap:!1,onAnchor:E})}toString(e={}){if(this.errors.length>0)throw new Error("Document with errors cannot be stringified");if("indent"in e&&(!Number.isInteger(e.indent)||Number(e.indent)<=0)){const E=JSON.stringify(e.indent);throw new Error(`"indent" option must be a positive integer, not ${E}`)}return nL(this,e)}}function Ct(t){if(k(t))return!0;throw new Error("Expected a YAML collection as document contents")}class qn extends Error{constructor(e,E,s,T){super(),this.name=e,this.code=s,this.message=T,this.pos=E}}class Tt extends qn{constructor(e,E,s){super("YAMLParseError",e,E,s)}}class E_ extends qn{constructor(e,E,s){super("YAMLWarning",e,E,s)}}const Os=(t,e)=>E=>{if(E.pos[0]===-1)return;E.linePos=E.pos.map(r=>e.linePos(r));const{line:s,col:T}=E.linePos[0];E.message+=` at line ${s}, column ${T}`;let n=T-1,i=t.substring(e.lineStarts[s-1],e.lineStarts[s]).replace(/[\n\r]+$/,"");if(n>=60&&i.length>80){const r=Math.min(n-39,i.length-79);i="…"+i.substring(r),n-=r-1}if(i.length>80&&(i=i.substring(0,79)+"…"),s>1&&/^ *$/.test(i.substring(0,n))){let r=t.substring(e.lineStarts[s-2],e.lineStarts[s-1]);r.length>80&&(r=r.substring(0,79)+`…
`),i=r+i}if(/[^ ]/.test(i)){let r=1;const R=E.linePos[1];R&&R.line===s&&R.col>T&&(r=Math.max(1,Math.min(R.col-T,80-n)));const _=" ".repeat(n)+"^".repeat(r);E.message+=`:

${i}
${_}
`}};function vt(t,{flow:e,indicator:E,next:s,offset:T,onError:n,parentIndent:i,startOnNewline:r}){let R=!1,_=r,o=r,O="",I="",C=!1,h=!1,L=null,S=null,a=null,N=null,G=null,D=null,U=null;for(const l of t)switch(h&&(l.type!=="space"&&l.type!=="newline"&&l.type!=="comma"&&n(l.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space"),h=!1),L&&(_&&l.type!=="comment"&&l.type!=="newline"&&n(L,"TAB_AS_INDENT","Tabs are not allowed as indentation"),L=null),l.type){case"space":!e&&(E!=="doc-start"||(s==null?void 0:s.type)!=="flow-collection")&&l.source.includes("	")&&(L=l),o=!0;break;case"comment":{o||n(l,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const m=l.source.substring(1)||" ";O?O+=I+m:O=m,I="",_=!1;break}case"newline":_?O?O+=l.source:(!D||E!=="seq-item-ind")&&(R=!0):I+=l.source,_=!0,C=!0,(S||a)&&(N=l),o=!0;break;case"anchor":S&&n(l,"MULTIPLE_ANCHORS","A node can have at most one anchor"),l.source.endsWith(":")&&n(l.offset+l.source.length-1,"BAD_ALIAS","Anchor ending in : is ambiguous",!0),S=l,U!=null||(U=l.offset),_=!1,o=!1,h=!0;break;case"tag":{a&&n(l,"MULTIPLE_TAGS","A node can have at most one tag"),a=l,U!=null||(U=l.offset),_=!1,o=!1,h=!0;break}case E:(S||a)&&n(l,"BAD_PROP_ORDER",`Anchors and tags must be after the ${l.source} indicator`),D&&n(l,"UNEXPECTED_TOKEN",`Unexpected ${l.source} in ${e!=null?e:"collection"}`),D=l,_=E==="seq-item-ind"||E==="explicit-key-ind",o=!1;break;case"comma":if(e){G&&n(l,"UNEXPECTED_TOKEN",`Unexpected , in ${e}`),G=l,_=!1,o=!1;break}default:n(l,"UNEXPECTED_TOKEN",`Unexpected ${l.type} token`),_=!1,o=!1}const u=t[t.length-1],f=u?u.offset+u.source.length:T;return h&&s&&s.type!=="space"&&s.type!=="newline"&&s.type!=="comma"&&(s.type!=="scalar"||s.source!=="")&&n(s.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space"),L&&(_&&L.indent<=i||(s==null?void 0:s.type)==="block-map"||(s==null?void 0:s.type)==="block-seq")&&n(L,"TAB_AS_INDENT","Tabs are not allowed as indentation"),{comma:G,found:D,spaceBefore:R,comment:O,hasNewline:C,anchor:S,tag:a,newlineAfterProp:N,end:f,start:U!=null?U:f}}function OE(t){if(!t)return null;switch(t.type){case"alias":case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":if(t.source.includes(`
`))return!0;if(t.end){for(const e of t.end)if(e.type==="newline")return!0}return!1;case"flow-collection":for(const e of t.items){for(const E of e.start)if(E.type==="newline")return!0;if(e.sep){for(const E of e.sep)if(E.type==="newline")return!0}if(OE(e.key)||OE(e.value))return!0}return!1;default:return!0}}function ln(t,e,E){if((e==null?void 0:e.type)==="flow-collection"){const s=e.end[0];s.indent===t&&(s.source==="]"||s.source==="}")&&OE(e)&&E(s,"BAD_INDENT","Flow end indicator should be more indented than parent",!0)}}function s_(t,e,E){const{uniqueKeys:s}=t.options;if(s===!1)return!1;const T=typeof s=="function"?s:(n,i)=>n===i||X(n)&&X(i)&&n.value===i.value;return e.some(n=>T(n.key,E))}const Fr="All mapping items must start at the same column";function iL({composeNode:t,composeEmptyNode:e},E,s,T,n){var o,O;const i=(o=n==null?void 0:n.nodeClass)!=null?o:Re,r=new i(E.schema);E.atRoot&&(E.atRoot=!1);let R=s.offset,_=null;for(const I of s.items){const{start:C,key:h,sep:L,value:S}=I,a=vt(C,{indicator:"explicit-key-ind",next:h!=null?h:L==null?void 0:L[0],offset:R,onError:T,parentIndent:s.indent,startOnNewline:!0}),N=!a.found;if(N){if(h&&(h.type==="block-seq"?T(R,"BLOCK_AS_IMPLICIT_KEY","A block sequence may not be used as an implicit map key"):"indent"in h&&h.indent!==s.indent&&T(R,"BAD_INDENT",Fr)),!a.anchor&&!a.tag&&!L){_=a.end,a.comment&&(r.comment?r.comment+=`
`+a.comment:r.comment=a.comment);continue}(a.newlineAfterProp||OE(h))&&T(h!=null?h:C[C.length-1],"MULTILINE_IMPLICIT_KEY","Implicit keys need to be on a single line")}else((O=a.found)==null?void 0:O.indent)!==s.indent&&T(R,"BAD_INDENT",Fr);E.atKey=!0;const G=a.end,D=h?t(E,h,a,T):e(E,G,C,null,a,T);E.schema.compat&&ln(s.indent,h,T),E.atKey=!1,s_(E,r.items,D)&&T(G,"DUPLICATE_KEY","Map keys must be unique");const U=vt(L!=null?L:[],{indicator:"map-value-ind",next:S,offset:D.range[2],onError:T,parentIndent:s.indent,startOnNewline:!h||h.type==="block-scalar"});if(R=U.end,U.found){N&&((S==null?void 0:S.type)==="block-map"&&!U.hasNewline&&T(R,"BLOCK_AS_IMPLICIT_KEY","Nested mappings are not allowed in compact mappings"),E.options.strict&&a.start<U.found.offset-1024&&T(D.range,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit block mapping key"));const u=S?t(E,S,U,T):e(E,R,L,null,U,T);E.schema.compat&&ln(s.indent,S,T),R=u.range[2];const f=new se(D,u);E.options.keepSourceTokens&&(f.srcToken=I),r.items.push(f)}else{N&&T(D.range,"MISSING_CHAR","Implicit map keys need to be followed by map values"),U.comment&&(D.comment?D.comment+=`
`+U.comment:D.comment=U.comment);const u=new se(D);E.options.keepSourceTokens&&(u.srcToken=I),r.items.push(u)}}return _&&_<R&&T(_,"IMPOSSIBLE","Map comment with trailing content"),r.range=[s.offset,R,_!=null?_:R],r}function rL({composeNode:t,composeEmptyNode:e},E,s,T,n){var o;const i=(o=n==null?void 0:n.nodeClass)!=null?o:Je,r=new i(E.schema);E.atRoot&&(E.atRoot=!1),E.atKey&&(E.atKey=!1);let R=s.offset,_=null;for(const{start:O,value:I}of s.items){const C=vt(O,{indicator:"seq-item-ind",next:I,offset:R,onError:T,parentIndent:s.indent,startOnNewline:!0});if(!C.found)if(C.anchor||C.tag||I)I&&I.type==="block-seq"?T(C.end,"BAD_INDENT","All sequence items must start at the same column"):T(R,"MISSING_CHAR","Sequence item without - indicator");else{_=C.end,C.comment&&(r.comment=C.comment);continue}const h=I?t(E,I,C,T):e(E,C.end,O,null,C,T);E.schema.compat&&ln(s.indent,I,T),R=h.range[2],r.items.push(h)}return r.range=[s.offset,R,_!=null?_:R],r}function lE(t,e,E,s){let T="";if(t){let n=!1,i="";for(const r of t){const{source:R,type:_}=r;switch(_){case"space":n=!0;break;case"comment":{E&&!n&&s(r,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const o=R.substring(1)||" ";T?T+=i+o:T=o,i="";break}case"newline":T&&(i+=R),n=!0;break;default:s(r,"UNEXPECTED_TOKEN",`Unexpected ${_} at node end`)}e+=R.length}}return{comment:T,offset:e}}const HT="Block collections are not allowed within flow collections",bT=t=>t&&(t.type==="block-map"||t.type==="block-seq");function RL({composeNode:t,composeEmptyNode:e},E,s,T,n){var S,a;const i=s.start.source==="{",r=i?"flow map":"flow sequence",R=(S=n==null?void 0:n.nodeClass)!=null?S:i?Re:Je,_=new R(E.schema);_.flow=!0;const o=E.atRoot;o&&(E.atRoot=!1),E.atKey&&(E.atKey=!1);let O=s.offset+s.start.source.length;for(let N=0;N<s.items.length;++N){const G=s.items[N],{start:D,key:U,sep:u,value:f}=G,l=vt(D,{flow:r,indicator:"explicit-key-ind",next:U!=null?U:u==null?void 0:u[0],offset:O,onError:T,parentIndent:s.indent,startOnNewline:!1});if(!l.found){if(!l.anchor&&!l.tag&&!u&&!f){N===0&&l.comma?T(l.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${r}`):N<s.items.length-1&&T(l.start,"UNEXPECTED_TOKEN",`Unexpected empty item in ${r}`),l.comment&&(_.comment?_.comment+=`
`+l.comment:_.comment=l.comment),O=l.end;continue}!i&&E.options.strict&&OE(U)&&T(U,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line")}if(N===0)l.comma&&T(l.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${r}`);else if(l.comma||T(l.start,"MISSING_CHAR",`Missing , between ${r} items`),l.comment){let m="";e:for(const A of D)switch(A.type){case"comma":case"space":break;case"comment":m=A.source.substring(1);break e;default:break e}if(m){let A=_.items[_.items.length-1];x(A)&&(A=(a=A.value)!=null?a:A.key),A.comment?A.comment+=`
`+m:A.comment=m,l.comment=l.comment.substring(m.length+1)}}if(!i&&!u&&!l.found){const m=f?t(E,f,l,T):e(E,l.end,u,null,l,T);_.items.push(m),O=m.range[2],bT(f)&&T(m.range,"BLOCK_IN_FLOW",HT)}else{E.atKey=!0;const m=l.end,A=U?t(E,U,l,T):e(E,m,D,null,l,T);bT(U)&&T(A.range,"BLOCK_IN_FLOW",HT),E.atKey=!1;const p=vt(u!=null?u:[],{flow:r,indicator:"map-value-ind",next:f,offset:A.range[2],onError:T,parentIndent:s.indent,startOnNewline:!1});if(p.found){if(!i&&!l.found&&E.options.strict){if(u)for(const H of u){if(H===p.found)break;if(H.type==="newline"){T(H,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line");break}}l.start<p.found.offset-1024&&T(p.found,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit flow sequence key")}}else f&&("source"in f&&f.source&&f.source[0]===":"?T(f,"MISSING_CHAR",`Missing space after : in ${r}`):T(p.start,"MISSING_CHAR",`Missing , or : between ${r} items`));const P=f?t(E,f,p,T):p.found?e(E,p.end,u,null,p,T):null;P?bT(f)&&T(P.range,"BLOCK_IN_FLOW",HT):p.comment&&(A.comment?A.comment+=`
`+p.comment:A.comment=p.comment);const F=new se(A,P);if(E.options.keepSourceTokens&&(F.srcToken=G),i){const H=_;s_(E,H.items,A)&&T(m,"DUPLICATE_KEY","Map keys must be unique"),H.items.push(F)}else{const H=new Re(E.schema);H.flow=!0,H.items.push(F);const K=(P!=null?P:A).range;H.range=[A.range[0],K[1],K[2]],_.items.push(H)}O=P?P.range[2]:p.end}}const I=i?"}":"]",[C,...h]=s.end;let L=O;if(C&&C.source===I)L=C.offset+C.source.length;else{const N=r[0].toUpperCase()+r.substring(1),G=o?`${N} must end with a ${I}`:`${N} in block collection must be sufficiently indented and end with a ${I}`;T(O,o?"MISSING_CHAR":"BAD_INDENT",G),C&&C.source.length!==1&&h.unshift(C)}if(h.length>0){const N=lE(h,L,E.options.strict,T);N.comment&&(_.comment?_.comment+=`
`+N.comment:_.comment=N.comment),_.range=[s.offset,L,N.offset]}else _.range=[s.offset,L,L];return _}function FT(t,e,E,s,T,n){const i=E.type==="block-map"?iL(t,e,E,s,n):E.type==="block-seq"?rL(t,e,E,s,n):RL(t,e,E,s,n),r=i.constructor;return T==="!"||T===r.tagName?(i.tag=r.tagName,i):(T&&(i.tag=T),i)}function AL(t,e,E,s,T){var I,C,h;const n=s.tag,i=n?e.directives.tagName(n.source,L=>T(n,"TAG_RESOLVE_FAILED",L)):null;if(E.type==="block-seq"){const{anchor:L,newlineAfterProp:S}=s,a=L&&n?L.offset>n.offset?L:n:L!=null?L:n;a&&(!S||S.offset<a.offset)&&T(a,"MISSING_CHAR","Missing newline after block sequence props")}const r=E.type==="block-map"?"map":E.type==="block-seq"?"seq":E.start.source==="{"?"map":"seq";if(!n||!i||i==="!"||i===Re.tagName&&r==="map"||i===Je.tagName&&r==="seq")return FT(t,e,E,T,i);let R=e.schema.tags.find(L=>L.tag===i&&L.collection===r);if(!R){const L=e.schema.knownTags[i];if(L&&L.collection===r)e.schema.tags.push(Object.assign({},L,{default:!1})),R=L;else return L?T(n,"BAD_COLLECTION_TYPE",`${L.tag} used for ${r} collection, but expects ${(I=L.collection)!=null?I:"scalar"}`,!0):T(n,"TAG_RESOLVE_FAILED",`Unresolved tag: ${i}`,!0),FT(t,e,E,T,i)}const _=FT(t,e,E,T,i,R),o=(h=(C=R.resolve)==null?void 0:C.call(R,_,L=>T(n,"TAG_RESOLVE_FAILED",L),e.options))!=null?h:_,O=J(o)?o:new w(o);return O.range=_.range,O.tag=i,R!=null&&R.format&&(O.format=R.format),O}function T_(t,e,E){const s=e.offset,T=_L(e,t.options.strict,E);if(!T)return{value:"",type:null,comment:"",range:[s,s,s]};const n=T.mode===">"?w.BLOCK_FOLDED:w.BLOCK_LITERAL,i=e.source?aL(e.source):[];let r=i.length;for(let L=i.length-1;L>=0;--L){const S=i[L][1];if(S===""||S==="\r")r=L;else break}if(r===0){const L=T.chomp==="+"&&i.length>0?`
`.repeat(Math.max(1,i.length-1)):"";let S=s+T.length;return e.source&&(S+=e.source.length),{value:L,type:n,comment:T.comment,range:[s,S,S]}}let R=e.indent+T.indent,_=e.offset+T.length,o=0;for(let L=0;L<r;++L){const[S,a]=i[L];if(a===""||a==="\r")T.indent===0&&S.length>R&&(R=S.length);else{S.length<R&&E(_+S.length,"MISSING_CHAR","Block scalars with more-indented leading empty lines must use an explicit indentation indicator"),T.indent===0&&(R=S.length),o=L,R===0&&!t.atRoot&&E(_,"BAD_INDENT","Block scalar values in collections must be indented");break}_+=S.length+a.length+1}for(let L=i.length-1;L>=r;--L)i[L][0].length>R&&(r=L+1);let O="",I="",C=!1;for(let L=0;L<o;++L)O+=i[L][0].slice(R)+`
`;for(let L=o;L<r;++L){let[S,a]=i[L];_+=S.length+a.length+1;const N=a[a.length-1]==="\r";if(N&&(a=a.slice(0,-1)),a&&S.length<R){const D=`Block scalar lines must not be less indented than their ${T.indent?"explicit indentation indicator":"first line"}`;E(_-a.length-(N?2:1),"BAD_INDENT",D),S=""}n===w.BLOCK_LITERAL?(O+=I+S.slice(R)+a,I=`
`):S.length>R||a[0]==="	"?(I===" "?I=`
`:!C&&I===`
`&&(I=`

`),O+=I+S.slice(R)+a,I=`
`,C=!0):a===""?I===`
`?O+=`
`:I=`
`:(O+=I+a,I=" ",C=!1)}switch(T.chomp){case"-":break;case"+":for(let L=r;L<i.length;++L)O+=`
`+i[L][0].slice(R);O[O.length-1]!==`
`&&(O+=`
`);break;default:O+=`
`}const h=s+T.length+e.source.length;return{value:O,type:n,comment:T.comment,range:[s,h,h]}}function _L({offset:t,props:e},E,s){if(e[0].type!=="block-scalar-header")return s(e[0],"IMPOSSIBLE","Block scalar header not found"),null;const{source:T}=e[0],n=T[0];let i=0,r="",R=-1;for(let I=1;I<T.length;++I){const C=T[I];if(!r&&(C==="-"||C==="+"))r=C;else{const h=Number(C);!i&&h?i=h:R===-1&&(R=t+I)}}R!==-1&&s(R,"UNEXPECTED_TOKEN",`Block scalar header includes extra characters: ${T}`);let _=!1,o="",O=T.length;for(let I=1;I<e.length;++I){const C=e[I];switch(C.type){case"space":_=!0;case"newline":O+=C.source.length;break;case"comment":E&&!_&&s(C,"MISSING_CHAR","Comments must be separated from other tokens by white space characters"),O+=C.source.length,o=C.source.substring(1);break;case"error":s(C,"UNEXPECTED_TOKEN",C.message),O+=C.source.length;break;default:{const h=`Unexpected token in block scalar header: ${C.type}`;s(C,"UNEXPECTED_TOKEN",h);const L=C.source;L&&typeof L=="string"&&(O+=L.length)}}}return{mode:n,indent:i,chomp:r,comment:o,length:O}}function aL(t){const e=t.split(/\n( *)/),E=e[0],s=E.match(/^( *)/),n=[s!=null&&s[1]?[s[1],E.slice(s[1].length)]:["",E]];for(let i=1;i<e.length;i+=2)n.push([e[i],e[i+1]]);return n}function n_(t,e,E){const{offset:s,type:T,source:n,end:i}=t;let r,R;const _=(I,C,h)=>E(s+I,C,h);switch(T){case"scalar":r=w.PLAIN,R=SL(n,_);break;case"single-quoted-scalar":r=w.QUOTE_SINGLE,R=OL(n,_);break;case"double-quoted-scalar":r=w.QUOTE_DOUBLE,R=oL(n,_);break;default:return E(t,"UNEXPECTED_TOKEN",`Expected a flow scalar value, but found: ${T}`),{value:"",type:null,comment:"",range:[s,s+n.length,s+n.length]}}const o=s+n.length,O=lE(i,o,e,E);return{value:R,type:r,comment:O.comment,range:[s,o,O.offset]}}function SL(t,e){let E="";switch(t[0]){case"	":E="a tab character";break;case",":E="flow indicator character ,";break;case"%":E="directive indicator character %";break;case"|":case">":{E=`block scalar indicator ${t[0]}`;break}case"@":case"`":{E=`reserved character ${t[0]}`;break}}return E&&e(0,"BAD_SCALAR_START",`Plain value cannot start with ${E}`),i_(t)}function OL(t,e){return(t[t.length-1]!=="'"||t.length===1)&&e(t.length,"MISSING_CHAR","Missing closing 'quote"),i_(t.slice(1,-1)).replace(/''/g,"'")}function i_(t){var R;let e,E;try{e=new RegExp(`(.*?)(?<![ 	])[ 	]*\r?
`,"sy"),E=new RegExp(`[ 	]*(.*?)(?:(?<![ 	])[ 	]*)?\r?
`,"sy")}catch{e=/(.*?)[ \t]*\r?\n/sy,E=/[ \t]*(.*?)[ \t]*\r?\n/sy}let s=e.exec(t);if(!s)return t;let T=s[1],n=" ",i=e.lastIndex;for(E.lastIndex=i;s=E.exec(t);)s[1]===""?n===`
`?T+=n:n=`
`:(T+=n+s[1],n=" "),i=E.lastIndex;const r=/[ \t]*(.*)/sy;return r.lastIndex=i,s=r.exec(t),T+n+((R=s==null?void 0:s[1])!=null?R:"")}function oL(t,e){let E="";for(let s=1;s<t.length-1;++s){const T=t[s];if(!(T==="\r"&&t[s+1]===`
`))if(T===`
`){const{fold:n,offset:i}=IL(t,s);E+=n,s=i}else if(T==="\\"){let n=t[++s];const i=NL[n];if(i)E+=i;else if(n===`
`)for(n=t[s+1];n===" "||n==="	";)n=t[++s+1];else if(n==="\r"&&t[s+1]===`
`)for(n=t[++s+1];n===" "||n==="	";)n=t[++s+1];else if(n==="x"||n==="u"||n==="U"){const r={x:2,u:4,U:8}[n];E+=lL(t,s+1,r,e),s+=r}else{const r=t.substr(s-1,2);e(s-1,"BAD_DQ_ESCAPE",`Invalid escape sequence ${r}`),E+=r}}else if(T===" "||T==="	"){const n=s;let i=t[s+1];for(;i===" "||i==="	";)i=t[++s+1];i!==`
`&&!(i==="\r"&&t[s+2]===`
`)&&(E+=s>n?t.slice(n,s+1):T)}else E+=T}return(t[t.length-1]!=='"'||t.length===1)&&e(t.length,"MISSING_CHAR",'Missing closing "quote'),E}function IL(t,e){let E="",s=t[e+1];for(;(s===" "||s==="	"||s===`
`||s==="\r")&&!(s==="\r"&&t[e+2]!==`
`);)s===`
`&&(E+=`
`),e+=1,s=t[e+1];return E||(E=" "),{fold:E,offset:e}}const NL={0:"\0",a:"\x07",b:"\b",e:"\x1B",f:"\f",n:`
`,r:"\r",t:"	",v:"\v",N:"",_:" ",L:"\u2028",P:"\u2029"," ":" ",'"':'"',"/":"/","\\":"\\","	":"	"};function lL(t,e,E,s){const T=t.substr(e,E),i=T.length===E&&/^[0-9a-fA-F]+$/.test(T)?parseInt(T,16):NaN;if(isNaN(i)){const r=t.substr(e-2,E+2);return s(e-2,"BAD_DQ_ESCAPE",`Invalid escape sequence ${r}`),r}return String.fromCodePoint(i)}function r_(t,e,E,s){const{value:T,type:n,comment:i,range:r}=e.type==="block-scalar"?T_(t,e,s):n_(e,t.options.strict,s),R=E?t.directives.tagName(E.source,O=>s(E,"TAG_RESOLVE_FAILED",O)):null;let _;t.options.stringKeys&&t.atKey?_=t.schema[de]:R?_=LL(t.schema,T,R,E,s):e.type==="scalar"?_=uL(t,T,e,s):_=t.schema[de];let o;try{const O=_.resolve(T,I=>s(E!=null?E:e,"TAG_RESOLVE_FAILED",I),t.options);o=X(O)?O:new w(O)}catch(O){const I=O instanceof Error?O.message:String(O);s(E!=null?E:e,"TAG_RESOLVE_FAILED",I),o=new w(T)}return o.range=r,o.source=T,n&&(o.type=n),R&&(o.tag=R),_.format&&(o.format=_.format),i&&(o.comment=i),o}function LL(t,e,E,s,T){var r;if(E==="!")return t[de];const n=[];for(const R of t.tags)if(!R.collection&&R.tag===E)if(R.default&&R.test)n.push(R);else return R;for(const R of n)if((r=R.test)!=null&&r.test(e))return R;const i=t.knownTags[E];return i&&!i.collection?(t.tags.push(Object.assign({},i,{default:!1,test:void 0})),i):(T(s,"TAG_RESOLVE_FAILED",`Unresolved tag: ${E}`,E!=="tag:yaml.org,2002:str"),t[de])}function uL({atKey:t,directives:e,schema:E},s,T,n){var r;const i=E.tags.find(R=>{var _;return(R.default===!0||t&&R.default==="key")&&((_=R.test)==null?void 0:_.test(s))})||E[de];if(E.compat){const R=(r=E.compat.find(_=>{var o;return _.default&&((o=_.test)==null?void 0:o.test(s))}))!=null?r:E[de];if(i.tag!==R.tag){const _=e.tagString(i.tag),o=e.tagString(R.tag),O=`Value may be parsed as either ${_} or ${o}`;n(T,"TAG_RESOLVE_FAILED",O,!0)}}return i}function CL(t,e,E){if(e){E!=null||(E=e.length);for(let s=E-1;s>=0;--s){let T=e[s];switch(T.type){case"space":case"comment":case"newline":t-=T.source.length;continue}for(T=e[++s];(T==null?void 0:T.type)==="space";)t+=T.source.length,T=e[++s];break}}return t}const cL={composeNode:R_,composeEmptyNode:jn};function R_(t,e,E,s){const T=t.atKey,{spaceBefore:n,comment:i,anchor:r,tag:R}=E;let _,o=!0;switch(e.type){case"alias":_=fL(t,e,s),(r||R)&&s(e,"ALIAS_PROPS","An alias node must not specify any properties");break;case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"block-scalar":_=r_(t,e,R,s),r&&(_.anchor=r.source.substring(1));break;case"block-map":case"block-seq":case"flow-collection":_=AL(cL,t,e,E,s),r&&(_.anchor=r.source.substring(1));break;default:{const O=e.type==="error"?e.message:`Unsupported token (type: ${e.type})`;s(e,"UNEXPECTED_TOKEN",O),_=jn(t,e.offset,void 0,null,E,s),o=!1}}return r&&_.anchor===""&&s(r,"BAD_ALIAS","Anchor cannot be an empty string"),T&&t.options.stringKeys&&(!X(_)||typeof _.value!="string"||_.tag&&_.tag!=="tag:yaml.org,2002:str")&&s(R!=null?R:e,"NON_STRING_KEY","With stringKeys, all keys must be strings"),n&&(_.spaceBefore=!0),i&&(e.type==="scalar"&&e.source===""?_.comment=i:_.commentBefore=i),t.options.keepSourceTokens&&o&&(_.srcToken=e),_}function jn(t,e,E,s,{spaceBefore:T,comment:n,anchor:i,tag:r,end:R},_){const o={type:"scalar",offset:CL(e,E,s),indent:-1,source:""},O=r_(t,o,r,_);return i&&(O.anchor=i.source.substring(1),O.anchor===""&&_(i,"BAD_ALIAS","Anchor cannot be an empty string")),T&&(O.spaceBefore=!0),n&&(O.comment=n,O.range[2]=R),O}function fL({options:t},{offset:e,source:E,end:s},T){const n=new ps(E.substring(1));n.source===""&&T(e,"BAD_ALIAS","Alias cannot be an empty string"),n.source.endsWith(":")&&T(e+E.length-1,"BAD_ALIAS","Alias ending in : is ambiguous",!0);const i=e+E.length,r=lE(s,i,t.strict,T);return n.range=[e,i,r.offset],r.comment&&(n.comment=r.comment),n}function hL(t,e,{offset:E,start:s,value:T,end:n},i){const r=Object.assign({_directives:e},t),R=new qt(void 0,r),_={atKey:!1,atRoot:!0,directives:R.directives,options:R.options,schema:R.schema},o=vt(s,{indicator:"doc-start",next:T!=null?T:n==null?void 0:n[0],offset:E,onError:i,parentIndent:0,startOnNewline:!0});o.found&&(R.directives.docStart=!0,T&&(T.type==="block-map"||T.type==="block-seq")&&!o.hasNewline&&i(o.end,"MISSING_CHAR","Block collection cannot start on same line with directives-end marker")),R.contents=T?R_(_,T,o,i):jn(_,o.end,s,null,o,i);const O=R.contents.range[2],I=lE(n,O,!1,i);return I.comment&&(R.comment=I.comment),R.range=[E,O,I.offset],R}function tE(t){if(typeof t=="number")return[t,t+1];if(Array.isArray(t))return t.length===2?t:[t[0],t[1]];const{offset:e,source:E}=t;return[e,e+(typeof E=="string"?E.length:1)]}function Yr(t){var T;let e="",E=!1,s=!1;for(let n=0;n<t.length;++n){const i=t[n];switch(i[0]){case"#":e+=(e===""?"":s?`

`:`
`)+(i.substring(1)||" "),E=!0,s=!1;break;case"%":((T=t[n+1])==null?void 0:T[0])!=="#"&&(n+=1),E=!1;break;default:E||(s=!0),E=!1}}return{comment:e,afterEmptyLine:s}}class Zn{constructor(e={}){this.doc=null,this.atDirectives=!1,this.prelude=[],this.errors=[],this.warnings=[],this.onError=(E,s,T,n)=>{const i=tE(E);n?this.warnings.push(new E_(i,s,T)):this.errors.push(new Tt(i,s,T))},this.directives=new Te({version:e.version||"1.2"}),this.options=e}decorate(e,E){const{comment:s,afterEmptyLine:T}=Yr(this.prelude);if(s){const n=e.contents;if(E)e.comment=e.comment?`${e.comment}
${s}`:s;else if(T||e.directives.docStart||!n)e.commentBefore=s;else if(k(n)&&!n.flow&&n.items.length>0){let i=n.items[0];x(i)&&(i=i.key);const r=i.commentBefore;i.commentBefore=r?`${s}
${r}`:s}else{const i=n.commentBefore;n.commentBefore=i?`${s}
${i}`:s}}E?(Array.prototype.push.apply(e.errors,this.errors),Array.prototype.push.apply(e.warnings,this.warnings)):(e.errors=this.errors,e.warnings=this.warnings),this.prelude=[],this.errors=[],this.warnings=[]}streamInfo(){return{comment:Yr(this.prelude).comment,directives:this.directives,errors:this.errors,warnings:this.warnings}}*compose(e,E=!1,s=-1){for(const T of e)yield*this.next(T);yield*this.end(E,s)}*next(e){switch(e.type){case"directive":this.directives.add(e.source,(E,s,T)=>{const n=tE(e);n[0]+=E,this.onError(n,"BAD_DIRECTIVE",s,T)}),this.prelude.push(e.source),this.atDirectives=!0;break;case"document":{const E=hL(this.options,this.directives,e,this.onError);this.atDirectives&&!E.directives.docStart&&this.onError(e,"MISSING_CHAR","Missing directives-end/doc-start indicator line"),this.decorate(E,!1),this.doc&&(yield this.doc),this.doc=E,this.atDirectives=!1;break}case"byte-order-mark":case"space":break;case"comment":case"newline":this.prelude.push(e.source);break;case"error":{const E=e.source?`${e.message}: ${JSON.stringify(e.source)}`:e.message,s=new Tt(tE(e),"UNEXPECTED_TOKEN",E);this.atDirectives||!this.doc?this.errors.push(s):this.doc.errors.push(s);break}case"doc-end":{if(!this.doc){const s="Unexpected doc-end without preceding document";this.errors.push(new Tt(tE(e),"UNEXPECTED_TOKEN",s));break}this.doc.directives.docEnd=!0;const E=lE(e.end,e.offset+e.source.length,this.doc.options.strict,this.onError);if(this.decorate(this.doc,!0),E.comment){const s=this.doc.comment;this.doc.comment=s?`${s}
${E.comment}`:E.comment}this.doc.range[2]=E.offset;break}default:this.errors.push(new Tt(tE(e),"UNEXPECTED_TOKEN",`Unsupported token ${e.type}`))}}*end(e=!1,E=-1){if(this.doc)this.decorate(this.doc,!0),yield this.doc,this.doc=null;else if(e){const s=Object.assign({_directives:this.directives},this.options),T=new qt(void 0,s);this.atDirectives&&this.onError(E,"MISSING_CHAR","Missing directives-end indicator line"),T.range=[0,E,E],this.decorate(T,!1),yield T}}}function pL(t,e=!0,E){if(t){const s=(T,n,i)=>{const r=typeof T=="number"?T:Array.isArray(T)?T[0]:T.offset;if(E)E(r,n,i);else throw new Tt([r,r+1],n,i)};switch(t.type){case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return n_(t,e,s);case"block-scalar":return T_({options:{strict:e}},t,s)}}return null}function DL(t,e){var _;const{implicitKey:E=!1,indent:s,inFlow:T=!1,offset:n=-1,type:i="PLAIN"}=e,r=IE({type:i,value:t},{implicitKey:E,indent:s>0?" ".repeat(s):"",inFlow:T,options:{blockQuote:!0,lineWidth:-1}}),R=(_=e.end)!=null?_:[{type:"newline",offset:-1,indent:s,source:`
`}];switch(r[0]){case"|":case">":{const o=r.indexOf(`
`),O=r.substring(0,o),I=r.substring(o+1)+`
`,C=[{type:"block-scalar-header",offset:n,indent:s,source:O}];return A_(C,R)||C.push({type:"newline",offset:-1,indent:s,source:`
`}),{type:"block-scalar",offset:n,indent:s,props:C,source:I}}case'"':return{type:"double-quoted-scalar",offset:n,indent:s,source:r,end:R};case"'":return{type:"single-quoted-scalar",offset:n,indent:s,source:r,end:R};default:return{type:"scalar",offset:n,indent:s,source:r,end:R}}}function PL(t,e,E={}){let{afterKey:s=!1,implicitKey:T=!1,inFlow:n=!1,type:i}=E,r="indent"in t?t.indent:null;if(s&&typeof r=="number"&&(r+=2),!i)switch(t.type){case"single-quoted-scalar":i="QUOTE_SINGLE";break;case"double-quoted-scalar":i="QUOTE_DOUBLE";break;case"block-scalar":{const _=t.props[0];if(_.type!=="block-scalar-header")throw new Error("Invalid block scalar header");i=_.source[0]===">"?"BLOCK_FOLDED":"BLOCK_LITERAL";break}default:i="PLAIN"}const R=IE({type:i,value:e},{implicitKey:T||r===null,indent:r!==null&&r>0?" ".repeat(r):"",inFlow:n,options:{blockQuote:!0,lineWidth:-1}});switch(R[0]){case"|":case">":dL(t,R);break;case'"':YT(t,R,"double-quoted-scalar");break;case"'":YT(t,R,"single-quoted-scalar");break;default:YT(t,R,"scalar")}}function dL(t,e){const E=e.indexOf(`
`),s=e.substring(0,E),T=e.substring(E+1)+`
`;if(t.type==="block-scalar"){const n=t.props[0];if(n.type!=="block-scalar-header")throw new Error("Invalid block scalar header");n.source=s,t.source=T}else{const{offset:n}=t,i="indent"in t?t.indent:-1,r=[{type:"block-scalar-header",offset:n,indent:i,source:s}];A_(r,"end"in t?t.end:void 0)||r.push({type:"newline",offset:-1,indent:i,source:`
`});for(const R of Object.keys(t))R!=="type"&&R!=="offset"&&delete t[R];Object.assign(t,{type:"block-scalar",indent:i,props:r,source:T})}}function A_(t,e){if(e)for(const E of e)switch(E.type){case"space":case"comment":t.push(E);break;case"newline":return t.push(E),!0}return!1}function YT(t,e,E){switch(t.type){case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":t.type=E,t.source=e;break;case"block-scalar":{const s=t.props.slice(1);let T=e.length;t.props[0].type==="block-scalar-header"&&(T-=t.props[0].source.length);for(const n of s)n.offset+=T;delete t.props,Object.assign(t,{type:E,source:e,end:s});break}case"block-map":case"block-seq":{const T={type:"newline",offset:t.offset+e.length,indent:t.indent,source:`
`};delete t.items,Object.assign(t,{type:E,source:e,end:[T]});break}default:{const s="indent"in t?t.indent:-1,T="end"in t&&Array.isArray(t.end)?t.end.filter(n=>n.type==="space"||n.type==="comment"||n.type==="newline"):[];for(const n of Object.keys(t))n!=="type"&&n!=="offset"&&delete t[n];Object.assign(t,{type:E,indent:s,source:e,end:T})}}}const ML=t=>"type"in t?os(t):kE(t);function os(t){switch(t.type){case"block-scalar":{let e="";for(const E of t.props)e+=os(E);return e+t.source}case"block-map":case"block-seq":{let e="";for(const E of t.items)e+=kE(E);return e}case"flow-collection":{let e=t.start.source;for(const E of t.items)e+=kE(E);for(const E of t.end)e+=E.source;return e}case"document":{let e=kE(t);if(t.end)for(const E of t.end)e+=E.source;return e}default:{let e=t.source;if("end"in t&&t.end)for(const E of t.end)e+=E.source;return e}}}function kE({start:t,key:e,sep:E,value:s}){let T="";for(const n of t)T+=n.source;if(e&&(T+=os(e)),E)for(const n of E)T+=n.source;return s&&(T+=os(s)),T}const Ln=Symbol("break visit"),UL=Symbol("skip children"),__=Symbol("remove item");function Rt(t,e){"type"in t&&t.type==="document"&&(t={start:t.start,value:t.value}),a_(Object.freeze([]),t,e)}Rt.BREAK=Ln;Rt.SKIP=UL;Rt.REMOVE=__;Rt.itemAtPath=(t,e)=>{let E=t;for(const[s,T]of e){const n=E==null?void 0:E[s];if(n&&"items"in n)E=n.items[T];else return}return E};Rt.parentCollection=(t,e)=>{const E=Rt.itemAtPath(t,e.slice(0,-1)),s=e[e.length-1][0],T=E==null?void 0:E[s];if(T&&"items"in T)return T;throw new Error("Parent collection not found")};function a_(t,e,E){let s=E(e,t);if(typeof s=="symbol")return s;for(const T of["key","value"]){const n=e[T];if(n&&"items"in n){for(let i=0;i<n.items.length;++i){const r=a_(Object.freeze(t.concat([[T,i]])),n.items[i],E);if(typeof r=="number")i=r-1;else{if(r===Ln)return Ln;r===__&&(n.items.splice(i,1),i-=1)}}typeof s=="function"&&T==="key"&&(s=s(e,t))}}return typeof s=="function"?s(e,t):s}const Bs="\uFEFF",Hs="",bs="",oE="",mL=t=>!!t&&"items"in t,GL=t=>!!t&&(t.type==="scalar"||t.type==="single-quoted-scalar"||t.type==="double-quoted-scalar"||t.type==="block-scalar");function yL(t){switch(t){case Bs:return"<BOM>";case Hs:return"<DOC>";case bs:return"<FLOW_END>";case oE:return"<SCALAR>";default:return JSON.stringify(t)}}function S_(t){switch(t){case Bs:return"byte-order-mark";case Hs:return"doc-mode";case bs:return"flow-error-end";case oE:return"scalar";case"---":return"doc-start";case"...":return"doc-end";case"":case`
`:case`\r
`:return"newline";case"-":return"seq-item-ind";case"?":return"explicit-key-ind";case":":return"map-value-ind";case"{":return"flow-map-start";case"}":return"flow-map-end";case"[":return"flow-seq-start";case"]":return"flow-seq-end";case",":return"comma"}switch(t[0]){case" ":case"	":return"space";case"#":return"comment";case"%":return"directive-line";case"*":return"alias";case"&":return"anchor";case"!":return"tag";case"'":return"single-quoted-scalar";case'"':return"double-quoted-scalar";case"|":case">":return"block-scalar-header"}return null}const gL=Object.freeze(Object.defineProperty({__proto__:null,BOM:Bs,DOCUMENT:Hs,FLOW_END:bs,SCALAR:oE,createScalarToken:DL,isCollection:mL,isScalar:GL,prettyToken:yL,resolveAsScalar:pL,setScalarValue:PL,stringify:ML,tokenType:S_,visit:Rt},Symbol.toStringTag,{value:"Module"}));function Ie(t){switch(t){case void 0:case" ":case`
`:case"\r":case"	":return!0;default:return!1}}const wr=new Set("0123456789ABCDEFabcdef"),BL=new Set("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()"),gE=new Set(",[]{}"),HL=new Set(` ,[]{}
\r	`),wT=t=>!t||HL.has(t);class O_{constructor(){this.atEnd=!1,this.blockScalarIndent=-1,this.blockScalarKeep=!1,this.buffer="",this.flowKey=!1,this.flowLevel=0,this.indentNext=0,this.indentValue=0,this.lineEndPos=null,this.next=null,this.pos=0}*lex(e,E=!1){var T;if(e){if(typeof e!="string")throw TypeError("source is not a string");this.buffer=this.buffer?this.buffer+e:e,this.lineEndPos=null}this.atEnd=!E;let s=(T=this.next)!=null?T:"stream";for(;s&&(E||this.hasChars(1));)s=yield*this.parseNext(s)}atLineEnd(){let e=this.pos,E=this.buffer[e];for(;E===" "||E==="	";)E=this.buffer[++e];return!E||E==="#"||E===`
`?!0:E==="\r"?this.buffer[e+1]===`
`:!1}charAt(e){return this.buffer[this.pos+e]}continueScalar(e){let E=this.buffer[e];if(this.indentNext>0){let s=0;for(;E===" ";)E=this.buffer[++s+e];if(E==="\r"){const T=this.buffer[s+e+1];if(T===`
`||!T&&!this.atEnd)return e+s+1}return E===`
`||s>=this.indentNext||!E&&!this.atEnd?e+s:-1}if(E==="-"||E==="."){const s=this.buffer.substr(e,3);if((s==="---"||s==="...")&&Ie(this.buffer[e+3]))return-1}return e}getLine(){let e=this.lineEndPos;return(typeof e!="number"||e!==-1&&e<this.pos)&&(e=this.buffer.indexOf(`
`,this.pos),this.lineEndPos=e),e===-1?this.atEnd?this.buffer.substring(this.pos):null:(this.buffer[e-1]==="\r"&&(e-=1),this.buffer.substring(this.pos,e))}hasChars(e){return this.pos+e<=this.buffer.length}setNext(e){return this.buffer=this.buffer.substring(this.pos),this.pos=0,this.lineEndPos=null,this.next=e,null}peek(e){return this.buffer.substr(this.pos,e)}*parseNext(e){switch(e){case"stream":return yield*this.parseStream();case"line-start":return yield*this.parseLineStart();case"block-start":return yield*this.parseBlockStart();case"doc":return yield*this.parseDocument();case"flow":return yield*this.parseFlowCollection();case"quoted-scalar":return yield*this.parseQuotedScalar();case"block-scalar":return yield*this.parseBlockScalar();case"plain-scalar":return yield*this.parsePlainScalar()}}*parseStream(){let e=this.getLine();if(e===null)return this.setNext("stream");if(e[0]===Bs&&(yield*this.pushCount(1),e=e.substring(1)),e[0]==="%"){let E=e.length,s=e.indexOf("#");for(;s!==-1;){const n=e[s-1];if(n===" "||n==="	"){E=s-1;break}else s=e.indexOf("#",s+1)}for(;;){const n=e[E-1];if(n===" "||n==="	")E-=1;else break}const T=(yield*this.pushCount(E))+(yield*this.pushSpaces(!0));return yield*this.pushCount(e.length-T),this.pushNewline(),"stream"}if(this.atLineEnd()){const E=yield*this.pushSpaces(!0);return yield*this.pushCount(e.length-E),yield*this.pushNewline(),"stream"}return yield Hs,yield*this.parseLineStart()}*parseLineStart(){const e=this.charAt(0);if(!e&&!this.atEnd)return this.setNext("line-start");if(e==="-"||e==="."){if(!this.atEnd&&!this.hasChars(4))return this.setNext("line-start");const E=this.peek(3);if((E==="---"||E==="...")&&Ie(this.charAt(3)))return yield*this.pushCount(3),this.indentValue=0,this.indentNext=0,E==="---"?"doc":"stream"}return this.indentValue=yield*this.pushSpaces(!1),this.indentNext>this.indentValue&&!Ie(this.charAt(1))&&(this.indentNext=this.indentValue),yield*this.parseBlockStart()}*parseBlockStart(){const[e,E]=this.peek(2);if(!E&&!this.atEnd)return this.setNext("block-start");if((e==="-"||e==="?"||e===":")&&Ie(E)){const s=(yield*this.pushCount(1))+(yield*this.pushSpaces(!0));return this.indentNext=this.indentValue+1,this.indentValue+=s,yield*this.parseBlockStart()}return"doc"}*parseDocument(){yield*this.pushSpaces(!0);const e=this.getLine();if(e===null)return this.setNext("doc");let E=yield*this.pushIndicators();switch(e[E]){case"#":yield*this.pushCount(e.length-E);case void 0:return yield*this.pushNewline(),yield*this.parseLineStart();case"{":case"[":return yield*this.pushCount(1),this.flowKey=!1,this.flowLevel=1,"flow";case"}":case"]":return yield*this.pushCount(1),"doc";case"*":return yield*this.pushUntil(wT),"doc";case'"':case"'":return yield*this.parseQuotedScalar();case"|":case">":return E+=yield*this.parseBlockScalarHeader(),E+=yield*this.pushSpaces(!0),yield*this.pushCount(e.length-E),yield*this.pushNewline(),yield*this.parseBlockScalar();default:return yield*this.parsePlainScalar()}}*parseFlowCollection(){let e,E,s=-1;do e=yield*this.pushNewline(),e>0?(E=yield*this.pushSpaces(!1),this.indentValue=s=E):E=0,E+=yield*this.pushSpaces(!0);while(e+E>0);const T=this.getLine();if(T===null)return this.setNext("flow");if((s!==-1&&s<this.indentNext&&T[0]!=="#"||s===0&&(T.startsWith("---")||T.startsWith("..."))&&Ie(T[3]))&&!(s===this.indentNext-1&&this.flowLevel===1&&(T[0]==="]"||T[0]==="}")))return this.flowLevel=0,yield bs,yield*this.parseLineStart();let n=0;for(;T[n]===",";)n+=yield*this.pushCount(1),n+=yield*this.pushSpaces(!0),this.flowKey=!1;switch(n+=yield*this.pushIndicators(),T[n]){case void 0:return"flow";case"#":return yield*this.pushCount(T.length-n),"flow";case"{":case"[":return yield*this.pushCount(1),this.flowKey=!1,this.flowLevel+=1,"flow";case"}":case"]":return yield*this.pushCount(1),this.flowKey=!0,this.flowLevel-=1,this.flowLevel?"flow":"doc";case"*":return yield*this.pushUntil(wT),"flow";case'"':case"'":return this.flowKey=!0,yield*this.parseQuotedScalar();case":":{const i=this.charAt(1);if(this.flowKey||Ie(i)||i===",")return this.flowKey=!1,yield*this.pushCount(1),yield*this.pushSpaces(!0),"flow"}default:return this.flowKey=!1,yield*this.parsePlainScalar()}}*parseQuotedScalar(){const e=this.charAt(0);let E=this.buffer.indexOf(e,this.pos+1);if(e==="'")for(;E!==-1&&this.buffer[E+1]==="'";)E=this.buffer.indexOf("'",E+2);else for(;E!==-1;){let n=0;for(;this.buffer[E-1-n]==="\\";)n+=1;if(n%2===0)break;E=this.buffer.indexOf('"',E+1)}const s=this.buffer.substring(0,E);let T=s.indexOf(`
`,this.pos);if(T!==-1){for(;T!==-1;){const n=this.continueScalar(T+1);if(n===-1)break;T=s.indexOf(`
`,n)}T!==-1&&(E=T-(s[T-1]==="\r"?2:1))}if(E===-1){if(!this.atEnd)return this.setNext("quoted-scalar");E=this.buffer.length}return yield*this.pushToIndex(E+1,!1),this.flowLevel?"flow":"doc"}*parseBlockScalarHeader(){this.blockScalarIndent=-1,this.blockScalarKeep=!1;let e=this.pos;for(;;){const E=this.buffer[++e];if(E==="+")this.blockScalarKeep=!0;else if(E>"0"&&E<="9")this.blockScalarIndent=Number(E)-1;else if(E!=="-")break}return yield*this.pushUntil(E=>Ie(E)||E==="#")}*parseBlockScalar(){let e=this.pos-1,E=0,s;e:for(let n=this.pos;s=this.buffer[n];++n)switch(s){case" ":E+=1;break;case`
`:e=n,E=0;break;case"\r":{const i=this.buffer[n+1];if(!i&&!this.atEnd)return this.setNext("block-scalar");if(i===`
`)break}default:break e}if(!s&&!this.atEnd)return this.setNext("block-scalar");if(E>=this.indentNext){this.blockScalarIndent===-1?this.indentNext=E:this.indentNext=this.blockScalarIndent+(this.indentNext===0?1:this.indentNext);do{const n=this.continueScalar(e+1);if(n===-1)break;e=this.buffer.indexOf(`
`,n)}while(e!==-1);if(e===-1){if(!this.atEnd)return this.setNext("block-scalar");e=this.buffer.length}}let T=e+1;for(s=this.buffer[T];s===" ";)s=this.buffer[++T];if(s==="	"){for(;s==="	"||s===" "||s==="\r"||s===`
`;)s=this.buffer[++T];e=T-1}else if(!this.blockScalarKeep)do{let n=e-1,i=this.buffer[n];i==="\r"&&(i=this.buffer[--n]);const r=n;for(;i===" ";)i=this.buffer[--n];if(i===`
`&&n>=this.pos&&n+1+E>r)e=n;else break}while(!0);return yield oE,yield*this.pushToIndex(e+1,!0),yield*this.parseLineStart()}*parsePlainScalar(){const e=this.flowLevel>0;let E=this.pos-1,s=this.pos-1,T;for(;T=this.buffer[++s];)if(T===":"){const n=this.buffer[s+1];if(Ie(n)||e&&gE.has(n))break;E=s}else if(Ie(T)){let n=this.buffer[s+1];if(T==="\r"&&(n===`
`?(s+=1,T=`
`,n=this.buffer[s+1]):E=s),n==="#"||e&&gE.has(n))break;if(T===`
`){const i=this.continueScalar(s+1);if(i===-1)break;s=Math.max(s,i-2)}}else{if(e&&gE.has(T))break;E=s}return!T&&!this.atEnd?this.setNext("plain-scalar"):(yield oE,yield*this.pushToIndex(E+1,!0),e?"flow":"doc")}*pushCount(e){return e>0?(yield this.buffer.substr(this.pos,e),this.pos+=e,e):0}*pushToIndex(e,E){const s=this.buffer.slice(this.pos,e);return s?(yield s,this.pos+=s.length,s.length):(E&&(yield""),0)}*pushIndicators(){switch(this.charAt(0)){case"!":return(yield*this.pushTag())+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators());case"&":return(yield*this.pushUntil(wT))+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators());case"-":case"?":case":":{const e=this.flowLevel>0,E=this.charAt(1);if(Ie(E)||e&&gE.has(E))return e?this.flowKey&&(this.flowKey=!1):this.indentNext=this.indentValue+1,(yield*this.pushCount(1))+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators())}}return 0}*pushTag(){if(this.charAt(1)==="<"){let e=this.pos+2,E=this.buffer[e];for(;!Ie(E)&&E!==">";)E=this.buffer[++e];return yield*this.pushToIndex(E===">"?e+1:e,!1)}else{let e=this.pos+1,E=this.buffer[e];for(;E;)if(BL.has(E))E=this.buffer[++e];else if(E==="%"&&wr.has(this.buffer[e+1])&&wr.has(this.buffer[e+2]))E=this.buffer[e+=3];else break;return yield*this.pushToIndex(e,!1)}}*pushNewline(){const e=this.buffer[this.pos];return e===`
`?yield*this.pushCount(1):e==="\r"&&this.charAt(1)===`
`?yield*this.pushCount(2):0}*pushSpaces(e){let E=this.pos-1,s;do s=this.buffer[++E];while(s===" "||e&&s==="	");const T=E-this.pos;return T>0&&(yield this.buffer.substr(this.pos,T),this.pos=E),T}*pushUntil(e){let E=this.pos,s=this.buffer[E];for(;!e(s);)s=this.buffer[++E];return yield*this.pushToIndex(E,!1)}}class o_{constructor(){this.lineStarts=[],this.addNewLine=e=>this.lineStarts.push(e),this.linePos=e=>{let E=0,s=this.lineStarts.length;for(;E<s;){const n=E+s>>1;this.lineStarts[n]<e?E=n+1:s=n}if(this.lineStarts[E]===e)return{line:E+1,col:1};if(E===0)return{line:0,col:e};const T=this.lineStarts[E-1];return{line:E,col:e-T+1}}}}function Xe(t,e){for(let E=0;E<t.length;++E)if(t[E].type===e)return!0;return!1}function Vr(t){for(let e=0;e<t.length;++e)switch(t[e].type){case"space":case"comment":case"newline":break;default:return e}return-1}function I_(t){switch(t==null?void 0:t.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"flow-collection":return!0;default:return!1}}function BE(t){var e;switch(t.type){case"document":return t.start;case"block-map":{const E=t.items[t.items.length-1];return(e=E.sep)!=null?e:E.start}case"block-seq":return t.items[t.items.length-1].start;default:return[]}}function ct(t){var E;if(t.length===0)return[];let e=t.length;e:for(;--e>=0;)switch(t[e].type){case"doc-start":case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":case"newline":break e}for(;((E=t[++e])==null?void 0:E.type)==="space";);return t.splice(e,t.length)}function Wr(t){if(t.start.type==="flow-seq-start")for(const e of t.items)e.sep&&!e.value&&!Xe(e.start,"explicit-key-ind")&&!Xe(e.sep,"map-value-ind")&&(e.key&&(e.value=e.key),delete e.key,I_(e.value)?e.value.end?Array.prototype.push.apply(e.value.end,e.sep):e.value.end=e.sep:Array.prototype.push.apply(e.start,e.sep),delete e.sep)}class zn{constructor(e){this.atNewLine=!0,this.atScalar=!1,this.indent=0,this.offset=0,this.onKeyLine=!1,this.stack=[],this.source="",this.type="",this.lexer=new O_,this.onNewLine=e}*parse(e,E=!1){this.onNewLine&&this.offset===0&&this.onNewLine(0);for(const s of this.lexer.lex(e,E))yield*this.next(s);E||(yield*this.end())}*next(e){if(this.source=e,this.atScalar){this.atScalar=!1,yield*this.step(),this.offset+=e.length;return}const E=S_(e);if(E)if(E==="scalar")this.atNewLine=!1,this.atScalar=!0,this.type="scalar";else{switch(this.type=E,yield*this.step(),E){case"newline":this.atNewLine=!0,this.indent=0,this.onNewLine&&this.onNewLine(this.offset+e.length);break;case"space":this.atNewLine&&e[0]===" "&&(this.indent+=e.length);break;case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":this.atNewLine&&(this.indent+=e.length);break;case"doc-mode":case"flow-error-end":return;default:this.atNewLine=!1}this.offset+=e.length}else{const s=`Not a YAML token: ${e}`;yield*this.pop({type:"error",offset:this.offset,message:s,source:e}),this.offset+=e.length}}*end(){for(;this.stack.length>0;)yield*this.pop()}get sourceToken(){return{type:this.type,offset:this.offset,indent:this.indent,source:this.source}}*step(){const e=this.peek(1);if(this.type==="doc-end"&&(!e||e.type!=="doc-end")){for(;this.stack.length>0;)yield*this.pop();this.stack.push({type:"doc-end",offset:this.offset,source:this.source});return}if(!e)return yield*this.stream();switch(e.type){case"document":return yield*this.document(e);case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return yield*this.scalar(e);case"block-scalar":return yield*this.blockScalar(e);case"block-map":return yield*this.blockMap(e);case"block-seq":return yield*this.blockSequence(e);case"flow-collection":return yield*this.flowCollection(e);case"doc-end":return yield*this.documentEnd(e)}yield*this.pop()}peek(e){return this.stack[this.stack.length-e]}*pop(e){const E=e!=null?e:this.stack.pop();if(!E)yield{type:"error",offset:this.offset,source:"",message:"Tried to pop an empty stack"};else if(this.stack.length===0)yield E;else{const s=this.peek(1);switch(E.type==="block-scalar"?E.indent="indent"in s?s.indent:0:E.type==="flow-collection"&&s.type==="document"&&(E.indent=0),E.type==="flow-collection"&&Wr(E),s.type){case"document":s.value=E;break;case"block-scalar":s.props.push(E);break;case"block-map":{const T=s.items[s.items.length-1];if(T.value){s.items.push({start:[],key:E,sep:[]}),this.onKeyLine=!0;return}else if(T.sep)T.value=E;else{Object.assign(T,{key:E,sep:[]}),this.onKeyLine=!T.explicitKey;return}break}case"block-seq":{const T=s.items[s.items.length-1];T.value?s.items.push({start:[],value:E}):T.value=E;break}case"flow-collection":{const T=s.items[s.items.length-1];!T||T.value?s.items.push({start:[],key:E,sep:[]}):T.sep?T.value=E:Object.assign(T,{key:E,sep:[]});return}default:yield*this.pop(),yield*this.pop(E)}if((s.type==="document"||s.type==="block-map"||s.type==="block-seq")&&(E.type==="block-map"||E.type==="block-seq")){const T=E.items[E.items.length-1];T&&!T.sep&&!T.value&&T.start.length>0&&Vr(T.start)===-1&&(E.indent===0||T.start.every(n=>n.type!=="comment"||n.indent<E.indent))&&(s.type==="document"?s.end=T.start:s.items.push({start:T.start}),E.items.splice(-1,1))}}}*stream(){switch(this.type){case"directive-line":yield{type:"directive",offset:this.offset,source:this.source};return;case"byte-order-mark":case"space":case"comment":case"newline":yield this.sourceToken;return;case"doc-mode":case"doc-start":{const e={type:"document",offset:this.offset,start:[]};this.type==="doc-start"&&e.start.push(this.sourceToken),this.stack.push(e);return}}yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML stream`,source:this.source}}*document(e){if(e.value)return yield*this.lineEnd(e);switch(this.type){case"doc-start":{Vr(e.start)!==-1?(yield*this.pop(),yield*this.step()):e.start.push(this.sourceToken);return}case"anchor":case"tag":case"space":case"comment":case"newline":e.start.push(this.sourceToken);return}const E=this.startBlockValue(e);E?this.stack.push(E):yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML document`,source:this.source}}*scalar(e){if(this.type==="map-value-ind"){const E=BE(this.peek(2)),s=ct(E);let T;e.end?(T=e.end,T.push(this.sourceToken),delete e.end):T=[this.sourceToken];const n={type:"block-map",offset:e.offset,indent:e.indent,items:[{start:s,key:e,sep:T}]};this.onKeyLine=!0,this.stack[this.stack.length-1]=n}else yield*this.lineEnd(e)}*blockScalar(e){switch(this.type){case"space":case"comment":case"newline":e.props.push(this.sourceToken);return;case"scalar":if(e.source=this.source,this.atNewLine=!0,this.indent=0,this.onNewLine){let E=this.source.indexOf(`
`)+1;for(;E!==0;)this.onNewLine(this.offset+E),E=this.source.indexOf(`
`,E)+1}yield*this.pop();break;default:yield*this.pop(),yield*this.step()}}*blockMap(e){var s;const E=e.items[e.items.length-1];switch(this.type){case"newline":if(this.onKeyLine=!1,E.value){const T="end"in E.value?E.value.end:void 0,n=Array.isArray(T)?T[T.length-1]:void 0;(n==null?void 0:n.type)==="comment"?T==null||T.push(this.sourceToken):e.items.push({start:[this.sourceToken]})}else E.sep?E.sep.push(this.sourceToken):E.start.push(this.sourceToken);return;case"space":case"comment":if(E.value)e.items.push({start:[this.sourceToken]});else if(E.sep)E.sep.push(this.sourceToken);else{if(this.atIndentedComment(E.start,e.indent)){const T=e.items[e.items.length-2],n=(s=T==null?void 0:T.value)==null?void 0:s.end;if(Array.isArray(n)){Array.prototype.push.apply(n,E.start),n.push(this.sourceToken),e.items.pop();return}}E.start.push(this.sourceToken)}return}if(this.indent>=e.indent){const T=!this.onKeyLine&&this.indent===e.indent,n=T&&(E.sep||E.explicitKey)&&this.type!=="seq-item-ind";let i=[];if(n&&E.sep&&!E.value){const r=[];for(let R=0;R<E.sep.length;++R){const _=E.sep[R];switch(_.type){case"newline":r.push(R);break;case"space":break;case"comment":_.indent>e.indent&&(r.length=0);break;default:r.length=0}}r.length>=2&&(i=E.sep.splice(r[1]))}switch(this.type){case"anchor":case"tag":n||E.value?(i.push(this.sourceToken),e.items.push({start:i}),this.onKeyLine=!0):E.sep?E.sep.push(this.sourceToken):E.start.push(this.sourceToken);return;case"explicit-key-ind":!E.sep&&!E.explicitKey?(E.start.push(this.sourceToken),E.explicitKey=!0):n||E.value?(i.push(this.sourceToken),e.items.push({start:i,explicitKey:!0})):this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken],explicitKey:!0}]}),this.onKeyLine=!0;return;case"map-value-ind":if(E.explicitKey)if(E.sep)if(E.value)e.items.push({start:[],key:null,sep:[this.sourceToken]});else if(Xe(E.sep,"map-value-ind"))this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:i,key:null,sep:[this.sourceToken]}]});else if(I_(E.key)&&!Xe(E.sep,"newline")){const r=ct(E.start),R=E.key,_=E.sep;_.push(this.sourceToken),delete E.key,delete E.sep,this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:r,key:R,sep:_}]})}else i.length>0?E.sep=E.sep.concat(i,this.sourceToken):E.sep.push(this.sourceToken);else if(Xe(E.start,"newline"))Object.assign(E,{key:null,sep:[this.sourceToken]});else{const r=ct(E.start);this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:r,key:null,sep:[this.sourceToken]}]})}else E.sep?E.value||n?e.items.push({start:i,key:null,sep:[this.sourceToken]}):Xe(E.sep,"map-value-ind")?this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[],key:null,sep:[this.sourceToken]}]}):E.sep.push(this.sourceToken):Object.assign(E,{key:null,sep:[this.sourceToken]});this.onKeyLine=!0;return;case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const r=this.flowScalar(this.type);n||E.value?(e.items.push({start:i,key:r,sep:[]}),this.onKeyLine=!0):E.sep?this.stack.push(r):(Object.assign(E,{key:r,sep:[]}),this.onKeyLine=!0);return}default:{const r=this.startBlockValue(e);if(r){if(r.type==="block-seq"){if(!E.explicitKey&&E.sep&&!Xe(E.sep,"newline")){yield*this.pop({type:"error",offset:this.offset,message:"Unexpected block-seq-ind on same line with key",source:this.source});return}}else T&&e.items.push({start:i});this.stack.push(r);return}}}}yield*this.pop(),yield*this.step()}*blockSequence(e){var s;const E=e.items[e.items.length-1];switch(this.type){case"newline":if(E.value){const T="end"in E.value?E.value.end:void 0,n=Array.isArray(T)?T[T.length-1]:void 0;(n==null?void 0:n.type)==="comment"?T==null||T.push(this.sourceToken):e.items.push({start:[this.sourceToken]})}else E.start.push(this.sourceToken);return;case"space":case"comment":if(E.value)e.items.push({start:[this.sourceToken]});else{if(this.atIndentedComment(E.start,e.indent)){const T=e.items[e.items.length-2],n=(s=T==null?void 0:T.value)==null?void 0:s.end;if(Array.isArray(n)){Array.prototype.push.apply(n,E.start),n.push(this.sourceToken),e.items.pop();return}}E.start.push(this.sourceToken)}return;case"anchor":case"tag":if(E.value||this.indent<=e.indent)break;E.start.push(this.sourceToken);return;case"seq-item-ind":if(this.indent!==e.indent)break;E.value||Xe(E.start,"seq-item-ind")?e.items.push({start:[this.sourceToken]}):E.start.push(this.sourceToken);return}if(this.indent>e.indent){const T=this.startBlockValue(e);if(T){this.stack.push(T);return}}yield*this.pop(),yield*this.step()}*flowCollection(e){const E=e.items[e.items.length-1];if(this.type==="flow-error-end"){let s;do yield*this.pop(),s=this.peek(1);while(s&&s.type==="flow-collection")}else if(e.end.length===0){switch(this.type){case"comma":case"explicit-key-ind":!E||E.sep?e.items.push({start:[this.sourceToken]}):E.start.push(this.sourceToken);return;case"map-value-ind":!E||E.value?e.items.push({start:[],key:null,sep:[this.sourceToken]}):E.sep?E.sep.push(this.sourceToken):Object.assign(E,{key:null,sep:[this.sourceToken]});return;case"space":case"comment":case"newline":case"anchor":case"tag":!E||E.value?e.items.push({start:[this.sourceToken]}):E.sep?E.sep.push(this.sourceToken):E.start.push(this.sourceToken);return;case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const T=this.flowScalar(this.type);!E||E.value?e.items.push({start:[],key:T,sep:[]}):E.sep?this.stack.push(T):Object.assign(E,{key:T,sep:[]});return}case"flow-map-end":case"flow-seq-end":e.end.push(this.sourceToken);return}const s=this.startBlockValue(e);s?this.stack.push(s):(yield*this.pop(),yield*this.step())}else{const s=this.peek(2);if(s.type==="block-map"&&(this.type==="map-value-ind"&&s.indent===e.indent||this.type==="newline"&&!s.items[s.items.length-1].sep))yield*this.pop(),yield*this.step();else if(this.type==="map-value-ind"&&s.type!=="flow-collection"){const T=BE(s),n=ct(T);Wr(e);const i=e.end.splice(1,e.end.length);i.push(this.sourceToken);const r={type:"block-map",offset:e.offset,indent:e.indent,items:[{start:n,key:e,sep:i}]};this.onKeyLine=!0,this.stack[this.stack.length-1]=r}else yield*this.lineEnd(e)}}flowScalar(e){if(this.onNewLine){let E=this.source.indexOf(`
`)+1;for(;E!==0;)this.onNewLine(this.offset+E),E=this.source.indexOf(`
`,E)+1}return{type:e,offset:this.offset,indent:this.indent,source:this.source}}startBlockValue(e){switch(this.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return this.flowScalar(this.type);case"block-scalar-header":return{type:"block-scalar",offset:this.offset,indent:this.indent,props:[this.sourceToken],source:""};case"flow-map-start":case"flow-seq-start":return{type:"flow-collection",offset:this.offset,indent:this.indent,start:this.sourceToken,items:[],end:[]};case"seq-item-ind":return{type:"block-seq",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken]}]};case"explicit-key-ind":{this.onKeyLine=!0;const E=BE(e),s=ct(E);return s.push(this.sourceToken),{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:s,explicitKey:!0}]}}case"map-value-ind":{this.onKeyLine=!0;const E=BE(e),s=ct(E);return{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:s,key:null,sep:[this.sourceToken]}]}}}return null}atIndentedComment(e,E){return this.type!=="comment"||this.indent<=E?!1:e.every(s=>s.type==="newline"||s.type==="space")}*documentEnd(e){this.type!=="doc-mode"&&(e.end?e.end.push(this.sourceToken):e.end=[this.sourceToken],this.type==="newline"&&(yield*this.pop()))}*lineEnd(e){switch(this.type){case"comma":case"doc-start":case"doc-end":case"flow-seq-end":case"flow-map-end":case"map-value-ind":yield*this.pop(),yield*this.step();break;case"newline":this.onKeyLine=!1;case"space":case"comment":default:e.end?e.end.push(this.sourceToken):e.end=[this.sourceToken],this.type==="newline"&&(yield*this.pop())}}}function N_(t){const e=t.prettyErrors!==!1;return{lineCounter:t.lineCounter||e&&new o_||null,prettyErrors:e}}function bL(t,e={}){const{lineCounter:E,prettyErrors:s}=N_(e),T=new zn(E==null?void 0:E.addNewLine),n=new Zn(e),i=Array.from(n.compose(T.parse(t)));if(s&&E)for(const r of i)r.errors.forEach(Os(t,E)),r.warnings.forEach(Os(t,E));return i.length>0?i:Object.assign([],{empty:!0},n.streamInfo())}function l_(t,e={}){const{lineCounter:E,prettyErrors:s}=N_(e),T=new zn(E==null?void 0:E.addNewLine),n=new Zn(e);let i=null;for(const r of n.compose(T.parse(t),!0,t.length))if(!i)i=r;else if(i.options.logLevel!=="silent"){i.errors.push(new Tt(r.range.slice(0,2),"MULTIPLE_DOCS","Source contains multiple documents; please use YAML.parseAllDocuments()"));break}return s&&E&&(i.errors.forEach(Os(t,E)),i.warnings.forEach(Os(t,E))),i}function FL(t,e,E){let s;typeof e=="function"?s=e:E===void 0&&e&&typeof e=="object"&&(E=e);const T=l_(t,E);if(!T)return null;if(T.warnings.forEach(n=>FA(T.options.logLevel,n)),T.errors.length>0){if(T.options.logLevel!=="silent")throw T.errors[0];T.errors=[]}return T.toJS(Object.assign({reviver:s},E))}function YL(t,e,E){var T;let s=null;if(typeof e=="function"||Array.isArray(e)?s=e:E===void 0&&e&&(E=e),typeof E=="string"&&(E=E.length),typeof E=="number"){const n=Math.round(E);E=n<1?void 0:n>8?{indent:8}:{indent:n}}if(t===void 0){const{keepUndefined:n}=(T=E!=null?E:e)!=null?T:{};if(!n)return}return St(t)&&!s?t.toString(E):new qt(t,s,E).toString(E)}const Tu=Object.freeze(Object.defineProperty({__proto__:null,Alias:ps,CST:gL,Composer:Zn,Document:qt,Lexer:O_,LineCounter:o_,Pair:se,Parser:zn,Scalar:w,Schema:gs,YAMLError:qn,YAMLMap:Re,YAMLParseError:Tt,YAMLSeq:Je,YAMLWarning:E_,isAlias:Qe,isCollection:k,isDocument:St,isMap:$t,isNode:J,isPair:x,isScalar:X,isSeq:kt,parse:FL,parseAllDocuments:bL,parseDocument:l_,stringify:YL,visit:Ot,visitAsync:hs},Symbol.toStringTag,{value:"Module"}));export{Tu as Y,vL as a,Eu as b,WL as c,su as f,c_ as g,tu as p,eu as s};
