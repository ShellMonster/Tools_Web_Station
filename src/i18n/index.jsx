import { createContext, useContext, useCallback, useMemo, useState, useEffect } from 'react'

const translations = {
  en: {
    '工具列表': 'Tools',
    '搜索工具': 'Search tools',
    菜单: 'Menu',
    关闭: 'Close',
    '请选择左侧的一个工具开始使用。': 'Select a tool from the sidebar to begin.',
    '正在加载模块…': 'Loading module…',
    清空: 'Clear',
    暗色: 'Dark',
    亮色: 'Light',
    '复制结果': 'Copy result',
    复制: 'Copy',
    复制输入: 'Copy input',
    '复制代码': 'Copy code',
    '复制 SQL': 'Copy SQL',
    '复制 JSON': 'Copy JSON',
    '复制 cURL': 'Copy cURL',
    '复制文本': 'Copy text',
    '复制 HTML': 'Copy HTML',
    '复制纯文本': 'Copy plain text',
    '切换语言': 'Switch language',
    '已复制': 'Copied',
    '已复制 HTML': 'HTML copied',
    '已复制文本': 'Text copied',
    '已复制 JSON': 'JSON copied',
    '已复制 SQL': 'SQL copied',
    '载入示例': 'Load sample',
    生成: 'Generate',
    '生成 MD5': 'Generate MD5',
    '生成密码': 'Generate password',
    '生成图片': 'Generate image',
    '计算哈希': 'Calculate hash',
    '解码 JWT': 'Decode JWT',
    'Unix 时间戳转换': 'Unix timestamp converter',
    '时区偏移 (小时)': 'Timezone offset (hours)',
    'Unix 时间戳 (秒/毫秒)': 'Unix timestamp (seconds/milliseconds)',
    '例如 1700000000': 'Example: 1700000000',
    '转换为日期': 'Convert to date',
    '日期时间': 'Date & time',
    '转换为时间戳': 'Convert to timestamp',
    '分钟': 'Minutes',
    '秒': 'Seconds',
    '总时长: ${total} 秒': 'Total duration: ${total} sec',
    格式化: 'Format',
    压缩: 'Minify',
    校验: 'Validate',
    'cURL ↔ Python requests 转换': 'cURL ↔ Python requests converter',
    'cURL ↔ requests 转换': 'cURL ↔ requests converter',
    '在 cURL 命令与 Python requests 示例代码之间快速互转，方便调试 HTTP 接口。':
      'Convert between cURL commands and Python requests snippets to debug HTTP endpoints quickly.',
    'JSON ↔ SQL 转换': 'JSON ↔ SQL converter',
    '将结构化 JSON 转为常见 SQL 语句，支持 SELECT / INSERT / UPDATE / DELETE；也能解析简单 SQL 为 JSON 结构。':
      'Convert structured JSON into common SQL statements (SELECT / INSERT / UPDATE / DELETE) or parse SQL into JSON.',
    '支持特性：': 'Supported features:',
    '识别常见 cURL 参数：<code>-X</code>/<code>--request</code>、<code>-H</code>、<code>--data</code>、<code>--data-raw</code> 等。':
      'Recognise common cURL options such as <code>-X</code>/<code>--request</code>, <code>-H</code>, <code>--data</code>, <code>--data-raw</code>, etc.',
    '自动映射 JSON 负载为 <code>json=</code> 参数，其他内容使用 <code>data=</code>。':
      'Automatically map JSON payloads to the <code>json=</code> argument, fallback to <code>data=</code> for others.',
    '解析 requests 中的 <code>headers</code>、<code>json</code>、<code>data</code> 变量，尽量还原为 cURL。':
      'Parse <code>headers</code>, <code>json</code> and <code>data</code> variables in requests code to rebuild the cURL command.',
    '若自动解析失败，可手动调整输入后再次转换。':
      'If parsing fails, adjust the input manually and try again.',
    '模板风格': 'Template style',
    恢复示例: 'Reset sample',
    '单位换算器': 'Unit converter',
    '支持长度、重量、温度、体积、面积等单位换算。': 'Convert units for length, weight, temperature, volume, area and more.',
    '货币汇率换算': 'Currency exchange',
    '基于静态示例汇率的换算，实时项目请接入真实 API。': 'Convert using static sample exchange rates; connect to a live API for production.',
    '邮箱签名生成': 'Email signature generator',
    '填写个人与公司信息，选择模板即可生成精美邮箱签名。': 'Fill in your information, choose a template and generate a polished email signature.',
    '签名预览': 'Signature preview',
    '复制 HTML 嵌入邮箱设置，或复制纯文本用于 IM 签名。': 'Copy HTML for mail clients or plain text for instant messengers.',
    'HTML 代码': 'HTML code',
    '纯文本': 'Plain text',
    '解析中…': 'Parsing…',
    'JSON 输入': 'JSON input',
    'SQL 结果': 'SQL output',
    'SQL 输入': 'SQL input',
    'JSON 结果': 'JSON output',
    输出: 'Output',
    'requests 输入': 'requests input',
    'cURL 输入': 'cURL input',
    'Python requests': 'Python requests',
    cURL: 'cURL',
    '默认 GET': 'Default GET',
    '默认 POST': 'Default POST',
    '默认 PUT': 'Default PUT',
    '默认 DELETE': 'Default DELETE',
    '输入文本后自动生成结果': 'Enter text to generate results automatically',
    '结果将在此处显示': 'The result will appear here',
    '结果将在此显示': 'Results will appear here',
    '转换结果将在此显示': 'Conversion results will appear here',
    '解析结果将在此显示': 'Parsed results will appear here',
    '输入文本后自动计算 MD5，展示 16 / 32 位大小写变体。': 'Automatically compute MD5 and display 16 / 32-character variants in upper and lower case.',
    '加密 / 编码': 'Encryption / Encoding',
    '数据格式化 / 转换': 'Data formatting / conversion',
    '网络 / 调试工具': 'Network / debugging',
    '文本处理工具': 'Text utilities',
    '时间 / 日期工具': 'Time / date tools',
    '前端 / 开发辅助': 'Frontend / dev helpers',
    '图像 / 多媒体': 'Image / media tools',
    '办公 / 杂项工具': 'Office / misc',
    'MD5 生成': 'MD5 generator',
    'SHA 系列': 'SHA suite',
    'Base64 编码/解码': 'Base64 encode / decode',
    'URL 编码/解码': 'URL encode / decode',
    'HTML 实体编码/解码': 'HTML entity encode / decode',
    'JWT 解码': 'JWT decoder',
    'JSON 格式化/压缩/校验': 'JSON format / minify / validate',
    'XML 格式化/压缩': 'XML format / minify',
    'YAML ↔ JSON': 'YAML ↔ JSON',
    'YAML ↔ JSON 转换': 'YAML ↔ JSON converter',
    'TOML ↔ JSON': 'TOML ↔ JSON',
    'TOML ↔ JSON 转换': 'TOML ↔ JSON converter',
    'CSV ↔ JSON': 'CSV ↔ JSON',
    'HTML/JS/CSS 美化/压缩': 'HTML/JS/CSS beautify / minify',
    'SQL 格式化': 'SQL formatter',
    'URL 参数提取': 'URL parameter extractor',
    'Cookie 格式化': 'Cookie formatter',
    'User-Agent 解析': 'User-Agent parser',
    'IP 地址转换': 'IP converter',
    '端口扫描示例': 'Port scan demo',
    'HTTP Header 格式化': 'HTTP header formatter',
    '大小写转换': 'Case converter',
    '文本去重 / 排序 / 去空行': 'Text deduplicate / sort / trim',
    '文本统计': 'Text statistics',
    '文本差异对比': 'Text diff viewer',
    '随机密码生成器': 'Password generator',
    '占位符文本生成': 'Lorem ipsum generator',
    'Markdown ↔ HTML 转换': 'Markdown ↔ HTML converter',
    'Unix 时间戳 ↔ 日期时间': 'Unix timestamp ↔ datetime',
    '倒计时/定时器': 'Countdown / timer',
    'Cron 表达式解析': 'Cron parser',
    '正则表达式测试': 'Regex tester',
    '进制转换': 'Base converter',
    'RGB ↔ HEX ↔ HSL': 'RGB ↔ HEX ↔ HSL',
    '取色器工具': 'Color picker',
    '二维码生成 / 解码': 'QR code generator / decoder',
    '条形码生成': 'Barcode generator',
    'UUID 生成': 'UUID generator',
    '图片转 Base64': 'Image → Base64',
    'Base64 转图片': 'Base64 → image',
    '图片压缩': 'Image compressor',
    '图标生成（Favicon 预览）': 'Favicon preview generator',
    '音频频率分析': 'Audio frequency analyser',
    '二维码名片生成': 'vCard QR generator',
    '思维导图/流程图': 'Mermaid diagrams',
    '随机数/骰子/抽签': 'Random number / dice / draw',
    '日历/记事本': 'Calendar / notes',
    '32 位（小写）': '32 chars (lowercase)',
    '32 位（大写）': '32 chars (uppercase)',
    '16 位（小写）': '16 chars (lowercase)',
    '16 位（大写）': '16 chars (uppercase)',
    结果: 'Result',
    'SHA 系列哈希': 'SHA hash suite',
    '编码 →': 'Encode →',
    '← 解码': '← Decode',
    '转换': 'Convert',
    'Markdown → HTML': 'Markdown → HTML',
    'HTML → Markdown': 'HTML → Markdown',
    '输入 Markdown': 'Enter Markdown',
    '输入 HTML': 'Enter HTML',
    '请输入合法的十六进制颜色，例如 #2563eb': 'Enter a valid hexadecimal colour, e.g. #2563eb',
    '请输入合法的 RGB，例如 37, 99, 235': 'Enter a valid RGB value, e.g. 37, 99, 235',
    '请输入合法的 HSL，例如 221, 83, 53': 'Enter a valid HSL value, e.g. 221, 83, 53',
    '未识别到二维码': 'QR code not recognised',
    '图片加载失败': 'Image failed to load',
    '数字 123 与 456 会被匹配': 'Numbers 123 and 456 will be matched',
    '编码失败: ${err.message}': 'Encode failed: ${err.message}',
    '解码失败: ${err.message}': 'Decode failed: ${err.message}',
    '解析失败: ${err.message}': 'Parse failed: ${err.message}',
    '格式化失败: ${err.message}': 'Format failed: ${err.message}',
    '压缩失败: ${err.message}': 'Minify failed: ${err.message}',
    '转换失败: ${err.message}': 'Conversion failed: ${err.message}',
    'JSON 校验通过': 'JSON validation passed',
    '无效的 JSON: ${result.message}': 'Invalid JSON: ${result.message}',
    '操作失败: ${error.message}': 'Operation failed: ${error.message}',
    'Signature 将显示在此处': 'Signature will appear here',
    '图标生成 (Favicon)': 'Favicon generator',
    '根据文本快速生成 favicon 预览，可下载多种尺寸。': 'Generate favicon previews from text and download multiple sizes.',
    '在浏览器内压缩图片，支持调整目标大小。': 'Compress images in the browser with adjustable target size.',
    '月份日历': 'Monthly calendar',
    '快速查看当月日历，支持切换月份。': 'Quickly view the current month calendar and switch months.',
    '上个月': 'Previous month',
    '下个月': 'Next month',
    '回到今天': 'Back to today',
    日: 'Sun',
    一: 'Mon',
    二: 'Tue',
    三: 'Wed',
    四: 'Thu',
    五: 'Fri',
    六: 'Sat',
    记事本: 'Notes',
    '简单的本地记事本，自动保存到浏览器本地。': 'Simple local notebook saved in the browser.',
    '记录待办、灵感或备忘': 'Record tasks, ideas, or memos.',
    '目标主机': 'Target host',
    '生成示例扫描结果': 'Generate sample scan results',
    '仅用于前端演示的端口扫描效果，不进行真实网络访问。': 'Front-end demo only; no real network scanning.',
    '端口范围': 'Port range',
    '生成时间': 'Generated at',
    '请输入合法的 IPv4 地址': 'Enter a valid IPv4 address',
    '请输入合法的整数 (0 - 4294967295)': 'Enter an integer between 0 and 4,294,967,295',
    '缺少 URL': 'URL is required',
    '请输入有效的 cURL 命令': 'Enter a valid cURL command',
    '命令必须以 curl 开头': 'Command must start with curl',
    '无法解析 URL，请确认命令格式': 'Unable to parse URL, please check the command format',
    '请输入 Python requests 代码': 'Enter Python requests code',
    '无法解析 URL，请检查代码格式': 'Unable to parse URL, please check the code format',
    'JSON 解析失败，请检查输入格式': 'JSON parsing failed, check the input format',
    'JSON 中缺少表名 (table)': 'Table name (table) is missing in JSON',
    'INSERT 需要提供 values 字段，并包含至少一条记录': 'INSERT requires a values field with at least one record',
    'UPDATE 需要提供 set 字段，指定要更新的列': 'UPDATE requires a set object specifying columns',
    'UPDATE 操作建议提供 WHERE 条件以避免全表更新': 'UPDATE should include a WHERE clause to avoid updating the whole table',
    'DELETE 操作必须提供 WHERE 条件以避免全表删除': 'DELETE must include a WHERE clause to avoid deleting all rows',
    '暂不支持的操作类型：${action}': 'Unsupported operation type: ${action}',
    '请先输入 SQL 语句': 'Enter an SQL statement first',
    '无法解析 SELECT 语句': 'Unable to parse SELECT statement',
    '无法解析 INSERT 语句': 'Unable to parse INSERT statement',
    '无法解析 UPDATE 语句': 'Unable to parse UPDATE statement',
    '无法解析 DELETE 语句': 'Unable to parse DELETE statement',
    '暂不支持该类型的 SQL 语句解析': 'This type of SQL statement is not supported yet',
    '二进制 (2)': 'Binary (2)',
    '八进制 (8)': 'Octal (8)',
    '十进制 (10)': 'Decimal (10)',
    '十六进制 (16)': 'Hexadecimal (16)',
    长度: 'Length',
    '毫米 (mm)': 'Millimetre (mm)',
    '厘米 (cm)': 'Centimetre (cm)',
    '米 (m)': 'Metre (m)',
    '千米 (km)': 'Kilometre (km)',
    '英寸 (in)': 'Inch (in)',
    '英尺 (ft)': 'Foot (ft)',
    '码 (yd)': 'Yard (yd)',
    '英里 (mi)': 'Mile (mi)',
    重量: 'Weight',
    '毫克 (mg)': 'Milligram (mg)',
    '克 (g)': 'Gram (g)',
    '千克 (kg)': 'Kilogram (kg)',
    '吨 (t)': 'Tonne (t)',
    '磅 (lb)': 'Pound (lb)',
    '盎司 (oz)': 'Ounce (oz)',
    温度: 'Temperature',
    '摄氏度 (°C)': 'Celsius (°C)',
    '华氏度 (°F)': 'Fahrenheit (°F)',
    '开尔文 (K)': 'Kelvin (K)',
    体积: 'Volume',
    '毫升 (mL)': 'Millilitre (mL)',
    '升 (L)': 'Litre (L)',
    '立方米 (m³)': 'Cubic metre (m³)',
    '加仑 (gal)': 'Gallon (gal)',
    '品脱 (pt)': 'Pint (pt)',
    面积: 'Area',
    '平方厘米 (cm²)': 'Square centimetre (cm²)',
    '平方米 (m²)': 'Square metre (m²)',
    '平方千米 (km²)': 'Square kilometre (km²)',
    '公顷 (ha)': 'Hectare (ha)',
    '英亩 (acre)': 'Acre (acre)',
    '人民币 (CNY)': 'Renminbi (CNY)',
    '美元 (USD)': 'US Dollar (USD)',
    '欧元 (EUR)': 'Euro (EUR)',
    '日元 (JPY)': 'Yen (JPY)',
    '英镑 (GBP)': 'Pound Sterling (GBP)',
    '澳元 (AUD)': 'Australian Dollar (AUD)',
    '加元 (CAD)': 'Canadian Dollar (CAD)',
    '港币 (HKD)': 'Hong Kong Dollar (HKD)',
    '品牌营销经理': 'Brand Marketing Manager',
    '前端开发': 'Frontend Developer',
    '以创意点亮品牌未来': 'Ignite the brand future with creativity',
    '现代蓝带': 'Modern blue accent',
    '优雅金饰': 'Elegant gold',
    '极简黑白': 'Minimal black & white',
    '双色分栏': 'Dual-tone split',
    '徽章红': 'Badge red',
    '霓虹夜光': 'Neon night glow',
    '柔合彩块': 'Soft highlight blocks',
    '姓名': 'Name',
    '职位': 'Title',
    '公司': 'Company',
    '手机号': 'Mobile number',
    '邮箱': 'Email',
    '网站': 'Website',
    '办公室地址': 'Office address',
    '宣传语 / 签名寄语': 'Tagline / signature note',
    '生成 CODE128 条形码，支持下载 SVG。': 'Generate CODE128 barcodes and download as SVG.',
    '输入数值': 'Enter value',
    '支持在 2/8/10/16 进制之间互转，实时显示所有结果。': 'Convert between bases 2/8/10/16 with live updates.',
    '在常见颜色表示之间转换，实时预览颜色。': 'Convert between common colour models with live preview.',
    '取色器': 'Colour picker',
    '重置模板': 'Reset template',
    '数值': 'Value',
    '输入进制': 'Input base',
    '粘贴 Cookie 字符串': 'Paste Cookie string',
    '选择图片': 'Choose image',
    '选择二维码图片': 'Choose QR image',
    '选择音频文件': 'Choose audio file',
    '处理中…': 'Processing…',
    '目标大小 (MB)': 'Target size (MB)',
    '原始': 'Original',
    '压缩后': 'Compressed',
    '下载 PNG': 'Download PNG',
    '选择颜色并查看对应的 HEX / RGB / HSL 数值。': 'Pick a colour and view its HEX / RGB / HSL values.',
    '上传图片识别二维码内容。': 'Upload an image to decode the QR content.',
    '二维码生成': 'QR generator',
    '二维码解码': 'QR decoder',
    '输入文本生成二维码，支持下载。': 'Generate a QR code from text and download it.',
    '例如 ^\\d+$': 'Example: ^\\d+$',
    '在线测试正则表达式，查看匹配结果。': 'Test regular expressions online and inspect matches.',
    '生成 v4 UUID，并保留最近的历史记录。': 'Generate v4 UUIDs and keep recent history.',
    '支持 UTF-8 文本的 Base64 编码与解码。': 'Encode or decode UTF-8 text with Base64.',
    '输入原始文本': 'Enter original text',
    'Base64 结果': 'Base64 result',
    '原始文本': 'Original text',
    '安全处理 HTML 字符实体，防止特殊字符导致解析错误。': 'Safely handle HTML entities to avoid parsing issues.',
    '实体文本': 'Entity text',
    '粘贴 JWT Token': 'Paste JWT token',
    '解析 JWT 的 Header / Payload / Signature 部分，协助调试。': 'Inspect the header, payload, and signature of a JWT for debugging.',
    '输入需要计算 MD5 的文本': 'Enter text to compute MD5',
    '支持 SHA1 / SHA256 / SHA512 哈希计算。': 'Supports SHA1 / SHA256 / SHA512 hashing.',
    '输入需要计算哈希的文本': 'Enter text to hash',
    '快速进行 URL 编码与解码，适用于查询字符串处理。': 'Encode or decode URLs quickly, ideal for query strings.',
    '编码结果': 'Encoded result',
    '对代码进行格式化或压缩，快速整理页面资源。': 'Format or minify code to tidy page assets quickly.',
    '粘贴代码': 'Paste code',
    'CSV ↔ JSON 转换': 'CSV ↔ JSON converter',
    'CSV 内容': 'CSV content',
    'JSON 内容': 'JSON content',
    '在 CSV 与 JSON 数据之间快速切换，自动处理表头。': 'Convert between CSV and JSON with automatic header handling.',
    'SQL ↔ JSON 解析': 'SQL ↔ JSON parser',
    'JSON 工具': 'JSON tools',
    '支持 JSON 的格式化、压缩与结构校验。': 'Format, minify, and validate JSON.',
    '粘贴 JSON 数据': 'Paste JSON data',
    '格式化 SQL 语句，自动缩进关键字。': 'Format SQL statements with automatic keyword indentation.',
    '粘贴 SQL 语句': 'Paste SQL statement',
    '快速转换 TOML 与 JSON 数据结构。': 'Convert between TOML and JSON structures quickly.',
    'TOML 内容': 'TOML content',
    '格式化 XML 文档或压缩成单行，便于调试与传输。': 'Format XML documents or compress them for transport.',
    '粘贴 XML 文本': 'Paste XML text',
    'YAML 内容': 'YAML content',
    '在 YAML 与 JSON 之间进行双向转换。': 'Convert between YAML and JSON in both directions.',
    '上传音频文件，实时查看频谱变化。': 'Upload audio and visualise its spectrum in real time.',
    '将 Base64 字符串预览为图片。': 'Preview an image directly from a Base64 string.',
    '粘贴 Base64 内容': 'Paste Base64 content',
    'Base64 字符串无效': 'Invalid Base64 string',
    '将本地图像文件转换为 Base64 DataURL，便于内嵌资源。': 'Convert a local image to a Base64 Data URL for embedding.',
    '支持 Markdown 与 HTML 之间的双向转换。': 'Convert between Markdown and HTML in both directions.',
    '快速生成英文 Lorem Ipsum 占位段落，可选长度。': 'Generate Lorem Ipsum placeholder text with selectable length.',
    '根据需求生成高强度密码，包含长度与字符类型选择。': 'Generate strong passwords with length and character options.',
    '支持常见命名风格之间的快速转换。': 'Convert between common naming conventions quickly.',
    '针对多行文本进行常见整理操作。': 'Apply common clean-up operations to multi-line text.',
    '基于 diff-match-patch 计算差异，突出显示新增与删除。': 'Highlight additions and deletions using diff-match-patch.',
    '统计字数、行数与词频，支持中文/英文混合文本。': 'Count characters, lines, and word frequency for mixed-language text.',
    '在 Unix 时间戳与日期时间格式之间来回转换。': 'Convert between Unix timestamps and formatted dates.',
    '设置倒计时提醒，支持开始、暂停与重置。': 'Create countdowns with start, pause, and reset.',
    '解析标准 Cron 表达式，转换为自然语言描述。': 'Parse standard Cron expressions into natural language.',
    '解析 URL 中的查询参数，快速查看键值对。': 'Parse query parameters from a URL and inspect key/value pairs.',
    '将请求头文本转换为结构化格式，便于调试。': 'Convert request headers into structured data for easier debugging.',
    '复制为 JSON': 'Copy as JSON',
    '提取参数': 'Extract parameters',
    参数名: 'Parameter',
    值: 'Value',
    '暂无参数': 'No parameters',
    '暂无 Cookie 数据': 'No cookie data',
    '使用当前 UA': 'Use current UA',
    '使用当前UA': 'Use current UA',
    解析: 'Parse',
    '转换为整数': 'Convert to integer',
    '转换为 IPv4': 'Convert to IPv4',
    '转换为 JSON →': 'Convert to JSON →',
    '← 转换为 YAML': '← Convert to YAML',
    '← 转换为 TOML': '← Convert to TOML',
    '← 转换为 CSV': '← Convert to CSV',
    '清空结果': 'Clear results',
    '端口': 'Port',
    '状态': 'Status',
    '延迟 (ms)': 'Latency (ms)',
    '解析 document.cookie 字符串为可视化键值对。': 'Parse the document.cookie string into a readable key/value list.',
    '解析浏览器 UA 字符串，识别设备、系统与浏览器信息。': 'Parse the browser UA string to identify device, OS, and browser.',
    '在 IPv4 与整数之间转换，便于网络调试存储。': 'Convert between IPv4 addresses and integers for debugging and storage.',
    '格式化成功': 'Formatted successfully',
    '压缩成功': 'Minified successfully',
  },
}

const LanguageContext = createContext(null)

const detectInitialLocale = () => {
  if (typeof window === 'undefined') return 'zh'
  const saved = window.localStorage.getItem('app-language')
  if (saved) return saved
  const lang = window.navigator.language || window.navigator.userLanguage
  if (lang && lang.toLowerCase().startsWith('en')) return 'en'
  return 'zh'
}

let currentLocale = detectInitialLocale()

export const translateText = (text, locale = currentLocale) => {
  if (locale === 'zh' || !text) return text
  const direct = translations.en?.[text]
  if (direct) return direct

  let result = text
  const fallbackPatterns = [
    { regex: /结果将在此处显示/g, replacement: 'Results will appear here' },
    { regex: /将显示在此处/g, replacement: 'will appear here' },
    { regex: /将在此处显示/g, replacement: 'will appear here' },
    { regex: /将出现在此处/g, replacement: 'will appear here' },
    { regex: /转换为/g, replacement: 'Convert to ' },
    { regex: /原始文本/g, replacement: 'Original text' },
    { regex: /原始/g, replacement: 'Original' },
    { regex: /实体文本/g, replacement: 'Entity text' },
    { regex: /实体/g, replacement: 'Entity' },
    { regex: /复制/g, replacement: 'Copy' },
    { regex: /粘贴/g, replacement: 'Paste' },
    { regex: /结果/g, replacement: 'Result' },
    { regex: /输入/g, replacement: 'Input' },
    { regex: /输出/g, replacement: 'Output' },
    { regex: /查询/g, replacement: 'Query' },
    { regex: /暂不支持的操作类型：/g, replacement: 'Unsupported operation type: ' },
  ]

  fallbackPatterns.forEach(({ regex, replacement }) => {
    result = result.replace(regex, replacement)
  })

  return result
}

export const LanguageProvider = ({ children }) => {
  const [locale, setLocaleState] = useState(currentLocale)

  useEffect(() => {
    if (typeof document !== 'undefined') {
      document.documentElement.setAttribute('lang', locale)
    }
    if (typeof window !== 'undefined') {
      window.localStorage.setItem('app-language', locale)
    }
    currentLocale = locale
  }, [locale])

  const setLocale = useCallback((next) => {
    setLocaleState(next)
  }, [])

  const t = useCallback(
    (text) => translateText(text, locale),
    [locale],
  )

  const value = useMemo(() => ({ locale, setLocale, t }), [locale, setLocale, t])

  return <LanguageContext.Provider value={value}>{children}</LanguageContext.Provider>
}

export const useTranslation = () => {
  const context = useContext(LanguageContext)
  if (!context) {
    throw new Error('useTranslation must be used within LanguageProvider')
  }
  return context
}
