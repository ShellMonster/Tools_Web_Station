{
  "version": 3,
  "sources": ["../../mermaid/dist/chunks/mermaid.esm/chunk-WIGNHSP5.mjs"],
  "sourcesContent": ["import {\n  getSubGraphTitleMargins\n} from \"./chunk-SVWLYT5M.mjs\";\nimport {\n  compileStyles,\n  solidStateFill,\n  styles2String,\n  userNodeOverrides\n} from \"./chunk-VRYEIBKM.mjs\";\nimport {\n  createText,\n  getIconSVG\n} from \"./chunk-CGAWHQUF.mjs\";\nimport {\n  calculateTextWidth,\n  decodeEntities,\n  handleUndefinedAttr,\n  parseFontSize\n} from \"./chunk-SPAXJLTM.mjs\";\nimport {\n  common_default,\n  defaultConfig_default,\n  evaluate,\n  getConfig,\n  getConfig2,\n  hasKatex,\n  parseGenericTypes,\n  renderKatexSanitized,\n  sanitizeText,\n  sanitizeText2\n} from \"./chunk-R5S5RMWI.mjs\";\nimport {\n  log,\n  select_default\n} from \"./chunk-PKVCJXSI.mjs\";\nimport {\n  __name\n} from \"./chunk-DLQEHMXD.mjs\";\n\n// src/rendering-util/rendering-elements/shapes/util.ts\nvar labelHelper = /* @__PURE__ */ __name(async (parent, node, _classes) => {\n  let cssClasses;\n  const useHtmlLabels = node.useHtmlLabels || evaluate(getConfig2()?.htmlLabels);\n  if (!_classes) {\n    cssClasses = \"node default\";\n  } else {\n    cssClasses = _classes;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", cssClasses).attr(\"id\", node.domId || node.id);\n  const labelEl = shapeSvg.insert(\"g\").attr(\"class\", \"label\").attr(\"style\", handleUndefinedAttr(node.labelStyle));\n  let label;\n  if (node.label === void 0) {\n    label = \"\";\n  } else {\n    label = typeof node.label === \"string\" ? node.label : node.label[0];\n  }\n  const text2 = await createText(labelEl, sanitizeText(decodeEntities(label), getConfig2()), {\n    useHtmlLabels,\n    width: node.width || getConfig2().flowchart?.wrappingWidth,\n    // @ts-expect-error -- This is currently not used. Should this be `classes` instead?\n    cssClasses: \"markdown-node-label\",\n    style: node.labelStyle,\n    addSvgBackground: !!node.icon || !!node.img\n  });\n  let bbox = text2.getBBox();\n  const halfPadding = (node?.padding ?? 0) / 2;\n  if (useHtmlLabels) {\n    const div = text2.children[0];\n    const dv = select_default(text2);\n    const images = div.getElementsByTagName(\"img\");\n    if (images) {\n      const noImgText = label.replace(/<img[^>]*>/g, \"\").trim() === \"\";\n      await Promise.all(\n        [...images].map(\n          (img) => new Promise((res) => {\n            function setupImage() {\n              img.style.display = \"flex\";\n              img.style.flexDirection = \"column\";\n              if (noImgText) {\n                const bodyFontSize = getConfig2().fontSize ? getConfig2().fontSize : window.getComputedStyle(document.body).fontSize;\n                const enlargingFactor = 5;\n                const [parsedBodyFontSize = defaultConfig_default.fontSize] = parseFontSize(bodyFontSize);\n                const width = parsedBodyFontSize * enlargingFactor + \"px\";\n                img.style.minWidth = width;\n                img.style.maxWidth = width;\n              } else {\n                img.style.width = \"100%\";\n              }\n              res(img);\n            }\n            __name(setupImage, \"setupImage\");\n            setTimeout(() => {\n              if (img.complete) {\n                setupImage();\n              }\n            });\n            img.addEventListener(\"error\", setupImage);\n            img.addEventListener(\"load\", setupImage);\n          })\n        )\n      );\n    }\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  if (useHtmlLabels) {\n    labelEl.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  } else {\n    labelEl.attr(\"transform\", \"translate(0, \" + -bbox.height / 2 + \")\");\n  }\n  if (node.centerLabel) {\n    labelEl.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  }\n  labelEl.insert(\"rect\", \":first-child\");\n  return { shapeSvg, bbox, halfPadding, label: labelEl };\n}, \"labelHelper\");\nvar insertLabel = /* @__PURE__ */ __name(async (parent, label, options) => {\n  const useHtmlLabels = options.useHtmlLabels || evaluate(getConfig2()?.flowchart?.htmlLabels);\n  const labelEl = parent.insert(\"g\").attr(\"class\", \"label\").attr(\"style\", options.labelStyle || \"\");\n  const text2 = await createText(labelEl, sanitizeText(decodeEntities(label), getConfig2()), {\n    useHtmlLabels,\n    width: options.width || getConfig2()?.flowchart?.wrappingWidth,\n    style: options.labelStyle,\n    addSvgBackground: !!options.icon || !!options.img\n  });\n  let bbox = text2.getBBox();\n  const halfPadding = options.padding / 2;\n  if (evaluate(getConfig2()?.flowchart?.htmlLabels)) {\n    const div = text2.children[0];\n    const dv = select_default(text2);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  if (useHtmlLabels) {\n    labelEl.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  } else {\n    labelEl.attr(\"transform\", \"translate(0, \" + -bbox.height / 2 + \")\");\n  }\n  if (options.centerLabel) {\n    labelEl.attr(\"transform\", \"translate(\" + -bbox.width / 2 + \", \" + -bbox.height / 2 + \")\");\n  }\n  labelEl.insert(\"rect\", \":first-child\");\n  return { shapeSvg: parent, bbox, halfPadding, label: labelEl };\n}, \"insertLabel\");\nvar updateNodeBounds = /* @__PURE__ */ __name((node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n}, \"updateNodeBounds\");\nvar getNodeClasses = /* @__PURE__ */ __name((node, extra) => (node.look === \"handDrawn\" ? \"rough-node\" : \"node\") + \" \" + node.cssClasses + \" \" + (extra || \"\"), \"getNodeClasses\");\nfunction createPathFromPoints(points) {\n  const pointStrings = points.map((p2, i2) => `${i2 === 0 ? \"M\" : \"L\"}${p2.x},${p2.y}`);\n  pointStrings.push(\"Z\");\n  return pointStrings.join(\" \");\n}\n__name(createPathFromPoints, \"createPathFromPoints\");\nfunction generateFullSineWavePoints(x1, y1, x2, y2, amplitude, numCycles) {\n  const points = [];\n  const steps = 50;\n  const deltaX = x2 - x1;\n  const deltaY = y2 - y1;\n  const cycleLength = deltaX / numCycles;\n  const frequency = 2 * Math.PI / cycleLength;\n  const midY = y1 + deltaY / 2;\n  for (let i2 = 0; i2 <= steps; i2++) {\n    const t2 = i2 / steps;\n    const x3 = x1 + t2 * deltaX;\n    const y3 = midY + amplitude * Math.sin(frequency * (x3 - x1));\n    points.push({ x: x3, y: y3 });\n  }\n  return points;\n}\n__name(generateFullSineWavePoints, \"generateFullSineWavePoints\");\nfunction generateCirclePoints(centerX, centerY, radius, numPoints, startAngle, endAngle) {\n  const points = [];\n  const startAngleRad = startAngle * Math.PI / 180;\n  const endAngleRad = endAngle * Math.PI / 180;\n  const angleRange = endAngleRad - startAngleRad;\n  const angleStep = angleRange / (numPoints - 1);\n  for (let i2 = 0; i2 < numPoints; i2++) {\n    const angle = startAngleRad + i2 * angleStep;\n    const x2 = centerX + radius * Math.cos(angle);\n    const y2 = centerY + radius * Math.sin(angle);\n    points.push({ x: -x2, y: -y2 });\n  }\n  return points;\n}\n__name(generateCirclePoints, \"generateCirclePoints\");\n\n// ../../node_modules/.pnpm/roughjs@4.6.6_patch_hash=3543d47108cb41b68ec6a671c0e1f9d0cfe2ce524fea5b0992511ae84c3c6b64/node_modules/roughjs/bundled/rough.esm.js\nfunction t(t2, e2, s2) {\n  if (t2 && t2.length) {\n    const [n2, o2] = e2, a2 = Math.PI / 180 * s2, h2 = Math.cos(a2), r2 = Math.sin(a2);\n    for (const e3 of t2) {\n      const [t3, s3] = e3;\n      e3[0] = (t3 - n2) * h2 - (s3 - o2) * r2 + n2, e3[1] = (t3 - n2) * r2 + (s3 - o2) * h2 + o2;\n    }\n  }\n}\n__name(t, \"t\");\nfunction e(t2, e2) {\n  return t2[0] === e2[0] && t2[1] === e2[1];\n}\n__name(e, \"e\");\nfunction s(s2, n2, o2, a2 = 1) {\n  const h2 = o2, r2 = Math.max(n2, 0.1), i2 = s2[0] && s2[0][0] && \"number\" == typeof s2[0][0] ? [s2] : s2, c2 = [0, 0];\n  if (h2) for (const e2 of i2) t(e2, c2, h2);\n  const l2 = function(t2, s3, n3) {\n    const o3 = [];\n    for (const s4 of t2) {\n      const t3 = [...s4];\n      e(t3[0], t3[t3.length - 1]) || t3.push([t3[0][0], t3[0][1]]), t3.length > 2 && o3.push(t3);\n    }\n    const a3 = [];\n    s3 = Math.max(s3, 0.1);\n    const h3 = [];\n    for (const t3 of o3) for (let e2 = 0; e2 < t3.length - 1; e2++) {\n      const s4 = t3[e2], n4 = t3[e2 + 1];\n      if (s4[1] !== n4[1]) {\n        const t4 = Math.min(s4[1], n4[1]);\n        h3.push({ ymin: t4, ymax: Math.max(s4[1], n4[1]), x: t4 === s4[1] ? s4[0] : n4[0], islope: (n4[0] - s4[0]) / (n4[1] - s4[1]) });\n      }\n    }\n    if (h3.sort((t3, e2) => t3.ymin < e2.ymin ? -1 : t3.ymin > e2.ymin ? 1 : t3.x < e2.x ? -1 : t3.x > e2.x ? 1 : t3.ymax === e2.ymax ? 0 : (t3.ymax - e2.ymax) / Math.abs(t3.ymax - e2.ymax)), !h3.length) return a3;\n    let r3 = [], i3 = h3[0].ymin, c3 = 0;\n    for (; r3.length || h3.length; ) {\n      if (h3.length) {\n        let t3 = -1;\n        for (let e2 = 0; e2 < h3.length && !(h3[e2].ymin > i3); e2++) t3 = e2;\n        h3.splice(0, t3 + 1).forEach((t4) => {\n          r3.push({ s: i3, edge: t4 });\n        });\n      }\n      if (r3 = r3.filter((t3) => !(t3.edge.ymax <= i3)), r3.sort((t3, e2) => t3.edge.x === e2.edge.x ? 0 : (t3.edge.x - e2.edge.x) / Math.abs(t3.edge.x - e2.edge.x)), (1 !== n3 || c3 % s3 == 0) && r3.length > 1) for (let t3 = 0; t3 < r3.length; t3 += 2) {\n        const e2 = t3 + 1;\n        if (e2 >= r3.length) break;\n        const s4 = r3[t3].edge, n4 = r3[e2].edge;\n        a3.push([[Math.round(s4.x), i3], [Math.round(n4.x), i3]]);\n      }\n      i3 += n3, r3.forEach((t3) => {\n        t3.edge.x = t3.edge.x + n3 * t3.edge.islope;\n      }), c3++;\n    }\n    return a3;\n  }(i2, r2, a2);\n  if (h2) {\n    for (const e2 of i2) t(e2, c2, -h2);\n    !function(e2, s3, n3) {\n      const o3 = [];\n      e2.forEach((t2) => o3.push(...t2)), t(o3, s3, n3);\n    }(l2, c2, -h2);\n  }\n  return l2;\n}\n__name(s, \"s\");\nfunction n(t2, e2) {\n  var n2;\n  const o2 = e2.hachureAngle + 90;\n  let a2 = e2.hachureGap;\n  a2 < 0 && (a2 = 4 * e2.strokeWidth), a2 = Math.round(Math.max(a2, 0.1));\n  let h2 = 1;\n  return e2.roughness >= 1 && ((null === (n2 = e2.randomizer) || void 0 === n2 ? void 0 : n2.next()) || Math.random()) > 0.7 && (h2 = a2), s(t2, a2, o2, h2 || 1);\n}\n__name(n, \"n\");\nvar o = class {\n  static {\n    __name(this, \"o\");\n  }\n  constructor(t2) {\n    this.helper = t2;\n  }\n  fillPolygons(t2, e2) {\n    return this._fillPolygons(t2, e2);\n  }\n  _fillPolygons(t2, e2) {\n    const s2 = n(t2, e2);\n    return { type: \"fillSketch\", ops: this.renderLines(s2, e2) };\n  }\n  renderLines(t2, e2) {\n    const s2 = [];\n    for (const n2 of t2) s2.push(...this.helper.doubleLineOps(n2[0][0], n2[0][1], n2[1][0], n2[1][1], e2));\n    return s2;\n  }\n};\nfunction a(t2) {\n  const e2 = t2[0], s2 = t2[1];\n  return Math.sqrt(Math.pow(e2[0] - s2[0], 2) + Math.pow(e2[1] - s2[1], 2));\n}\n__name(a, \"a\");\nvar h = class extends o {\n  static {\n    __name(this, \"h\");\n  }\n  fillPolygons(t2, e2) {\n    let s2 = e2.hachureGap;\n    s2 < 0 && (s2 = 4 * e2.strokeWidth), s2 = Math.max(s2, 0.1);\n    const o2 = n(t2, Object.assign({}, e2, { hachureGap: s2 })), h2 = Math.PI / 180 * e2.hachureAngle, r2 = [], i2 = 0.5 * s2 * Math.cos(h2), c2 = 0.5 * s2 * Math.sin(h2);\n    for (const [t3, e3] of o2) a([t3, e3]) && r2.push([[t3[0] - i2, t3[1] + c2], [...e3]], [[t3[0] + i2, t3[1] - c2], [...e3]]);\n    return { type: \"fillSketch\", ops: this.renderLines(r2, e2) };\n  }\n};\nvar r = class extends o {\n  static {\n    __name(this, \"r\");\n  }\n  fillPolygons(t2, e2) {\n    const s2 = this._fillPolygons(t2, e2), n2 = Object.assign({}, e2, { hachureAngle: e2.hachureAngle + 90 }), o2 = this._fillPolygons(t2, n2);\n    return s2.ops = s2.ops.concat(o2.ops), s2;\n  }\n};\nvar i = class {\n  static {\n    __name(this, \"i\");\n  }\n  constructor(t2) {\n    this.helper = t2;\n  }\n  fillPolygons(t2, e2) {\n    const s2 = n(t2, e2 = Object.assign({}, e2, { hachureAngle: 0 }));\n    return this.dotsOnLines(s2, e2);\n  }\n  dotsOnLines(t2, e2) {\n    const s2 = [];\n    let n2 = e2.hachureGap;\n    n2 < 0 && (n2 = 4 * e2.strokeWidth), n2 = Math.max(n2, 0.1);\n    let o2 = e2.fillWeight;\n    o2 < 0 && (o2 = e2.strokeWidth / 2);\n    const h2 = n2 / 4;\n    for (const r2 of t2) {\n      const t3 = a(r2), i2 = t3 / n2, c2 = Math.ceil(i2) - 1, l2 = t3 - c2 * n2, u2 = (r2[0][0] + r2[1][0]) / 2 - n2 / 4, p2 = Math.min(r2[0][1], r2[1][1]);\n      for (let t4 = 0; t4 < c2; t4++) {\n        const a2 = p2 + l2 + t4 * n2, r3 = u2 - h2 + 2 * Math.random() * h2, i3 = a2 - h2 + 2 * Math.random() * h2, c3 = this.helper.ellipse(r3, i3, o2, o2, e2);\n        s2.push(...c3.ops);\n      }\n    }\n    return { type: \"fillSketch\", ops: s2 };\n  }\n};\nvar c = class {\n  static {\n    __name(this, \"c\");\n  }\n  constructor(t2) {\n    this.helper = t2;\n  }\n  fillPolygons(t2, e2) {\n    const s2 = n(t2, e2);\n    return { type: \"fillSketch\", ops: this.dashedLine(s2, e2) };\n  }\n  dashedLine(t2, e2) {\n    const s2 = e2.dashOffset < 0 ? e2.hachureGap < 0 ? 4 * e2.strokeWidth : e2.hachureGap : e2.dashOffset, n2 = e2.dashGap < 0 ? e2.hachureGap < 0 ? 4 * e2.strokeWidth : e2.hachureGap : e2.dashGap, o2 = [];\n    return t2.forEach((t3) => {\n      const h2 = a(t3), r2 = Math.floor(h2 / (s2 + n2)), i2 = (h2 + n2 - r2 * (s2 + n2)) / 2;\n      let c2 = t3[0], l2 = t3[1];\n      c2[0] > l2[0] && (c2 = t3[1], l2 = t3[0]);\n      const u2 = Math.atan((l2[1] - c2[1]) / (l2[0] - c2[0]));\n      for (let t4 = 0; t4 < r2; t4++) {\n        const a2 = t4 * (s2 + n2), h3 = a2 + s2, r3 = [c2[0] + a2 * Math.cos(u2) + i2 * Math.cos(u2), c2[1] + a2 * Math.sin(u2) + i2 * Math.sin(u2)], l3 = [c2[0] + h3 * Math.cos(u2) + i2 * Math.cos(u2), c2[1] + h3 * Math.sin(u2) + i2 * Math.sin(u2)];\n        o2.push(...this.helper.doubleLineOps(r3[0], r3[1], l3[0], l3[1], e2));\n      }\n    }), o2;\n  }\n};\nvar l = class {\n  static {\n    __name(this, \"l\");\n  }\n  constructor(t2) {\n    this.helper = t2;\n  }\n  fillPolygons(t2, e2) {\n    const s2 = e2.hachureGap < 0 ? 4 * e2.strokeWidth : e2.hachureGap, o2 = e2.zigzagOffset < 0 ? s2 : e2.zigzagOffset, a2 = n(t2, e2 = Object.assign({}, e2, { hachureGap: s2 + o2 }));\n    return { type: \"fillSketch\", ops: this.zigzagLines(a2, o2, e2) };\n  }\n  zigzagLines(t2, e2, s2) {\n    const n2 = [];\n    return t2.forEach((t3) => {\n      const o2 = a(t3), h2 = Math.round(o2 / (2 * e2));\n      let r2 = t3[0], i2 = t3[1];\n      r2[0] > i2[0] && (r2 = t3[1], i2 = t3[0]);\n      const c2 = Math.atan((i2[1] - r2[1]) / (i2[0] - r2[0]));\n      for (let t4 = 0; t4 < h2; t4++) {\n        const o3 = 2 * t4 * e2, a2 = 2 * (t4 + 1) * e2, h3 = Math.sqrt(2 * Math.pow(e2, 2)), i3 = [r2[0] + o3 * Math.cos(c2), r2[1] + o3 * Math.sin(c2)], l2 = [r2[0] + a2 * Math.cos(c2), r2[1] + a2 * Math.sin(c2)], u2 = [i3[0] + h3 * Math.cos(c2 + Math.PI / 4), i3[1] + h3 * Math.sin(c2 + Math.PI / 4)];\n        n2.push(...this.helper.doubleLineOps(i3[0], i3[1], u2[0], u2[1], s2), ...this.helper.doubleLineOps(u2[0], u2[1], l2[0], l2[1], s2));\n      }\n    }), n2;\n  }\n};\nvar u = {};\nvar p = class {\n  static {\n    __name(this, \"p\");\n  }\n  constructor(t2) {\n    this.seed = t2;\n  }\n  next() {\n    return this.seed ? (2 ** 31 - 1 & (this.seed = Math.imul(48271, this.seed))) / 2 ** 31 : Math.random();\n  }\n};\nvar f = 0;\nvar d = 1;\nvar g = 2;\nvar M = { A: 7, a: 7, C: 6, c: 6, H: 1, h: 1, L: 2, l: 2, M: 2, m: 2, Q: 4, q: 4, S: 4, s: 4, T: 2, t: 2, V: 1, v: 1, Z: 0, z: 0 };\nfunction k(t2, e2) {\n  return t2.type === e2;\n}\n__name(k, \"k\");\nfunction b(t2) {\n  const e2 = [], s2 = function(t3) {\n    const e3 = new Array();\n    for (; \"\" !== t3; ) if (t3.match(/^([ \\t\\r\\n,]+)/)) t3 = t3.substr(RegExp.$1.length);\n    else if (t3.match(/^([aAcChHlLmMqQsStTvVzZ])/)) e3[e3.length] = { type: f, text: RegExp.$1 }, t3 = t3.substr(RegExp.$1.length);\n    else {\n      if (!t3.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/)) return [];\n      e3[e3.length] = { type: d, text: `${parseFloat(RegExp.$1)}` }, t3 = t3.substr(RegExp.$1.length);\n    }\n    return e3[e3.length] = { type: g, text: \"\" }, e3;\n  }(t2);\n  let n2 = \"BOD\", o2 = 0, a2 = s2[o2];\n  for (; !k(a2, g); ) {\n    let h2 = 0;\n    const r2 = [];\n    if (\"BOD\" === n2) {\n      if (\"M\" !== a2.text && \"m\" !== a2.text) return b(\"M0,0\" + t2);\n      o2++, h2 = M[a2.text], n2 = a2.text;\n    } else k(a2, d) ? h2 = M[n2] : (o2++, h2 = M[a2.text], n2 = a2.text);\n    if (!(o2 + h2 < s2.length)) throw new Error(\"Path data ended short\");\n    for (let t3 = o2; t3 < o2 + h2; t3++) {\n      const e3 = s2[t3];\n      if (!k(e3, d)) throw new Error(\"Param not a number: \" + n2 + \",\" + e3.text);\n      r2[r2.length] = +e3.text;\n    }\n    if (\"number\" != typeof M[n2]) throw new Error(\"Bad segment: \" + n2);\n    {\n      const t3 = { key: n2, data: r2 };\n      e2.push(t3), o2 += h2, a2 = s2[o2], \"M\" === n2 && (n2 = \"L\"), \"m\" === n2 && (n2 = \"l\");\n    }\n  }\n  return e2;\n}\n__name(b, \"b\");\nfunction y(t2) {\n  let e2 = 0, s2 = 0, n2 = 0, o2 = 0;\n  const a2 = [];\n  for (const { key: h2, data: r2 } of t2) switch (h2) {\n    case \"M\":\n      a2.push({ key: \"M\", data: [...r2] }), [e2, s2] = r2, [n2, o2] = r2;\n      break;\n    case \"m\":\n      e2 += r2[0], s2 += r2[1], a2.push({ key: \"M\", data: [e2, s2] }), n2 = e2, o2 = s2;\n      break;\n    case \"L\":\n      a2.push({ key: \"L\", data: [...r2] }), [e2, s2] = r2;\n      break;\n    case \"l\":\n      e2 += r2[0], s2 += r2[1], a2.push({ key: \"L\", data: [e2, s2] });\n      break;\n    case \"C\":\n      a2.push({ key: \"C\", data: [...r2] }), e2 = r2[4], s2 = r2[5];\n      break;\n    case \"c\": {\n      const t3 = r2.map((t4, n3) => n3 % 2 ? t4 + s2 : t4 + e2);\n      a2.push({ key: \"C\", data: t3 }), e2 = t3[4], s2 = t3[5];\n      break;\n    }\n    case \"Q\":\n      a2.push({ key: \"Q\", data: [...r2] }), e2 = r2[2], s2 = r2[3];\n      break;\n    case \"q\": {\n      const t3 = r2.map((t4, n3) => n3 % 2 ? t4 + s2 : t4 + e2);\n      a2.push({ key: \"Q\", data: t3 }), e2 = t3[2], s2 = t3[3];\n      break;\n    }\n    case \"A\":\n      a2.push({ key: \"A\", data: [...r2] }), e2 = r2[5], s2 = r2[6];\n      break;\n    case \"a\":\n      e2 += r2[5], s2 += r2[6], a2.push({ key: \"A\", data: [r2[0], r2[1], r2[2], r2[3], r2[4], e2, s2] });\n      break;\n    case \"H\":\n      a2.push({ key: \"H\", data: [...r2] }), e2 = r2[0];\n      break;\n    case \"h\":\n      e2 += r2[0], a2.push({ key: \"H\", data: [e2] });\n      break;\n    case \"V\":\n      a2.push({ key: \"V\", data: [...r2] }), s2 = r2[0];\n      break;\n    case \"v\":\n      s2 += r2[0], a2.push({ key: \"V\", data: [s2] });\n      break;\n    case \"S\":\n      a2.push({ key: \"S\", data: [...r2] }), e2 = r2[2], s2 = r2[3];\n      break;\n    case \"s\": {\n      const t3 = r2.map((t4, n3) => n3 % 2 ? t4 + s2 : t4 + e2);\n      a2.push({ key: \"S\", data: t3 }), e2 = t3[2], s2 = t3[3];\n      break;\n    }\n    case \"T\":\n      a2.push({ key: \"T\", data: [...r2] }), e2 = r2[0], s2 = r2[1];\n      break;\n    case \"t\":\n      e2 += r2[0], s2 += r2[1], a2.push({ key: \"T\", data: [e2, s2] });\n      break;\n    case \"Z\":\n    case \"z\":\n      a2.push({ key: \"Z\", data: [] }), e2 = n2, s2 = o2;\n  }\n  return a2;\n}\n__name(y, \"y\");\nfunction m(t2) {\n  const e2 = [];\n  let s2 = \"\", n2 = 0, o2 = 0, a2 = 0, h2 = 0, r2 = 0, i2 = 0;\n  for (const { key: c2, data: l2 } of t2) {\n    switch (c2) {\n      case \"M\":\n        e2.push({ key: \"M\", data: [...l2] }), [n2, o2] = l2, [a2, h2] = l2;\n        break;\n      case \"C\":\n        e2.push({ key: \"C\", data: [...l2] }), n2 = l2[4], o2 = l2[5], r2 = l2[2], i2 = l2[3];\n        break;\n      case \"L\":\n        e2.push({ key: \"L\", data: [...l2] }), [n2, o2] = l2;\n        break;\n      case \"H\":\n        n2 = l2[0], e2.push({ key: \"L\", data: [n2, o2] });\n        break;\n      case \"V\":\n        o2 = l2[0], e2.push({ key: \"L\", data: [n2, o2] });\n        break;\n      case \"S\": {\n        let t3 = 0, a3 = 0;\n        \"C\" === s2 || \"S\" === s2 ? (t3 = n2 + (n2 - r2), a3 = o2 + (o2 - i2)) : (t3 = n2, a3 = o2), e2.push({ key: \"C\", data: [t3, a3, ...l2] }), r2 = l2[0], i2 = l2[1], n2 = l2[2], o2 = l2[3];\n        break;\n      }\n      case \"T\": {\n        const [t3, a3] = l2;\n        let h3 = 0, c3 = 0;\n        \"Q\" === s2 || \"T\" === s2 ? (h3 = n2 + (n2 - r2), c3 = o2 + (o2 - i2)) : (h3 = n2, c3 = o2);\n        const u2 = n2 + 2 * (h3 - n2) / 3, p2 = o2 + 2 * (c3 - o2) / 3, f2 = t3 + 2 * (h3 - t3) / 3, d2 = a3 + 2 * (c3 - a3) / 3;\n        e2.push({ key: \"C\", data: [u2, p2, f2, d2, t3, a3] }), r2 = h3, i2 = c3, n2 = t3, o2 = a3;\n        break;\n      }\n      case \"Q\": {\n        const [t3, s3, a3, h3] = l2, c3 = n2 + 2 * (t3 - n2) / 3, u2 = o2 + 2 * (s3 - o2) / 3, p2 = a3 + 2 * (t3 - a3) / 3, f2 = h3 + 2 * (s3 - h3) / 3;\n        e2.push({ key: \"C\", data: [c3, u2, p2, f2, a3, h3] }), r2 = t3, i2 = s3, n2 = a3, o2 = h3;\n        break;\n      }\n      case \"A\": {\n        const t3 = Math.abs(l2[0]), s3 = Math.abs(l2[1]), a3 = l2[2], h3 = l2[3], r3 = l2[4], i3 = l2[5], c3 = l2[6];\n        if (0 === t3 || 0 === s3) e2.push({ key: \"C\", data: [n2, o2, i3, c3, i3, c3] }), n2 = i3, o2 = c3;\n        else if (n2 !== i3 || o2 !== c3) {\n          x(n2, o2, i3, c3, t3, s3, a3, h3, r3).forEach(function(t4) {\n            e2.push({ key: \"C\", data: t4 });\n          }), n2 = i3, o2 = c3;\n        }\n        break;\n      }\n      case \"Z\":\n        e2.push({ key: \"Z\", data: [] }), n2 = a2, o2 = h2;\n    }\n    s2 = c2;\n  }\n  return e2;\n}\n__name(m, \"m\");\nfunction w(t2, e2, s2) {\n  return [t2 * Math.cos(s2) - e2 * Math.sin(s2), t2 * Math.sin(s2) + e2 * Math.cos(s2)];\n}\n__name(w, \"w\");\nfunction x(t2, e2, s2, n2, o2, a2, h2, r2, i2, c2) {\n  const l2 = (u2 = h2, Math.PI * u2 / 180);\n  var u2;\n  let p2 = [], f2 = 0, d2 = 0, g2 = 0, M2 = 0;\n  if (c2) [f2, d2, g2, M2] = c2;\n  else {\n    [t2, e2] = w(t2, e2, -l2), [s2, n2] = w(s2, n2, -l2);\n    const h3 = (t2 - s2) / 2, c3 = (e2 - n2) / 2;\n    let u3 = h3 * h3 / (o2 * o2) + c3 * c3 / (a2 * a2);\n    u3 > 1 && (u3 = Math.sqrt(u3), o2 *= u3, a2 *= u3);\n    const p3 = o2 * o2, k3 = a2 * a2, b3 = p3 * k3 - p3 * c3 * c3 - k3 * h3 * h3, y3 = p3 * c3 * c3 + k3 * h3 * h3, m3 = (r2 === i2 ? -1 : 1) * Math.sqrt(Math.abs(b3 / y3));\n    g2 = m3 * o2 * c3 / a2 + (t2 + s2) / 2, M2 = m3 * -a2 * h3 / o2 + (e2 + n2) / 2, f2 = Math.asin(parseFloat(((e2 - M2) / a2).toFixed(9))), d2 = Math.asin(parseFloat(((n2 - M2) / a2).toFixed(9))), t2 < g2 && (f2 = Math.PI - f2), s2 < g2 && (d2 = Math.PI - d2), f2 < 0 && (f2 = 2 * Math.PI + f2), d2 < 0 && (d2 = 2 * Math.PI + d2), i2 && f2 > d2 && (f2 -= 2 * Math.PI), !i2 && d2 > f2 && (d2 -= 2 * Math.PI);\n  }\n  let k2 = d2 - f2;\n  if (Math.abs(k2) > 120 * Math.PI / 180) {\n    const t3 = d2, e3 = s2, r3 = n2;\n    d2 = i2 && d2 > f2 ? f2 + 120 * Math.PI / 180 * 1 : f2 + 120 * Math.PI / 180 * -1, p2 = x(s2 = g2 + o2 * Math.cos(d2), n2 = M2 + a2 * Math.sin(d2), e3, r3, o2, a2, h2, 0, i2, [d2, t3, g2, M2]);\n  }\n  k2 = d2 - f2;\n  const b2 = Math.cos(f2), y2 = Math.sin(f2), m2 = Math.cos(d2), P2 = Math.sin(d2), v2 = Math.tan(k2 / 4), S2 = 4 / 3 * o2 * v2, O2 = 4 / 3 * a2 * v2, L2 = [t2, e2], T2 = [t2 + S2 * y2, e2 - O2 * b2], D2 = [s2 + S2 * P2, n2 - O2 * m2], A2 = [s2, n2];\n  if (T2[0] = 2 * L2[0] - T2[0], T2[1] = 2 * L2[1] - T2[1], c2) return [T2, D2, A2].concat(p2);\n  {\n    p2 = [T2, D2, A2].concat(p2);\n    const t3 = [];\n    for (let e3 = 0; e3 < p2.length; e3 += 3) {\n      const s3 = w(p2[e3][0], p2[e3][1], l2), n3 = w(p2[e3 + 1][0], p2[e3 + 1][1], l2), o3 = w(p2[e3 + 2][0], p2[e3 + 2][1], l2);\n      t3.push([s3[0], s3[1], n3[0], n3[1], o3[0], o3[1]]);\n    }\n    return t3;\n  }\n}\n__name(x, \"x\");\nvar P = { randOffset: /* @__PURE__ */ __name(function(t2, e2) {\n  return G(t2, e2);\n}, \"randOffset\"), randOffsetWithRange: /* @__PURE__ */ __name(function(t2, e2, s2) {\n  return E(t2, e2, s2);\n}, \"randOffsetWithRange\"), ellipse: /* @__PURE__ */ __name(function(t2, e2, s2, n2, o2) {\n  const a2 = T(s2, n2, o2);\n  return D(t2, e2, o2, a2).opset;\n}, \"ellipse\"), doubleLineOps: /* @__PURE__ */ __name(function(t2, e2, s2, n2, o2) {\n  return $(t2, e2, s2, n2, o2, true);\n}, \"doubleLineOps\") };\nfunction v(t2, e2, s2, n2, o2) {\n  return { type: \"path\", ops: $(t2, e2, s2, n2, o2) };\n}\n__name(v, \"v\");\nfunction S(t2, e2, s2) {\n  const n2 = (t2 || []).length;\n  if (n2 > 2) {\n    const o2 = [];\n    for (let e3 = 0; e3 < n2 - 1; e3++) o2.push(...$(t2[e3][0], t2[e3][1], t2[e3 + 1][0], t2[e3 + 1][1], s2));\n    return e2 && o2.push(...$(t2[n2 - 1][0], t2[n2 - 1][1], t2[0][0], t2[0][1], s2)), { type: \"path\", ops: o2 };\n  }\n  return 2 === n2 ? v(t2[0][0], t2[0][1], t2[1][0], t2[1][1], s2) : { type: \"path\", ops: [] };\n}\n__name(S, \"S\");\nfunction O(t2, e2, s2, n2, o2) {\n  return function(t3, e3) {\n    return S(t3, true, e3);\n  }([[t2, e2], [t2 + s2, e2], [t2 + s2, e2 + n2], [t2, e2 + n2]], o2);\n}\n__name(O, \"O\");\nfunction L(t2, e2) {\n  if (t2.length) {\n    const s2 = \"number\" == typeof t2[0][0] ? [t2] : t2, n2 = j(s2[0], 1 * (1 + 0.2 * e2.roughness), e2), o2 = e2.disableMultiStroke ? [] : j(s2[0], 1.5 * (1 + 0.22 * e2.roughness), z(e2));\n    for (let t3 = 1; t3 < s2.length; t3++) {\n      const a2 = s2[t3];\n      if (a2.length) {\n        const t4 = j(a2, 1 * (1 + 0.2 * e2.roughness), e2), s3 = e2.disableMultiStroke ? [] : j(a2, 1.5 * (1 + 0.22 * e2.roughness), z(e2));\n        for (const e3 of t4) \"move\" !== e3.op && n2.push(e3);\n        for (const t5 of s3) \"move\" !== t5.op && o2.push(t5);\n      }\n    }\n    return { type: \"path\", ops: n2.concat(o2) };\n  }\n  return { type: \"path\", ops: [] };\n}\n__name(L, \"L\");\nfunction T(t2, e2, s2) {\n  const n2 = Math.sqrt(2 * Math.PI * Math.sqrt((Math.pow(t2 / 2, 2) + Math.pow(e2 / 2, 2)) / 2)), o2 = Math.ceil(Math.max(s2.curveStepCount, s2.curveStepCount / Math.sqrt(200) * n2)), a2 = 2 * Math.PI / o2;\n  let h2 = Math.abs(t2 / 2), r2 = Math.abs(e2 / 2);\n  const i2 = 1 - s2.curveFitting;\n  return h2 += G(h2 * i2, s2), r2 += G(r2 * i2, s2), { increment: a2, rx: h2, ry: r2 };\n}\n__name(T, \"T\");\nfunction D(t2, e2, s2, n2) {\n  const [o2, a2] = F(n2.increment, t2, e2, n2.rx, n2.ry, 1, n2.increment * E(0.1, E(0.4, 1, s2), s2), s2);\n  let h2 = q(o2, null, s2);\n  if (!s2.disableMultiStroke && 0 !== s2.roughness) {\n    const [o3] = F(n2.increment, t2, e2, n2.rx, n2.ry, 1.5, 0, s2), a3 = q(o3, null, s2);\n    h2 = h2.concat(a3);\n  }\n  return { estimatedPoints: a2, opset: { type: \"path\", ops: h2 } };\n}\n__name(D, \"D\");\nfunction A(t2, e2, s2, n2, o2, a2, h2, r2, i2) {\n  const c2 = t2, l2 = e2;\n  let u2 = Math.abs(s2 / 2), p2 = Math.abs(n2 / 2);\n  u2 += G(0.01 * u2, i2), p2 += G(0.01 * p2, i2);\n  let f2 = o2, d2 = a2;\n  for (; f2 < 0; ) f2 += 2 * Math.PI, d2 += 2 * Math.PI;\n  d2 - f2 > 2 * Math.PI && (f2 = 0, d2 = 2 * Math.PI);\n  const g2 = 2 * Math.PI / i2.curveStepCount, M2 = Math.min(g2 / 2, (d2 - f2) / 2), k2 = V(M2, c2, l2, u2, p2, f2, d2, 1, i2);\n  if (!i2.disableMultiStroke) {\n    const t3 = V(M2, c2, l2, u2, p2, f2, d2, 1.5, i2);\n    k2.push(...t3);\n  }\n  return h2 && (r2 ? k2.push(...$(c2, l2, c2 + u2 * Math.cos(f2), l2 + p2 * Math.sin(f2), i2), ...$(c2, l2, c2 + u2 * Math.cos(d2), l2 + p2 * Math.sin(d2), i2)) : k2.push({ op: \"lineTo\", data: [c2, l2] }, { op: \"lineTo\", data: [c2 + u2 * Math.cos(f2), l2 + p2 * Math.sin(f2)] })), { type: \"path\", ops: k2 };\n}\n__name(A, \"A\");\nfunction _(t2, e2) {\n  const s2 = m(y(b(t2))), n2 = [];\n  let o2 = [0, 0], a2 = [0, 0];\n  for (const { key: t3, data: h2 } of s2) switch (t3) {\n    case \"M\":\n      a2 = [h2[0], h2[1]], o2 = [h2[0], h2[1]];\n      break;\n    case \"L\":\n      n2.push(...$(a2[0], a2[1], h2[0], h2[1], e2)), a2 = [h2[0], h2[1]];\n      break;\n    case \"C\": {\n      const [t4, s3, o3, r2, i2, c2] = h2;\n      n2.push(...Z(t4, s3, o3, r2, i2, c2, a2, e2)), a2 = [i2, c2];\n      break;\n    }\n    case \"Z\":\n      n2.push(...$(a2[0], a2[1], o2[0], o2[1], e2)), a2 = [o2[0], o2[1]];\n  }\n  return { type: \"path\", ops: n2 };\n}\n__name(_, \"_\");\nfunction I(t2, e2) {\n  const s2 = [];\n  for (const n2 of t2) if (n2.length) {\n    const t3 = e2.maxRandomnessOffset || 0, o2 = n2.length;\n    if (o2 > 2) {\n      s2.push({ op: \"move\", data: [n2[0][0] + G(t3, e2), n2[0][1] + G(t3, e2)] });\n      for (let a2 = 1; a2 < o2; a2++) s2.push({ op: \"lineTo\", data: [n2[a2][0] + G(t3, e2), n2[a2][1] + G(t3, e2)] });\n    }\n  }\n  return { type: \"fillPath\", ops: s2 };\n}\n__name(I, \"I\");\nfunction C(t2, e2) {\n  return function(t3, e3) {\n    let s2 = t3.fillStyle || \"hachure\";\n    if (!u[s2]) switch (s2) {\n      case \"zigzag\":\n        u[s2] || (u[s2] = new h(e3));\n        break;\n      case \"cross-hatch\":\n        u[s2] || (u[s2] = new r(e3));\n        break;\n      case \"dots\":\n        u[s2] || (u[s2] = new i(e3));\n        break;\n      case \"dashed\":\n        u[s2] || (u[s2] = new c(e3));\n        break;\n      case \"zigzag-line\":\n        u[s2] || (u[s2] = new l(e3));\n        break;\n      default:\n        s2 = \"hachure\", u[s2] || (u[s2] = new o(e3));\n    }\n    return u[s2];\n  }(e2, P).fillPolygons(t2, e2);\n}\n__name(C, \"C\");\nfunction z(t2) {\n  const e2 = Object.assign({}, t2);\n  return e2.randomizer = void 0, t2.seed && (e2.seed = t2.seed + 1), e2;\n}\n__name(z, \"z\");\nfunction W(t2) {\n  return t2.randomizer || (t2.randomizer = new p(t2.seed || 0)), t2.randomizer.next();\n}\n__name(W, \"W\");\nfunction E(t2, e2, s2, n2 = 1) {\n  return s2.roughness * n2 * (W(s2) * (e2 - t2) + t2);\n}\n__name(E, \"E\");\nfunction G(t2, e2, s2 = 1) {\n  return E(-t2, t2, e2, s2);\n}\n__name(G, \"G\");\nfunction $(t2, e2, s2, n2, o2, a2 = false) {\n  const h2 = a2 ? o2.disableMultiStrokeFill : o2.disableMultiStroke, r2 = R(t2, e2, s2, n2, o2, true, false);\n  if (h2) return r2;\n  const i2 = R(t2, e2, s2, n2, o2, true, true);\n  return r2.concat(i2);\n}\n__name($, \"$\");\nfunction R(t2, e2, s2, n2, o2, a2, h2) {\n  const r2 = Math.pow(t2 - s2, 2) + Math.pow(e2 - n2, 2), i2 = Math.sqrt(r2);\n  let c2 = 1;\n  c2 = i2 < 200 ? 1 : i2 > 500 ? 0.4 : -16668e-7 * i2 + 1.233334;\n  let l2 = o2.maxRandomnessOffset || 0;\n  l2 * l2 * 100 > r2 && (l2 = i2 / 10);\n  const u2 = l2 / 2, p2 = 0.2 + 0.2 * W(o2);\n  let f2 = o2.bowing * o2.maxRandomnessOffset * (n2 - e2) / 200, d2 = o2.bowing * o2.maxRandomnessOffset * (t2 - s2) / 200;\n  f2 = G(f2, o2, c2), d2 = G(d2, o2, c2);\n  const g2 = [], M2 = /* @__PURE__ */ __name(() => G(u2, o2, c2), \"M\"), k2 = /* @__PURE__ */ __name(() => G(l2, o2, c2), \"k\"), b2 = o2.preserveVertices;\n  return a2 && (h2 ? g2.push({ op: \"move\", data: [t2 + (b2 ? 0 : M2()), e2 + (b2 ? 0 : M2())] }) : g2.push({ op: \"move\", data: [t2 + (b2 ? 0 : G(l2, o2, c2)), e2 + (b2 ? 0 : G(l2, o2, c2))] })), h2 ? g2.push({ op: \"bcurveTo\", data: [f2 + t2 + (s2 - t2) * p2 + M2(), d2 + e2 + (n2 - e2) * p2 + M2(), f2 + t2 + 2 * (s2 - t2) * p2 + M2(), d2 + e2 + 2 * (n2 - e2) * p2 + M2(), s2 + (b2 ? 0 : M2()), n2 + (b2 ? 0 : M2())] }) : g2.push({ op: \"bcurveTo\", data: [f2 + t2 + (s2 - t2) * p2 + k2(), d2 + e2 + (n2 - e2) * p2 + k2(), f2 + t2 + 2 * (s2 - t2) * p2 + k2(), d2 + e2 + 2 * (n2 - e2) * p2 + k2(), s2 + (b2 ? 0 : k2()), n2 + (b2 ? 0 : k2())] }), g2;\n}\n__name(R, \"R\");\nfunction j(t2, e2, s2) {\n  if (!t2.length) return [];\n  const n2 = [];\n  n2.push([t2[0][0] + G(e2, s2), t2[0][1] + G(e2, s2)]), n2.push([t2[0][0] + G(e2, s2), t2[0][1] + G(e2, s2)]);\n  for (let o2 = 1; o2 < t2.length; o2++) n2.push([t2[o2][0] + G(e2, s2), t2[o2][1] + G(e2, s2)]), o2 === t2.length - 1 && n2.push([t2[o2][0] + G(e2, s2), t2[o2][1] + G(e2, s2)]);\n  return q(n2, null, s2);\n}\n__name(j, \"j\");\nfunction q(t2, e2, s2) {\n  const n2 = t2.length, o2 = [];\n  if (n2 > 3) {\n    const a2 = [], h2 = 1 - s2.curveTightness;\n    o2.push({ op: \"move\", data: [t2[1][0], t2[1][1]] });\n    for (let e3 = 1; e3 + 2 < n2; e3++) {\n      const s3 = t2[e3];\n      a2[0] = [s3[0], s3[1]], a2[1] = [s3[0] + (h2 * t2[e3 + 1][0] - h2 * t2[e3 - 1][0]) / 6, s3[1] + (h2 * t2[e3 + 1][1] - h2 * t2[e3 - 1][1]) / 6], a2[2] = [t2[e3 + 1][0] + (h2 * t2[e3][0] - h2 * t2[e3 + 2][0]) / 6, t2[e3 + 1][1] + (h2 * t2[e3][1] - h2 * t2[e3 + 2][1]) / 6], a2[3] = [t2[e3 + 1][0], t2[e3 + 1][1]], o2.push({ op: \"bcurveTo\", data: [a2[1][0], a2[1][1], a2[2][0], a2[2][1], a2[3][0], a2[3][1]] });\n    }\n    if (e2 && 2 === e2.length) {\n      const t3 = s2.maxRandomnessOffset;\n      o2.push({ op: \"lineTo\", data: [e2[0] + G(t3, s2), e2[1] + G(t3, s2)] });\n    }\n  } else 3 === n2 ? (o2.push({ op: \"move\", data: [t2[1][0], t2[1][1]] }), o2.push({ op: \"bcurveTo\", data: [t2[1][0], t2[1][1], t2[2][0], t2[2][1], t2[2][0], t2[2][1]] })) : 2 === n2 && o2.push(...R(t2[0][0], t2[0][1], t2[1][0], t2[1][1], s2, true, true));\n  return o2;\n}\n__name(q, \"q\");\nfunction F(t2, e2, s2, n2, o2, a2, h2, r2) {\n  const i2 = [], c2 = [];\n  if (0 === r2.roughness) {\n    t2 /= 4, c2.push([e2 + n2 * Math.cos(-t2), s2 + o2 * Math.sin(-t2)]);\n    for (let a3 = 0; a3 <= 2 * Math.PI; a3 += t2) {\n      const t3 = [e2 + n2 * Math.cos(a3), s2 + o2 * Math.sin(a3)];\n      i2.push(t3), c2.push(t3);\n    }\n    c2.push([e2 + n2 * Math.cos(0), s2 + o2 * Math.sin(0)]), c2.push([e2 + n2 * Math.cos(t2), s2 + o2 * Math.sin(t2)]);\n  } else {\n    const l2 = G(0.5, r2) - Math.PI / 2;\n    c2.push([G(a2, r2) + e2 + 0.9 * n2 * Math.cos(l2 - t2), G(a2, r2) + s2 + 0.9 * o2 * Math.sin(l2 - t2)]);\n    const u2 = 2 * Math.PI + l2 - 0.01;\n    for (let h3 = l2; h3 < u2; h3 += t2) {\n      const t3 = [G(a2, r2) + e2 + n2 * Math.cos(h3), G(a2, r2) + s2 + o2 * Math.sin(h3)];\n      i2.push(t3), c2.push(t3);\n    }\n    c2.push([G(a2, r2) + e2 + n2 * Math.cos(l2 + 2 * Math.PI + 0.5 * h2), G(a2, r2) + s2 + o2 * Math.sin(l2 + 2 * Math.PI + 0.5 * h2)]), c2.push([G(a2, r2) + e2 + 0.98 * n2 * Math.cos(l2 + h2), G(a2, r2) + s2 + 0.98 * o2 * Math.sin(l2 + h2)]), c2.push([G(a2, r2) + e2 + 0.9 * n2 * Math.cos(l2 + 0.5 * h2), G(a2, r2) + s2 + 0.9 * o2 * Math.sin(l2 + 0.5 * h2)]);\n  }\n  return [c2, i2];\n}\n__name(F, \"F\");\nfunction V(t2, e2, s2, n2, o2, a2, h2, r2, i2) {\n  const c2 = a2 + G(0.1, i2), l2 = [];\n  l2.push([G(r2, i2) + e2 + 0.9 * n2 * Math.cos(c2 - t2), G(r2, i2) + s2 + 0.9 * o2 * Math.sin(c2 - t2)]);\n  for (let a3 = c2; a3 <= h2; a3 += t2) l2.push([G(r2, i2) + e2 + n2 * Math.cos(a3), G(r2, i2) + s2 + o2 * Math.sin(a3)]);\n  return l2.push([e2 + n2 * Math.cos(h2), s2 + o2 * Math.sin(h2)]), l2.push([e2 + n2 * Math.cos(h2), s2 + o2 * Math.sin(h2)]), q(l2, null, i2);\n}\n__name(V, \"V\");\nfunction Z(t2, e2, s2, n2, o2, a2, h2, r2) {\n  const i2 = [], c2 = [r2.maxRandomnessOffset || 1, (r2.maxRandomnessOffset || 1) + 0.3];\n  let l2 = [0, 0];\n  const u2 = r2.disableMultiStroke ? 1 : 2, p2 = r2.preserveVertices;\n  for (let f2 = 0; f2 < u2; f2++) 0 === f2 ? i2.push({ op: \"move\", data: [h2[0], h2[1]] }) : i2.push({ op: \"move\", data: [h2[0] + (p2 ? 0 : G(c2[0], r2)), h2[1] + (p2 ? 0 : G(c2[0], r2))] }), l2 = p2 ? [o2, a2] : [o2 + G(c2[f2], r2), a2 + G(c2[f2], r2)], i2.push({ op: \"bcurveTo\", data: [t2 + G(c2[f2], r2), e2 + G(c2[f2], r2), s2 + G(c2[f2], r2), n2 + G(c2[f2], r2), l2[0], l2[1]] });\n  return i2;\n}\n__name(Z, \"Z\");\nfunction Q(t2) {\n  return [...t2];\n}\n__name(Q, \"Q\");\nfunction H(t2, e2 = 0) {\n  const s2 = t2.length;\n  if (s2 < 3) throw new Error(\"A curve must have at least three points.\");\n  const n2 = [];\n  if (3 === s2) n2.push(Q(t2[0]), Q(t2[1]), Q(t2[2]), Q(t2[2]));\n  else {\n    const s3 = [];\n    s3.push(t2[0], t2[0]);\n    for (let e3 = 1; e3 < t2.length; e3++) s3.push(t2[e3]), e3 === t2.length - 1 && s3.push(t2[e3]);\n    const o2 = [], a2 = 1 - e2;\n    n2.push(Q(s3[0]));\n    for (let t3 = 1; t3 + 2 < s3.length; t3++) {\n      const e3 = s3[t3];\n      o2[0] = [e3[0], e3[1]], o2[1] = [e3[0] + (a2 * s3[t3 + 1][0] - a2 * s3[t3 - 1][0]) / 6, e3[1] + (a2 * s3[t3 + 1][1] - a2 * s3[t3 - 1][1]) / 6], o2[2] = [s3[t3 + 1][0] + (a2 * s3[t3][0] - a2 * s3[t3 + 2][0]) / 6, s3[t3 + 1][1] + (a2 * s3[t3][1] - a2 * s3[t3 + 2][1]) / 6], o2[3] = [s3[t3 + 1][0], s3[t3 + 1][1]], n2.push(o2[1], o2[2], o2[3]);\n    }\n  }\n  return n2;\n}\n__name(H, \"H\");\nfunction N(t2, e2) {\n  return Math.pow(t2[0] - e2[0], 2) + Math.pow(t2[1] - e2[1], 2);\n}\n__name(N, \"N\");\nfunction B(t2, e2, s2) {\n  const n2 = N(e2, s2);\n  if (0 === n2) return N(t2, e2);\n  let o2 = ((t2[0] - e2[0]) * (s2[0] - e2[0]) + (t2[1] - e2[1]) * (s2[1] - e2[1])) / n2;\n  return o2 = Math.max(0, Math.min(1, o2)), N(t2, J(e2, s2, o2));\n}\n__name(B, \"B\");\nfunction J(t2, e2, s2) {\n  return [t2[0] + (e2[0] - t2[0]) * s2, t2[1] + (e2[1] - t2[1]) * s2];\n}\n__name(J, \"J\");\nfunction K(t2, e2, s2, n2) {\n  const o2 = n2 || [];\n  if (function(t3, e3) {\n    const s3 = t3[e3 + 0], n3 = t3[e3 + 1], o3 = t3[e3 + 2], a3 = t3[e3 + 3];\n    let h3 = 3 * n3[0] - 2 * s3[0] - a3[0];\n    h3 *= h3;\n    let r2 = 3 * n3[1] - 2 * s3[1] - a3[1];\n    r2 *= r2;\n    let i2 = 3 * o3[0] - 2 * a3[0] - s3[0];\n    i2 *= i2;\n    let c2 = 3 * o3[1] - 2 * a3[1] - s3[1];\n    return c2 *= c2, h3 < i2 && (h3 = i2), r2 < c2 && (r2 = c2), h3 + r2;\n  }(t2, e2) < s2) {\n    const s3 = t2[e2 + 0];\n    if (o2.length) {\n      (a2 = o2[o2.length - 1], h2 = s3, Math.sqrt(N(a2, h2))) > 1 && o2.push(s3);\n    } else o2.push(s3);\n    o2.push(t2[e2 + 3]);\n  } else {\n    const n3 = 0.5, a3 = t2[e2 + 0], h3 = t2[e2 + 1], r2 = t2[e2 + 2], i2 = t2[e2 + 3], c2 = J(a3, h3, n3), l2 = J(h3, r2, n3), u2 = J(r2, i2, n3), p2 = J(c2, l2, n3), f2 = J(l2, u2, n3), d2 = J(p2, f2, n3);\n    K([a3, c2, p2, d2], 0, s2, o2), K([d2, f2, u2, i2], 0, s2, o2);\n  }\n  var a2, h2;\n  return o2;\n}\n__name(K, \"K\");\nfunction U(t2, e2) {\n  return X(t2, 0, t2.length, e2);\n}\n__name(U, \"U\");\nfunction X(t2, e2, s2, n2, o2) {\n  const a2 = o2 || [], h2 = t2[e2], r2 = t2[s2 - 1];\n  let i2 = 0, c2 = 1;\n  for (let n3 = e2 + 1; n3 < s2 - 1; ++n3) {\n    const e3 = B(t2[n3], h2, r2);\n    e3 > i2 && (i2 = e3, c2 = n3);\n  }\n  return Math.sqrt(i2) > n2 ? (X(t2, e2, c2 + 1, n2, a2), X(t2, c2, s2, n2, a2)) : (a2.length || a2.push(h2), a2.push(r2)), a2;\n}\n__name(X, \"X\");\nfunction Y(t2, e2 = 0.15, s2) {\n  const n2 = [], o2 = (t2.length - 1) / 3;\n  for (let s3 = 0; s3 < o2; s3++) {\n    K(t2, 3 * s3, e2, n2);\n  }\n  return s2 && s2 > 0 ? X(n2, 0, n2.length, s2) : n2;\n}\n__name(Y, \"Y\");\nvar tt = \"none\";\nvar et = class {\n  static {\n    __name(this, \"et\");\n  }\n  constructor(t2) {\n    this.defaultOptions = { maxRandomnessOffset: 2, roughness: 1, bowing: 1, stroke: \"#000\", strokeWidth: 1, curveTightness: 0, curveFitting: 0.95, curveStepCount: 9, fillStyle: \"hachure\", fillWeight: -1, hachureAngle: -41, hachureGap: -1, dashOffset: -1, dashGap: -1, zigzagOffset: -1, seed: 0, disableMultiStroke: false, disableMultiStrokeFill: false, preserveVertices: false, fillShapeRoughnessGain: 0.8 }, this.config = t2 || {}, this.config.options && (this.defaultOptions = this._o(this.config.options));\n  }\n  static newSeed() {\n    return Math.floor(Math.random() * 2 ** 31);\n  }\n  _o(t2) {\n    return t2 ? Object.assign({}, this.defaultOptions, t2) : this.defaultOptions;\n  }\n  _d(t2, e2, s2) {\n    return { shape: t2, sets: e2 || [], options: s2 || this.defaultOptions };\n  }\n  line(t2, e2, s2, n2, o2) {\n    const a2 = this._o(o2);\n    return this._d(\"line\", [v(t2, e2, s2, n2, a2)], a2);\n  }\n  rectangle(t2, e2, s2, n2, o2) {\n    const a2 = this._o(o2), h2 = [], r2 = O(t2, e2, s2, n2, a2);\n    if (a2.fill) {\n      const o3 = [[t2, e2], [t2 + s2, e2], [t2 + s2, e2 + n2], [t2, e2 + n2]];\n      \"solid\" === a2.fillStyle ? h2.push(I([o3], a2)) : h2.push(C([o3], a2));\n    }\n    return a2.stroke !== tt && h2.push(r2), this._d(\"rectangle\", h2, a2);\n  }\n  ellipse(t2, e2, s2, n2, o2) {\n    const a2 = this._o(o2), h2 = [], r2 = T(s2, n2, a2), i2 = D(t2, e2, a2, r2);\n    if (a2.fill) if (\"solid\" === a2.fillStyle) {\n      const s3 = D(t2, e2, a2, r2).opset;\n      s3.type = \"fillPath\", h2.push(s3);\n    } else h2.push(C([i2.estimatedPoints], a2));\n    return a2.stroke !== tt && h2.push(i2.opset), this._d(\"ellipse\", h2, a2);\n  }\n  circle(t2, e2, s2, n2) {\n    const o2 = this.ellipse(t2, e2, s2, s2, n2);\n    return o2.shape = \"circle\", o2;\n  }\n  linearPath(t2, e2) {\n    const s2 = this._o(e2);\n    return this._d(\"linearPath\", [S(t2, false, s2)], s2);\n  }\n  arc(t2, e2, s2, n2, o2, a2, h2 = false, r2) {\n    const i2 = this._o(r2), c2 = [], l2 = A(t2, e2, s2, n2, o2, a2, h2, true, i2);\n    if (h2 && i2.fill) if (\"solid\" === i2.fillStyle) {\n      const h3 = Object.assign({}, i2);\n      h3.disableMultiStroke = true;\n      const r3 = A(t2, e2, s2, n2, o2, a2, true, false, h3);\n      r3.type = \"fillPath\", c2.push(r3);\n    } else c2.push(function(t3, e3, s3, n3, o3, a3, h3) {\n      const r3 = t3, i3 = e3;\n      let c3 = Math.abs(s3 / 2), l3 = Math.abs(n3 / 2);\n      c3 += G(0.01 * c3, h3), l3 += G(0.01 * l3, h3);\n      let u2 = o3, p2 = a3;\n      for (; u2 < 0; ) u2 += 2 * Math.PI, p2 += 2 * Math.PI;\n      p2 - u2 > 2 * Math.PI && (u2 = 0, p2 = 2 * Math.PI);\n      const f2 = (p2 - u2) / h3.curveStepCount, d2 = [];\n      for (let t4 = u2; t4 <= p2; t4 += f2) d2.push([r3 + c3 * Math.cos(t4), i3 + l3 * Math.sin(t4)]);\n      return d2.push([r3 + c3 * Math.cos(p2), i3 + l3 * Math.sin(p2)]), d2.push([r3, i3]), C([d2], h3);\n    }(t2, e2, s2, n2, o2, a2, i2));\n    return i2.stroke !== tt && c2.push(l2), this._d(\"arc\", c2, i2);\n  }\n  curve(t2, e2) {\n    const s2 = this._o(e2), n2 = [], o2 = L(t2, s2);\n    if (s2.fill && s2.fill !== tt) if (\"solid\" === s2.fillStyle) {\n      const e3 = L(t2, Object.assign(Object.assign({}, s2), { disableMultiStroke: true, roughness: s2.roughness ? s2.roughness + s2.fillShapeRoughnessGain : 0 }));\n      n2.push({ type: \"fillPath\", ops: this._mergedShape(e3.ops) });\n    } else {\n      const e3 = [], o3 = t2;\n      if (o3.length) {\n        const t3 = \"number\" == typeof o3[0][0] ? [o3] : o3;\n        for (const n3 of t3) n3.length < 3 ? e3.push(...n3) : 3 === n3.length ? e3.push(...Y(H([n3[0], n3[0], n3[1], n3[2]]), 10, (1 + s2.roughness) / 2)) : e3.push(...Y(H(n3), 10, (1 + s2.roughness) / 2));\n      }\n      e3.length && n2.push(C([e3], s2));\n    }\n    return s2.stroke !== tt && n2.push(o2), this._d(\"curve\", n2, s2);\n  }\n  polygon(t2, e2) {\n    const s2 = this._o(e2), n2 = [], o2 = S(t2, true, s2);\n    return s2.fill && (\"solid\" === s2.fillStyle ? n2.push(I([t2], s2)) : n2.push(C([t2], s2))), s2.stroke !== tt && n2.push(o2), this._d(\"polygon\", n2, s2);\n  }\n  path(t2, e2) {\n    const s2 = this._o(e2), n2 = [];\n    if (!t2) return this._d(\"path\", n2, s2);\n    t2 = (t2 || \"\").replace(/\\n/g, \" \").replace(/(-\\s)/g, \"-\").replace(\"/(ss)/g\", \" \");\n    const o2 = s2.fill && \"transparent\" !== s2.fill && s2.fill !== tt, a2 = s2.stroke !== tt, h2 = !!(s2.simplification && s2.simplification < 1), r2 = function(t3, e3, s3) {\n      const n3 = m(y(b(t3))), o3 = [];\n      let a3 = [], h3 = [0, 0], r3 = [];\n      const i3 = /* @__PURE__ */ __name(() => {\n        r3.length >= 4 && a3.push(...Y(r3, e3)), r3 = [];\n      }, \"i\"), c2 = /* @__PURE__ */ __name(() => {\n        i3(), a3.length && (o3.push(a3), a3 = []);\n      }, \"c\");\n      for (const { key: t4, data: e4 } of n3) switch (t4) {\n        case \"M\":\n          c2(), h3 = [e4[0], e4[1]], a3.push(h3);\n          break;\n        case \"L\":\n          i3(), a3.push([e4[0], e4[1]]);\n          break;\n        case \"C\":\n          if (!r3.length) {\n            const t5 = a3.length ? a3[a3.length - 1] : h3;\n            r3.push([t5[0], t5[1]]);\n          }\n          r3.push([e4[0], e4[1]]), r3.push([e4[2], e4[3]]), r3.push([e4[4], e4[5]]);\n          break;\n        case \"Z\":\n          i3(), a3.push([h3[0], h3[1]]);\n      }\n      if (c2(), !s3) return o3;\n      const l2 = [];\n      for (const t4 of o3) {\n        const e4 = U(t4, s3);\n        e4.length && l2.push(e4);\n      }\n      return l2;\n    }(t2, 1, h2 ? 4 - 4 * (s2.simplification || 1) : (1 + s2.roughness) / 2), i2 = _(t2, s2);\n    if (o2) if (\"solid\" === s2.fillStyle) if (1 === r2.length) {\n      const e3 = _(t2, Object.assign(Object.assign({}, s2), { disableMultiStroke: true, roughness: s2.roughness ? s2.roughness + s2.fillShapeRoughnessGain : 0 }));\n      n2.push({ type: \"fillPath\", ops: this._mergedShape(e3.ops) });\n    } else n2.push(I(r2, s2));\n    else n2.push(C(r2, s2));\n    return a2 && (h2 ? r2.forEach((t3) => {\n      n2.push(S(t3, false, s2));\n    }) : n2.push(i2)), this._d(\"path\", n2, s2);\n  }\n  opsToPath(t2, e2) {\n    let s2 = \"\";\n    for (const n2 of t2.ops) {\n      const t3 = \"number\" == typeof e2 && e2 >= 0 ? n2.data.map((t4) => +t4.toFixed(e2)) : n2.data;\n      switch (n2.op) {\n        case \"move\":\n          s2 += `M${t3[0]} ${t3[1]} `;\n          break;\n        case \"bcurveTo\":\n          s2 += `C${t3[0]} ${t3[1]}, ${t3[2]} ${t3[3]}, ${t3[4]} ${t3[5]} `;\n          break;\n        case \"lineTo\":\n          s2 += `L${t3[0]} ${t3[1]} `;\n      }\n    }\n    return s2.trim();\n  }\n  toPaths(t2) {\n    const e2 = t2.sets || [], s2 = t2.options || this.defaultOptions, n2 = [];\n    for (const t3 of e2) {\n      let e3 = null;\n      switch (t3.type) {\n        case \"path\":\n          e3 = { d: this.opsToPath(t3), stroke: s2.stroke, strokeWidth: s2.strokeWidth, fill: tt };\n          break;\n        case \"fillPath\":\n          e3 = { d: this.opsToPath(t3), stroke: tt, strokeWidth: 0, fill: s2.fill || tt };\n          break;\n        case \"fillSketch\":\n          e3 = this.fillSketch(t3, s2);\n      }\n      e3 && n2.push(e3);\n    }\n    return n2;\n  }\n  fillSketch(t2, e2) {\n    let s2 = e2.fillWeight;\n    return s2 < 0 && (s2 = e2.strokeWidth / 2), { d: this.opsToPath(t2), stroke: e2.fill || tt, strokeWidth: s2, fill: tt };\n  }\n  _mergedShape(t2) {\n    return t2.filter((t3, e2) => 0 === e2 || \"move\" !== t3.op);\n  }\n};\nvar st = class {\n  static {\n    __name(this, \"st\");\n  }\n  constructor(t2, e2) {\n    this.canvas = t2, this.ctx = this.canvas.getContext(\"2d\"), this.gen = new et(e2);\n  }\n  draw(t2) {\n    const e2 = t2.sets || [], s2 = t2.options || this.getDefaultOptions(), n2 = this.ctx, o2 = t2.options.fixedDecimalPlaceDigits;\n    for (const a2 of e2) switch (a2.type) {\n      case \"path\":\n        n2.save(), n2.strokeStyle = \"none\" === s2.stroke ? \"transparent\" : s2.stroke, n2.lineWidth = s2.strokeWidth, s2.strokeLineDash && n2.setLineDash(s2.strokeLineDash), s2.strokeLineDashOffset && (n2.lineDashOffset = s2.strokeLineDashOffset), this._drawToContext(n2, a2, o2), n2.restore();\n        break;\n      case \"fillPath\": {\n        n2.save(), n2.fillStyle = s2.fill || \"\";\n        const e3 = \"curve\" === t2.shape || \"polygon\" === t2.shape || \"path\" === t2.shape ? \"evenodd\" : \"nonzero\";\n        this._drawToContext(n2, a2, o2, e3), n2.restore();\n        break;\n      }\n      case \"fillSketch\":\n        this.fillSketch(n2, a2, s2);\n    }\n  }\n  fillSketch(t2, e2, s2) {\n    let n2 = s2.fillWeight;\n    n2 < 0 && (n2 = s2.strokeWidth / 2), t2.save(), s2.fillLineDash && t2.setLineDash(s2.fillLineDash), s2.fillLineDashOffset && (t2.lineDashOffset = s2.fillLineDashOffset), t2.strokeStyle = s2.fill || \"\", t2.lineWidth = n2, this._drawToContext(t2, e2, s2.fixedDecimalPlaceDigits), t2.restore();\n  }\n  _drawToContext(t2, e2, s2, n2 = \"nonzero\") {\n    t2.beginPath();\n    for (const n3 of e2.ops) {\n      const e3 = \"number\" == typeof s2 && s2 >= 0 ? n3.data.map((t3) => +t3.toFixed(s2)) : n3.data;\n      switch (n3.op) {\n        case \"move\":\n          t2.moveTo(e3[0], e3[1]);\n          break;\n        case \"bcurveTo\":\n          t2.bezierCurveTo(e3[0], e3[1], e3[2], e3[3], e3[4], e3[5]);\n          break;\n        case \"lineTo\":\n          t2.lineTo(e3[0], e3[1]);\n      }\n    }\n    \"fillPath\" === e2.type ? t2.fill(n2) : t2.stroke();\n  }\n  get generator() {\n    return this.gen;\n  }\n  getDefaultOptions() {\n    return this.gen.defaultOptions;\n  }\n  line(t2, e2, s2, n2, o2) {\n    const a2 = this.gen.line(t2, e2, s2, n2, o2);\n    return this.draw(a2), a2;\n  }\n  rectangle(t2, e2, s2, n2, o2) {\n    const a2 = this.gen.rectangle(t2, e2, s2, n2, o2);\n    return this.draw(a2), a2;\n  }\n  ellipse(t2, e2, s2, n2, o2) {\n    const a2 = this.gen.ellipse(t2, e2, s2, n2, o2);\n    return this.draw(a2), a2;\n  }\n  circle(t2, e2, s2, n2) {\n    const o2 = this.gen.circle(t2, e2, s2, n2);\n    return this.draw(o2), o2;\n  }\n  linearPath(t2, e2) {\n    const s2 = this.gen.linearPath(t2, e2);\n    return this.draw(s2), s2;\n  }\n  polygon(t2, e2) {\n    const s2 = this.gen.polygon(t2, e2);\n    return this.draw(s2), s2;\n  }\n  arc(t2, e2, s2, n2, o2, a2, h2 = false, r2) {\n    const i2 = this.gen.arc(t2, e2, s2, n2, o2, a2, h2, r2);\n    return this.draw(i2), i2;\n  }\n  curve(t2, e2) {\n    const s2 = this.gen.curve(t2, e2);\n    return this.draw(s2), s2;\n  }\n  path(t2, e2) {\n    const s2 = this.gen.path(t2, e2);\n    return this.draw(s2), s2;\n  }\n};\nvar nt = \"http://www.w3.org/2000/svg\";\nvar ot = class {\n  static {\n    __name(this, \"ot\");\n  }\n  constructor(t2, e2) {\n    this.svg = t2, this.gen = new et(e2);\n  }\n  draw(t2) {\n    const e2 = t2.sets || [], s2 = t2.options || this.getDefaultOptions(), n2 = this.svg.ownerDocument || window.document, o2 = n2.createElementNS(nt, \"g\"), a2 = t2.options.fixedDecimalPlaceDigits;\n    for (const h2 of e2) {\n      let e3 = null;\n      switch (h2.type) {\n        case \"path\":\n          e3 = n2.createElementNS(nt, \"path\"), e3.setAttribute(\"d\", this.opsToPath(h2, a2)), e3.setAttribute(\"stroke\", s2.stroke), e3.setAttribute(\"stroke-width\", s2.strokeWidth + \"\"), e3.setAttribute(\"fill\", \"none\"), s2.strokeLineDash && e3.setAttribute(\"stroke-dasharray\", s2.strokeLineDash.join(\" \").trim()), s2.strokeLineDashOffset && e3.setAttribute(\"stroke-dashoffset\", `${s2.strokeLineDashOffset}`);\n          break;\n        case \"fillPath\":\n          e3 = n2.createElementNS(nt, \"path\"), e3.setAttribute(\"d\", this.opsToPath(h2, a2)), e3.setAttribute(\"stroke\", \"none\"), e3.setAttribute(\"stroke-width\", \"0\"), e3.setAttribute(\"fill\", s2.fill || \"\"), \"curve\" !== t2.shape && \"polygon\" !== t2.shape || e3.setAttribute(\"fill-rule\", \"evenodd\");\n          break;\n        case \"fillSketch\":\n          e3 = this.fillSketch(n2, h2, s2);\n      }\n      e3 && o2.appendChild(e3);\n    }\n    return o2;\n  }\n  fillSketch(t2, e2, s2) {\n    let n2 = s2.fillWeight;\n    n2 < 0 && (n2 = s2.strokeWidth / 2);\n    const o2 = t2.createElementNS(nt, \"path\");\n    return o2.setAttribute(\"d\", this.opsToPath(e2, s2.fixedDecimalPlaceDigits)), o2.setAttribute(\"stroke\", s2.fill || \"\"), o2.setAttribute(\"stroke-width\", n2 + \"\"), o2.setAttribute(\"fill\", \"none\"), s2.fillLineDash && o2.setAttribute(\"stroke-dasharray\", s2.fillLineDash.join(\" \").trim()), s2.fillLineDashOffset && o2.setAttribute(\"stroke-dashoffset\", `${s2.fillLineDashOffset}`), o2;\n  }\n  get generator() {\n    return this.gen;\n  }\n  getDefaultOptions() {\n    return this.gen.defaultOptions;\n  }\n  opsToPath(t2, e2) {\n    return this.gen.opsToPath(t2, e2);\n  }\n  line(t2, e2, s2, n2, o2) {\n    const a2 = this.gen.line(t2, e2, s2, n2, o2);\n    return this.draw(a2);\n  }\n  rectangle(t2, e2, s2, n2, o2) {\n    const a2 = this.gen.rectangle(t2, e2, s2, n2, o2);\n    return this.draw(a2);\n  }\n  ellipse(t2, e2, s2, n2, o2) {\n    const a2 = this.gen.ellipse(t2, e2, s2, n2, o2);\n    return this.draw(a2);\n  }\n  circle(t2, e2, s2, n2) {\n    const o2 = this.gen.circle(t2, e2, s2, n2);\n    return this.draw(o2);\n  }\n  linearPath(t2, e2) {\n    const s2 = this.gen.linearPath(t2, e2);\n    return this.draw(s2);\n  }\n  polygon(t2, e2) {\n    const s2 = this.gen.polygon(t2, e2);\n    return this.draw(s2);\n  }\n  arc(t2, e2, s2, n2, o2, a2, h2 = false, r2) {\n    const i2 = this.gen.arc(t2, e2, s2, n2, o2, a2, h2, r2);\n    return this.draw(i2);\n  }\n  curve(t2, e2) {\n    const s2 = this.gen.curve(t2, e2);\n    return this.draw(s2);\n  }\n  path(t2, e2) {\n    const s2 = this.gen.path(t2, e2);\n    return this.draw(s2);\n  }\n};\nvar at = { canvas: /* @__PURE__ */ __name((t2, e2) => new st(t2, e2), \"canvas\"), svg: /* @__PURE__ */ __name((t2, e2) => new ot(t2, e2), \"svg\"), generator: /* @__PURE__ */ __name((t2) => new et(t2), \"generator\"), newSeed: /* @__PURE__ */ __name(() => et.newSeed(), \"newSeed\") };\n\n// src/rendering-util/rendering-elements/intersect/intersect-rect.js\nvar intersectRect = /* @__PURE__ */ __name((node, point) => {\n  var x2 = node.x;\n  var y2 = node.y;\n  var dx = point.x - x2;\n  var dy = point.y - y2;\n  var w2 = node.width / 2;\n  var h2 = node.height / 2;\n  var sx, sy;\n  if (Math.abs(dy) * w2 > Math.abs(dx) * h2) {\n    if (dy < 0) {\n      h2 = -h2;\n    }\n    sx = dy === 0 ? 0 : h2 * dx / dy;\n    sy = h2;\n  } else {\n    if (dx < 0) {\n      w2 = -w2;\n    }\n    sx = w2;\n    sy = dx === 0 ? 0 : w2 * dy / dx;\n  }\n  return { x: x2 + sx, y: y2 + sy };\n}, \"intersectRect\");\nvar intersect_rect_default = intersectRect;\n\n// src/rendering-util/rendering-elements/createLabel.js\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n__name(applyStyle, \"applyStyle\");\nasync function addHtmlLabel(node) {\n  const fo = select_default(document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\"));\n  const div = fo.append(\"xhtml:div\");\n  const config = getConfig2();\n  let label = node.label;\n  if (node.label && hasKatex(node.label)) {\n    label = await renderKatexSanitized(node.label.replace(common_default.lineBreakRegex, \"\\n\"), config);\n  }\n  const labelClass = node.isNode ? \"nodeLabel\" : \"edgeLabel\";\n  const labelSpan = '<span class=\"' + labelClass + '\" ' + (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : \"\") + // codeql [js/html-constructed-from-input] : false positive\n  \">\" + label + \"</span>\";\n  div.html(sanitizeText(labelSpan, config));\n  applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  div.style(\"padding-right\", \"1px\");\n  div.style(\"white-space\", \"nowrap\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n  return fo.node();\n}\n__name(addHtmlLabel, \"addHtmlLabel\");\nvar createLabel = /* @__PURE__ */ __name(async (_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || \"\";\n  if (typeof vertexText === \"object\") {\n    vertexText = vertexText[0];\n  }\n  if (evaluate(getConfig2().flowchart.htmlLabels)) {\n    vertexText = vertexText.replace(/\\\\n|\\n/g, \"<br />\");\n    log.info(\"vertexText\" + vertexText);\n    const node = {\n      isNode,\n      label: decodeEntities(vertexText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        (s2) => `<i class='${s2.replace(\":\", \" \")}'></i>`\n      ),\n      labelStyle: style ? style.replace(\"fill:\", \"color:\") : style\n    };\n    let vertexNode = await addHtmlLabel(node);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    svgLabel.setAttribute(\"style\", style.replace(\"color:\", \"fill:\"));\n    let rows = [];\n    if (typeof vertexText === \"string\") {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n    for (const row of rows) {\n      const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n      tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n      tspan.setAttribute(\"dy\", \"1em\");\n      tspan.setAttribute(\"x\", \"0\");\n      if (isTitle) {\n        tspan.setAttribute(\"class\", \"title-row\");\n      } else {\n        tspan.setAttribute(\"class\", \"row\");\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n}, \"createLabel\");\nvar createLabel_default = createLabel;\n\n// src/rendering-util/rendering-elements/shapes/roundedRectPath.ts\nvar createRoundedRectPathD = /* @__PURE__ */ __name((x2, y2, totalWidth, totalHeight, radius) => [\n  \"M\",\n  x2 + radius,\n  y2,\n  // Move to the first point\n  \"H\",\n  x2 + totalWidth - radius,\n  // Draw horizontal line to the beginning of the right corner\n  \"A\",\n  radius,\n  radius,\n  0,\n  0,\n  1,\n  x2 + totalWidth,\n  y2 + radius,\n  // Draw arc to the right top corner\n  \"V\",\n  y2 + totalHeight - radius,\n  // Draw vertical line down to the beginning of the right bottom corner\n  \"A\",\n  radius,\n  radius,\n  0,\n  0,\n  1,\n  x2 + totalWidth - radius,\n  y2 + totalHeight,\n  // Draw arc to the right bottom corner\n  \"H\",\n  x2 + radius,\n  // Draw horizontal line to the beginning of the left bottom corner\n  \"A\",\n  radius,\n  radius,\n  0,\n  0,\n  1,\n  x2,\n  y2 + totalHeight - radius,\n  // Draw arc to the left bottom corner\n  \"V\",\n  y2 + radius,\n  // Draw vertical line up to the beginning of the left top corner\n  \"A\",\n  radius,\n  radius,\n  0,\n  0,\n  1,\n  x2 + radius,\n  y2,\n  // Draw arc to the left top corner\n  \"Z\"\n  // Close the path\n].join(\" \"), \"createRoundedRectPathD\");\n\n// src/rendering-util/rendering-elements/clusters.js\nvar rect = /* @__PURE__ */ __name(async (parent, node) => {\n  log.info(\"Creating subgraph rect for \", node.id, node);\n  const siteConfig = getConfig2();\n  const { themeVariables, handDrawnSeed } = siteConfig;\n  const { clusterBkg, clusterBorder } = themeVariables;\n  const { labelStyles, nodeStyles, borderStyles, backgroundStyles } = styles2String(node);\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster \" + node.cssClasses).attr(\"id\", node.id).attr(\"data-look\", node.look);\n  const useHtmlLabels = evaluate(siteConfig.flowchart.htmlLabels);\n  const labelEl = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label \");\n  const text2 = await createText(labelEl, node.label, {\n    style: node.labelStyle,\n    useHtmlLabels,\n    isNode: true\n  });\n  let bbox = text2.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text2.children[0];\n    const dv = select_default(text2);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (width - node.width) / 2 - node.padding;\n  } else {\n    node.diff = -node.padding;\n  }\n  const height = node.height;\n  const x2 = node.x - width / 2;\n  const y2 = node.y - height / 2;\n  log.trace(\"Data \", node, JSON.stringify(node));\n  let rect2;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {\n      roughness: 0.7,\n      fill: clusterBkg,\n      // fill: 'red',\n      stroke: clusterBorder,\n      fillWeight: 3,\n      seed: handDrawnSeed\n    });\n    const roughNode = rc.path(createRoundedRectPathD(x2, y2, width, height, 0), options);\n    rect2 = shapeSvg.insert(() => {\n      log.debug(\"Rough node insert CXC\", roughNode);\n      return roughNode;\n    }, \":first-child\");\n    rect2.select(\"path:nth-child(2)\").attr(\"style\", borderStyles.join(\";\"));\n    rect2.select(\"path\").attr(\"style\", backgroundStyles.join(\";\").replace(\"fill\", \"stroke\"));\n  } else {\n    rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n    rect2.attr(\"style\", nodeStyles).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", x2).attr(\"y\", y2).attr(\"width\", width).attr(\"height\", height);\n  }\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  labelEl.attr(\n    \"transform\",\n    // This puts the label on top of the box instead of inside it\n    `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n  );\n  if (labelStyles) {\n    const span = labelEl.select(\"span\");\n    if (span) {\n      span.attr(\"style\", labelStyles);\n    }\n  }\n  const rectBox = rect2.node().getBBox();\n  node.offsetX = 0;\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.offsetY = bbox.height - node.padding / 2;\n  node.intersect = function(point) {\n    return intersect_rect_default(node, point);\n  };\n  return { cluster: shapeSvg, labelBBox: bbox };\n}, \"rect\");\nvar noteGroup = /* @__PURE__ */ __name((parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"note-cluster\").attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding).attr(\"fill\", \"none\");\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersect_rect_default(node, point);\n  };\n  return { cluster: shapeSvg, labelBBox: { width: 0, height: 0 } };\n}, \"noteGroup\");\nvar roundedWithTitle = /* @__PURE__ */ __name(async (parent, node) => {\n  const siteConfig = getConfig2();\n  const { themeVariables, handDrawnSeed } = siteConfig;\n  const { altBackground, compositeBackground, compositeTitleBackground, nodeBorder } = themeVariables;\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.cssClasses).attr(\"id\", node.id).attr(\"data-id\", node.id).attr(\"data-look\", node.look);\n  const outerRectG = shapeSvg.insert(\"g\", \":first-child\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  let innerRect = shapeSvg.append(\"rect\");\n  const text2 = label.node().appendChild(await createLabel_default(node.label, node.labelStyle, void 0, true));\n  let bbox = text2.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text2.children[0];\n    const dv = select_default(text2);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = (node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width) + padding;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (width - node.width) / 2 - node.padding;\n  } else {\n    node.diff = -node.padding;\n  }\n  const height = node.height + padding;\n  const innerHeight = node.height + padding - bbox.height - 6;\n  const x2 = node.x - width / 2;\n  const y2 = node.y - height / 2;\n  node.width = width;\n  const innerY = node.y - node.height / 2 - halfPadding + bbox.height + 2;\n  let rect2;\n  if (node.look === \"handDrawn\") {\n    const isAlt = node.cssClasses.includes(\"statediagram-cluster-alt\");\n    const rc = at.svg(shapeSvg);\n    const roughOuterNode = node.rx || node.ry ? rc.path(createRoundedRectPathD(x2, y2, width, height, 10), {\n      roughness: 0.7,\n      fill: compositeTitleBackground,\n      fillStyle: \"solid\",\n      stroke: nodeBorder,\n      seed: handDrawnSeed\n    }) : rc.rectangle(x2, y2, width, height, { seed: handDrawnSeed });\n    rect2 = shapeSvg.insert(() => roughOuterNode, \":first-child\");\n    const roughInnerNode = rc.rectangle(x2, innerY, width, innerHeight, {\n      fill: isAlt ? altBackground : compositeBackground,\n      fillStyle: isAlt ? \"hachure\" : \"solid\",\n      stroke: nodeBorder,\n      seed: handDrawnSeed\n    });\n    rect2 = shapeSvg.insert(() => roughOuterNode, \":first-child\");\n    innerRect = shapeSvg.insert(() => roughInnerNode);\n  } else {\n    rect2 = outerRectG.insert(\"rect\", \":first-child\");\n    const outerRectClass = \"outer\";\n    rect2.attr(\"class\", outerRectClass).attr(\"x\", x2).attr(\"y\", y2).attr(\"width\", width).attr(\"height\", height).attr(\"data-look\", node.look);\n    innerRect.attr(\"class\", \"inner\").attr(\"x\", x2).attr(\"y\", innerY).attr(\"width\", width).attr(\"height\", innerHeight);\n  }\n  label.attr(\n    \"transform\",\n    `translate(${node.x - bbox.width / 2}, ${y2 + 1 - (evaluate(siteConfig.flowchart.htmlLabels) ? 0 : 3)})`\n  );\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.offsetX = 0;\n  node.offsetY = bbox.height - node.padding / 2;\n  node.labelBBox = bbox;\n  node.intersect = function(point) {\n    return intersect_rect_default(node, point);\n  };\n  return { cluster: shapeSvg, labelBBox: bbox };\n}, \"roundedWithTitle\");\nvar kanbanSection = /* @__PURE__ */ __name(async (parent, node) => {\n  log.info(\"Creating subgraph rect for \", node.id, node);\n  const siteConfig = getConfig2();\n  const { themeVariables, handDrawnSeed } = siteConfig;\n  const { clusterBkg, clusterBorder } = themeVariables;\n  const { labelStyles, nodeStyles, borderStyles, backgroundStyles } = styles2String(node);\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster \" + node.cssClasses).attr(\"id\", node.id).attr(\"data-look\", node.look);\n  const useHtmlLabels = evaluate(siteConfig.flowchart.htmlLabels);\n  const labelEl = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label \");\n  const text2 = await createText(labelEl, node.label, {\n    style: node.labelStyle,\n    useHtmlLabels,\n    isNode: true,\n    width: node.width\n  });\n  let bbox = text2.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text2.children[0];\n    const dv = select_default(text2);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (width - node.width) / 2 - node.padding;\n  } else {\n    node.diff = -node.padding;\n  }\n  const height = node.height;\n  const x2 = node.x - width / 2;\n  const y2 = node.y - height / 2;\n  log.trace(\"Data \", node, JSON.stringify(node));\n  let rect2;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {\n      roughness: 0.7,\n      fill: clusterBkg,\n      // fill: 'red',\n      stroke: clusterBorder,\n      fillWeight: 4,\n      seed: handDrawnSeed\n    });\n    const roughNode = rc.path(createRoundedRectPathD(x2, y2, width, height, node.rx), options);\n    rect2 = shapeSvg.insert(() => {\n      log.debug(\"Rough node insert CXC\", roughNode);\n      return roughNode;\n    }, \":first-child\");\n    rect2.select(\"path:nth-child(2)\").attr(\"style\", borderStyles.join(\";\"));\n    rect2.select(\"path\").attr(\"style\", backgroundStyles.join(\";\").replace(\"fill\", \"stroke\"));\n  } else {\n    rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n    rect2.attr(\"style\", nodeStyles).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", x2).attr(\"y\", y2).attr(\"width\", width).attr(\"height\", height);\n  }\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  labelEl.attr(\n    \"transform\",\n    // This puts the label on top of the box instead of inside it\n    `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n  );\n  if (labelStyles) {\n    const span = labelEl.select(\"span\");\n    if (span) {\n      span.attr(\"style\", labelStyles);\n    }\n  }\n  const rectBox = rect2.node().getBBox();\n  node.offsetX = 0;\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.offsetY = bbox.height - node.padding / 2;\n  node.intersect = function(point) {\n    return intersect_rect_default(node, point);\n  };\n  return { cluster: shapeSvg, labelBBox: bbox };\n}, \"kanbanSection\");\nvar divider = /* @__PURE__ */ __name((parent, node) => {\n  const siteConfig = getConfig2();\n  const { themeVariables, handDrawnSeed } = siteConfig;\n  const { nodeBorder } = themeVariables;\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.cssClasses).attr(\"id\", node.id).attr(\"data-look\", node.look);\n  const outerRectG = shapeSvg.insert(\"g\", \":first-child\");\n  const padding = 0 * node.padding;\n  const width = node.width + padding;\n  node.diff = -node.padding;\n  const height = node.height + padding;\n  const x2 = node.x - width / 2;\n  const y2 = node.y - height / 2;\n  node.width = width;\n  let rect2;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const roughOuterNode = rc.rectangle(x2, y2, width, height, {\n      fill: \"lightgrey\",\n      roughness: 0.5,\n      strokeLineDash: [5],\n      stroke: nodeBorder,\n      seed: handDrawnSeed\n    });\n    rect2 = shapeSvg.insert(() => roughOuterNode, \":first-child\");\n  } else {\n    rect2 = outerRectG.insert(\"rect\", \":first-child\");\n    const outerRectClass = \"divider\";\n    rect2.attr(\"class\", outerRectClass).attr(\"x\", x2).attr(\"y\", y2).attr(\"width\", width).attr(\"height\", height).attr(\"data-look\", node.look);\n  }\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.offsetX = 0;\n  node.offsetY = 0;\n  node.intersect = function(point) {\n    return intersect_rect_default(node, point);\n  };\n  return { cluster: shapeSvg, labelBBox: {} };\n}, \"divider\");\nvar squareRect = rect;\nvar shapes = {\n  rect,\n  squareRect,\n  roundedWithTitle,\n  noteGroup,\n  divider,\n  kanbanSection\n};\nvar clusterElems = /* @__PURE__ */ new Map();\nvar insertCluster = /* @__PURE__ */ __name(async (elem, node) => {\n  const shape = node.shape || \"rect\";\n  const cluster = await shapes[shape](elem, node);\n  clusterElems.set(node.id, cluster);\n  return cluster;\n}, \"insertCluster\");\nvar clear = /* @__PURE__ */ __name(() => {\n  clusterElems = /* @__PURE__ */ new Map();\n}, \"clear\");\n\n// src/rendering-util/rendering-elements/intersect/intersect-node.js\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n__name(intersectNode, \"intersectNode\");\nvar intersect_node_default = intersectNode;\n\n// src/rendering-util/rendering-elements/intersect/intersect-ellipse.js\nfunction intersectEllipse(node, rx, ry, point) {\n  var cx = node.x;\n  var cy = node.y;\n  var px = cx - point.x;\n  var py = cy - point.y;\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n  return { x: cx + dx, y: cy + dy };\n}\n__name(intersectEllipse, \"intersectEllipse\");\nvar intersect_ellipse_default = intersectEllipse;\n\n// src/rendering-util/rendering-elements/intersect/intersect-circle.js\nfunction intersectCircle(node, rx, point) {\n  return intersect_ellipse_default(node, rx, rx, point);\n}\n__name(intersectCircle, \"intersectCircle\");\nvar intersect_circle_default = intersectCircle;\n\n// src/rendering-util/rendering-elements/intersect/intersect-line.js\nfunction intersectLine(p1, p2, q1, q2) {\n  {\n    const a1 = p2.y - p1.y;\n    const b1 = p1.x - p2.x;\n    const c1 = p2.x * p1.y - p1.x * p2.y;\n    const r3 = a1 * q1.x + b1 * q1.y + c1;\n    const r4 = a1 * q2.x + b1 * q2.y + c1;\n    const epsilon = 1e-6;\n    if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n      return;\n    }\n    const a2 = q2.y - q1.y;\n    const b2 = q1.x - q2.x;\n    const c2 = q2.x * q1.y - q1.x * q2.y;\n    const r1 = a2 * p1.x + b2 * p1.y + c2;\n    const r2 = a2 * p2.x + b2 * p2.y + c2;\n    if (Math.abs(r1) < epsilon && Math.abs(r2) < epsilon && sameSign(r1, r2)) {\n      return;\n    }\n    const denom = a1 * b2 - a2 * b1;\n    if (denom === 0) {\n      return;\n    }\n    const offset = Math.abs(denom / 2);\n    let num = b1 * c2 - b2 * c1;\n    const x2 = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n    num = a2 * c1 - a1 * c2;\n    const y2 = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n    return { x: x2, y: y2 };\n  }\n}\n__name(intersectLine, \"intersectLine\");\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n__name(sameSign, \"sameSign\");\nvar intersect_line_default = intersectLine;\n\n// src/rendering-util/rendering-elements/intersect/intersect-polygon.js\nfunction intersectPolygon(node, polyPoints, point) {\n  let x1 = node.x;\n  let y1 = node.y;\n  let intersections = [];\n  let minX = Number.POSITIVE_INFINITY;\n  let minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === \"function\") {\n    polyPoints.forEach(function(entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n  let left = x1 - node.width / 2 - minX;\n  let top = y1 - node.height / 2 - minY;\n  for (let i2 = 0; i2 < polyPoints.length; i2++) {\n    let p1 = polyPoints[i2];\n    let p2 = polyPoints[i2 < polyPoints.length - 1 ? i2 + 1 : 0];\n    let intersect = intersect_line_default(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n  if (!intersections.length) {\n    return node;\n  }\n  if (intersections.length > 1) {\n    intersections.sort(function(p2, q2) {\n      let pdx = p2.x - point.x;\n      let pdy = p2.y - point.y;\n      let distp = Math.sqrt(pdx * pdx + pdy * pdy);\n      let qdx = q2.x - point.x;\n      let qdy = q2.y - point.y;\n      let distq = Math.sqrt(qdx * qdx + qdy * qdy);\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n__name(intersectPolygon, \"intersectPolygon\");\nvar intersect_polygon_default = intersectPolygon;\n\n// src/rendering-util/rendering-elements/intersect/index.js\nvar intersect_default = {\n  node: intersect_node_default,\n  circle: intersect_circle_default,\n  ellipse: intersect_ellipse_default,\n  polygon: intersect_polygon_default,\n  rect: intersect_rect_default\n};\n\n// src/rendering-util/rendering-elements/shapes/anchor.ts\nfunction anchor(parent, node) {\n  const { labelStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const classes = getNodeClasses(node);\n  let cssClasses = classes;\n  if (!classes) {\n    cssClasses = \"anchor\";\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", cssClasses).attr(\"id\", node.domId || node.id);\n  const radius = 1;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, { fill: \"black\", stroke: \"none\", fillStyle: \"solid\" });\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n  }\n  const roughNode = rc.circle(0, 0, radius * 2, options);\n  const circleElem = shapeSvg.insert(() => roughNode, \":first-child\");\n  circleElem.attr(\"class\", \"anchor\").attr(\"style\", handleUndefinedAttr(cssStyles));\n  updateNodeBounds(node, circleElem);\n  node.intersect = function(point) {\n    log.info(\"Circle intersect\", node, radius, point);\n    return intersect_default.circle(node, radius, point);\n  };\n  return shapeSvg;\n}\n__name(anchor, \"anchor\");\n\n// src/rendering-util/rendering-elements/shapes/bowTieRect.ts\nfunction generateArcPoints(x1, y1, x2, y2, rx, ry, clockwise) {\n  const numPoints = 20;\n  const midX = (x1 + x2) / 2;\n  const midY = (y1 + y2) / 2;\n  const angle = Math.atan2(y2 - y1, x2 - x1);\n  const dx = (x2 - x1) / 2;\n  const dy = (y2 - y1) / 2;\n  const transformedX = dx / rx;\n  const transformedY = dy / ry;\n  const distance = Math.sqrt(transformedX ** 2 + transformedY ** 2);\n  if (distance > 1) {\n    throw new Error(\"The given radii are too small to create an arc between the points.\");\n  }\n  const scaledCenterDistance = Math.sqrt(1 - distance ** 2);\n  const centerX = midX + scaledCenterDistance * ry * Math.sin(angle) * (clockwise ? -1 : 1);\n  const centerY = midY - scaledCenterDistance * rx * Math.cos(angle) * (clockwise ? -1 : 1);\n  const startAngle = Math.atan2((y1 - centerY) / ry, (x1 - centerX) / rx);\n  const endAngle = Math.atan2((y2 - centerY) / ry, (x2 - centerX) / rx);\n  let angleRange = endAngle - startAngle;\n  if (clockwise && angleRange < 0) {\n    angleRange += 2 * Math.PI;\n  }\n  if (!clockwise && angleRange > 0) {\n    angleRange -= 2 * Math.PI;\n  }\n  const points = [];\n  for (let i2 = 0; i2 < numPoints; i2++) {\n    const t2 = i2 / (numPoints - 1);\n    const angle2 = startAngle + t2 * angleRange;\n    const x3 = centerX + rx * Math.cos(angle2);\n    const y3 = centerY + ry * Math.sin(angle2);\n    points.push({ x: x3, y: y3 });\n  }\n  return points;\n}\n__name(generateArcPoints, \"generateArcPoints\");\nasync function bowTieRect(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = bbox.width + node.padding + 20;\n  const h2 = bbox.height + node.padding;\n  const ry = h2 / 2;\n  const rx = ry / (2.5 + h2 / 50);\n  const { cssStyles } = node;\n  const points = [\n    { x: w2 / 2, y: -h2 / 2 },\n    { x: -w2 / 2, y: -h2 / 2 },\n    ...generateArcPoints(-w2 / 2, -h2 / 2, -w2 / 2, h2 / 2, rx, ry, false),\n    { x: w2 / 2, y: h2 / 2 },\n    ...generateArcPoints(w2 / 2, h2 / 2, w2 / 2, -h2 / 2, rx, ry, true)\n  ];\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const bowTieRectPath = createPathFromPoints(points);\n  const bowTieRectShapePath = rc.path(bowTieRectPath, options);\n  const bowTieRectShape = shapeSvg.insert(() => bowTieRectShapePath, \":first-child\");\n  bowTieRectShape.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    bowTieRectShape.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    bowTieRectShape.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  bowTieRectShape.attr(\"transform\", `translate(${rx / 2}, 0)`);\n  updateNodeBounds(node, bowTieRectShape);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(bowTieRect, \"bowTieRect\");\n\n// src/rendering-util/rendering-elements/shapes/insertPolygonShape.ts\nfunction insertPolygonShape(parent, w2, h2, points) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\n    \"points\",\n    points.map(function(d2) {\n      return d2.x + \",\" + d2.y;\n    }).join(\" \")\n  ).attr(\"class\", \"label-container\").attr(\"transform\", \"translate(\" + -w2 / 2 + \",\" + h2 / 2 + \")\");\n}\n__name(insertPolygonShape, \"insertPolygonShape\");\n\n// src/rendering-util/rendering-elements/shapes/card.ts\nasync function card(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const h2 = bbox.height + node.padding;\n  const padding = 12;\n  const w2 = bbox.width + node.padding + padding;\n  const left = 0;\n  const right = w2;\n  const top = -h2;\n  const bottom = 0;\n  const points = [\n    { x: left + padding, y: top },\n    { x: right, y: top },\n    { x: right, y: bottom },\n    { x: left, y: bottom },\n    { x: left, y: top + padding },\n    { x: left + padding, y: top }\n  ];\n  let polygon;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const pathData = createPathFromPoints(points);\n    const roughNode = rc.path(pathData, options);\n    polygon = shapeSvg.insert(() => roughNode, \":first-child\").attr(\"transform\", `translate(${-w2 / 2}, ${h2 / 2})`);\n    if (cssStyles) {\n      polygon.attr(\"style\", cssStyles);\n    }\n  } else {\n    polygon = insertPolygonShape(shapeSvg, w2, h2, points);\n  }\n  if (nodeStyles) {\n    polygon.attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(card, \"card\");\n\n// src/rendering-util/rendering-elements/shapes/choice.ts\nfunction choice(parent, node) {\n  const { nodeStyles } = styles2String(node);\n  node.label = \"\";\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", getNodeClasses(node)).attr(\"id\", node.domId ?? node.id);\n  const { cssStyles } = node;\n  const s2 = Math.max(28, node.width ?? 0);\n  const points = [\n    { x: 0, y: s2 / 2 },\n    { x: s2 / 2, y: 0 },\n    { x: 0, y: -s2 / 2 },\n    { x: -s2 / 2, y: 0 }\n  ];\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const choicePath = createPathFromPoints(points);\n  const roughNode = rc.path(choicePath, options);\n  const choiceShape = shapeSvg.insert(() => roughNode, \":first-child\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    choiceShape.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    choiceShape.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  node.width = 28;\n  node.height = 28;\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(choice, \"choice\");\n\n// src/rendering-util/rendering-elements/shapes/circle.ts\nasync function circle(parent, node, options) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(parent, node, getNodeClasses(node));\n  const padding = options?.padding ?? halfPadding;\n  const radius = bbox.width / 2 + padding;\n  let circleElem;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options2 = userNodeOverrides(node, {});\n    const roughNode = rc.circle(0, 0, radius * 2, options2);\n    circleElem = shapeSvg.insert(() => roughNode, \":first-child\");\n    circleElem.attr(\"class\", \"basic label-container\").attr(\"style\", handleUndefinedAttr(cssStyles));\n  } else {\n    circleElem = shapeSvg.insert(\"circle\", \":first-child\").attr(\"class\", \"basic label-container\").attr(\"style\", nodeStyles).attr(\"r\", radius).attr(\"cx\", 0).attr(\"cy\", 0);\n  }\n  updateNodeBounds(node, circleElem);\n  node.calcIntersect = function(bounds, point) {\n    const radius2 = bounds.width / 2;\n    return intersect_default.circle(bounds, radius2, point);\n  };\n  node.intersect = function(point) {\n    log.info(\"Circle intersect\", node, radius, point);\n    return intersect_default.circle(node, radius, point);\n  };\n  return shapeSvg;\n}\n__name(circle, \"circle\");\n\n// src/rendering-util/rendering-elements/shapes/crossedCircle.ts\nfunction createLine(r2) {\n  const xAxis45 = Math.cos(Math.PI / 4);\n  const yAxis45 = Math.sin(Math.PI / 4);\n  const lineLength = r2 * 2;\n  const pointQ1 = { x: lineLength / 2 * xAxis45, y: lineLength / 2 * yAxis45 };\n  const pointQ2 = { x: -(lineLength / 2) * xAxis45, y: lineLength / 2 * yAxis45 };\n  const pointQ3 = { x: -(lineLength / 2) * xAxis45, y: -(lineLength / 2) * yAxis45 };\n  const pointQ4 = { x: lineLength / 2 * xAxis45, y: -(lineLength / 2) * yAxis45 };\n  return `M ${pointQ2.x},${pointQ2.y} L ${pointQ4.x},${pointQ4.y}\n                   M ${pointQ1.x},${pointQ1.y} L ${pointQ3.x},${pointQ3.y}`;\n}\n__name(createLine, \"createLine\");\nfunction crossedCircle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  node.label = \"\";\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", getNodeClasses(node)).attr(\"id\", node.domId ?? node.id);\n  const radius = Math.max(30, node?.width ?? 0);\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const circleNode = rc.circle(0, 0, radius * 2, options);\n  const linePath = createLine(radius);\n  const lineNode = rc.path(linePath, options);\n  const crossedCircle2 = shapeSvg.insert(() => circleNode, \":first-child\");\n  crossedCircle2.insert(() => lineNode);\n  if (cssStyles && node.look !== \"handDrawn\") {\n    crossedCircle2.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    crossedCircle2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, crossedCircle2);\n  node.intersect = function(point) {\n    log.info(\"crossedCircle intersect\", node, { radius, point });\n    const pos = intersect_default.circle(node, radius, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(crossedCircle, \"crossedCircle\");\n\n// src/rendering-util/rendering-elements/shapes/curlyBraceLeft.ts\nfunction generateCirclePoints2(centerX, centerY, radius, numPoints = 100, startAngle = 0, endAngle = 180) {\n  const points = [];\n  const startAngleRad = startAngle * Math.PI / 180;\n  const endAngleRad = endAngle * Math.PI / 180;\n  const angleRange = endAngleRad - startAngleRad;\n  const angleStep = angleRange / (numPoints - 1);\n  for (let i2 = 0; i2 < numPoints; i2++) {\n    const angle = startAngleRad + i2 * angleStep;\n    const x2 = centerX + radius * Math.cos(angle);\n    const y2 = centerY + radius * Math.sin(angle);\n    points.push({ x: -x2, y: -y2 });\n  }\n  return points;\n}\n__name(generateCirclePoints2, \"generateCirclePoints\");\nasync function curlyBraceLeft(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = bbox.width + (node.padding ?? 0);\n  const h2 = bbox.height + (node.padding ?? 0);\n  const radius = Math.max(5, h2 * 0.1);\n  const { cssStyles } = node;\n  const points = [\n    ...generateCirclePoints2(w2 / 2, -h2 / 2, radius, 30, -90, 0),\n    { x: -w2 / 2 - radius, y: radius },\n    ...generateCirclePoints2(w2 / 2 + radius * 2, -radius, radius, 20, -180, -270),\n    ...generateCirclePoints2(w2 / 2 + radius * 2, radius, radius, 20, -90, -180),\n    { x: -w2 / 2 - radius, y: -h2 / 2 },\n    ...generateCirclePoints2(w2 / 2, h2 / 2, radius, 20, 0, 90)\n  ];\n  const rectPoints = [\n    { x: w2 / 2, y: -h2 / 2 - radius },\n    { x: -w2 / 2, y: -h2 / 2 - radius },\n    ...generateCirclePoints2(w2 / 2, -h2 / 2, radius, 20, -90, 0),\n    { x: -w2 / 2 - radius, y: -radius },\n    ...generateCirclePoints2(w2 / 2 + w2 * 0.1, -radius, radius, 20, -180, -270),\n    ...generateCirclePoints2(w2 / 2 + w2 * 0.1, radius, radius, 20, -90, -180),\n    { x: -w2 / 2 - radius, y: h2 / 2 },\n    ...generateCirclePoints2(w2 / 2, h2 / 2, radius, 20, 0, 90),\n    { x: -w2 / 2, y: h2 / 2 + radius },\n    { x: w2 / 2, y: h2 / 2 + radius }\n  ];\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, { fill: \"none\" });\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const curlyBraceLeftPath = createPathFromPoints(points);\n  const newCurlyBracePath = curlyBraceLeftPath.replace(\"Z\", \"\");\n  const curlyBraceLeftNode = rc.path(newCurlyBracePath, options);\n  const rectPath = createPathFromPoints(rectPoints);\n  const rectShape = rc.path(rectPath, { ...options });\n  const curlyBraceLeftShape = shapeSvg.insert(\"g\", \":first-child\");\n  curlyBraceLeftShape.insert(() => rectShape, \":first-child\").attr(\"stroke-opacity\", 0);\n  curlyBraceLeftShape.insert(() => curlyBraceLeftNode, \":first-child\");\n  curlyBraceLeftShape.attr(\"class\", \"text\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    curlyBraceLeftShape.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    curlyBraceLeftShape.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  curlyBraceLeftShape.attr(\"transform\", `translate(${radius}, 0)`);\n  label.attr(\n    \"transform\",\n    `translate(${-w2 / 2 + radius - (bbox.x - (bbox.left ?? 0))},${-h2 / 2 + (node.padding ?? 0) / 2 - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, curlyBraceLeftShape);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, rectPoints, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(curlyBraceLeft, \"curlyBraceLeft\");\n\n// src/rendering-util/rendering-elements/shapes/curlyBraceRight.ts\nfunction generateCirclePoints3(centerX, centerY, radius, numPoints = 100, startAngle = 0, endAngle = 180) {\n  const points = [];\n  const startAngleRad = startAngle * Math.PI / 180;\n  const endAngleRad = endAngle * Math.PI / 180;\n  const angleRange = endAngleRad - startAngleRad;\n  const angleStep = angleRange / (numPoints - 1);\n  for (let i2 = 0; i2 < numPoints; i2++) {\n    const angle = startAngleRad + i2 * angleStep;\n    const x2 = centerX + radius * Math.cos(angle);\n    const y2 = centerY + radius * Math.sin(angle);\n    points.push({ x: x2, y: y2 });\n  }\n  return points;\n}\n__name(generateCirclePoints3, \"generateCirclePoints\");\nasync function curlyBraceRight(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = bbox.width + (node.padding ?? 0);\n  const h2 = bbox.height + (node.padding ?? 0);\n  const radius = Math.max(5, h2 * 0.1);\n  const { cssStyles } = node;\n  const points = [\n    ...generateCirclePoints3(w2 / 2, -h2 / 2, radius, 20, -90, 0),\n    { x: w2 / 2 + radius, y: -radius },\n    ...generateCirclePoints3(w2 / 2 + radius * 2, -radius, radius, 20, -180, -270),\n    ...generateCirclePoints3(w2 / 2 + radius * 2, radius, radius, 20, -90, -180),\n    { x: w2 / 2 + radius, y: h2 / 2 },\n    ...generateCirclePoints3(w2 / 2, h2 / 2, radius, 20, 0, 90)\n  ];\n  const rectPoints = [\n    { x: -w2 / 2, y: -h2 / 2 - radius },\n    { x: w2 / 2, y: -h2 / 2 - radius },\n    ...generateCirclePoints3(w2 / 2, -h2 / 2, radius, 20, -90, 0),\n    { x: w2 / 2 + radius, y: -radius },\n    ...generateCirclePoints3(w2 / 2 + radius * 2, -radius, radius, 20, -180, -270),\n    ...generateCirclePoints3(w2 / 2 + radius * 2, radius, radius, 20, -90, -180),\n    { x: w2 / 2 + radius, y: h2 / 2 },\n    ...generateCirclePoints3(w2 / 2, h2 / 2, radius, 20, 0, 90),\n    { x: w2 / 2, y: h2 / 2 + radius },\n    { x: -w2 / 2, y: h2 / 2 + radius }\n  ];\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, { fill: \"none\" });\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const curlyBraceRightPath = createPathFromPoints(points);\n  const newCurlyBracePath = curlyBraceRightPath.replace(\"Z\", \"\");\n  const curlyBraceRightNode = rc.path(newCurlyBracePath, options);\n  const rectPath = createPathFromPoints(rectPoints);\n  const rectShape = rc.path(rectPath, { ...options });\n  const curlyBraceRightShape = shapeSvg.insert(\"g\", \":first-child\");\n  curlyBraceRightShape.insert(() => rectShape, \":first-child\").attr(\"stroke-opacity\", 0);\n  curlyBraceRightShape.insert(() => curlyBraceRightNode, \":first-child\");\n  curlyBraceRightShape.attr(\"class\", \"text\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    curlyBraceRightShape.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    curlyBraceRightShape.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  curlyBraceRightShape.attr(\"transform\", `translate(${-radius}, 0)`);\n  label.attr(\n    \"transform\",\n    `translate(${-w2 / 2 + (node.padding ?? 0) / 2 - (bbox.x - (bbox.left ?? 0))},${-h2 / 2 + (node.padding ?? 0) / 2 - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, curlyBraceRightShape);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, rectPoints, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(curlyBraceRight, \"curlyBraceRight\");\n\n// src/rendering-util/rendering-elements/shapes/curlyBraces.ts\nfunction generateCirclePoints4(centerX, centerY, radius, numPoints = 100, startAngle = 0, endAngle = 180) {\n  const points = [];\n  const startAngleRad = startAngle * Math.PI / 180;\n  const endAngleRad = endAngle * Math.PI / 180;\n  const angleRange = endAngleRad - startAngleRad;\n  const angleStep = angleRange / (numPoints - 1);\n  for (let i2 = 0; i2 < numPoints; i2++) {\n    const angle = startAngleRad + i2 * angleStep;\n    const x2 = centerX + radius * Math.cos(angle);\n    const y2 = centerY + radius * Math.sin(angle);\n    points.push({ x: -x2, y: -y2 });\n  }\n  return points;\n}\n__name(generateCirclePoints4, \"generateCirclePoints\");\nasync function curlyBraces(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = bbox.width + (node.padding ?? 0);\n  const h2 = bbox.height + (node.padding ?? 0);\n  const radius = Math.max(5, h2 * 0.1);\n  const { cssStyles } = node;\n  const leftCurlyBracePoints = [\n    ...generateCirclePoints4(w2 / 2, -h2 / 2, radius, 30, -90, 0),\n    { x: -w2 / 2 - radius, y: radius },\n    ...generateCirclePoints4(w2 / 2 + radius * 2, -radius, radius, 20, -180, -270),\n    ...generateCirclePoints4(w2 / 2 + radius * 2, radius, radius, 20, -90, -180),\n    { x: -w2 / 2 - radius, y: -h2 / 2 },\n    ...generateCirclePoints4(w2 / 2, h2 / 2, radius, 20, 0, 90)\n  ];\n  const rightCurlyBracePoints = [\n    ...generateCirclePoints4(-w2 / 2 + radius + radius / 2, -h2 / 2, radius, 20, -90, -180),\n    { x: w2 / 2 - radius / 2, y: radius },\n    ...generateCirclePoints4(-w2 / 2 - radius / 2, -radius, radius, 20, 0, 90),\n    ...generateCirclePoints4(-w2 / 2 - radius / 2, radius, radius, 20, -90, 0),\n    { x: w2 / 2 - radius / 2, y: -radius },\n    ...generateCirclePoints4(-w2 / 2 + radius + radius / 2, h2 / 2, radius, 30, -180, -270)\n  ];\n  const rectPoints = [\n    { x: w2 / 2, y: -h2 / 2 - radius },\n    { x: -w2 / 2, y: -h2 / 2 - radius },\n    ...generateCirclePoints4(w2 / 2, -h2 / 2, radius, 20, -90, 0),\n    { x: -w2 / 2 - radius, y: -radius },\n    ...generateCirclePoints4(w2 / 2 + radius * 2, -radius, radius, 20, -180, -270),\n    ...generateCirclePoints4(w2 / 2 + radius * 2, radius, radius, 20, -90, -180),\n    { x: -w2 / 2 - radius, y: h2 / 2 },\n    ...generateCirclePoints4(w2 / 2, h2 / 2, radius, 20, 0, 90),\n    { x: -w2 / 2, y: h2 / 2 + radius },\n    { x: w2 / 2 - radius - radius / 2, y: h2 / 2 + radius },\n    ...generateCirclePoints4(-w2 / 2 + radius + radius / 2, -h2 / 2, radius, 20, -90, -180),\n    { x: w2 / 2 - radius / 2, y: radius },\n    ...generateCirclePoints4(-w2 / 2 - radius / 2, -radius, radius, 20, 0, 90),\n    ...generateCirclePoints4(-w2 / 2 - radius / 2, radius, radius, 20, -90, 0),\n    { x: w2 / 2 - radius / 2, y: -radius },\n    ...generateCirclePoints4(-w2 / 2 + radius + radius / 2, h2 / 2, radius, 30, -180, -270)\n  ];\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, { fill: \"none\" });\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const leftCurlyBracePath = createPathFromPoints(leftCurlyBracePoints);\n  const newLeftCurlyBracePath = leftCurlyBracePath.replace(\"Z\", \"\");\n  const leftCurlyBraceNode = rc.path(newLeftCurlyBracePath, options);\n  const rightCurlyBracePath = createPathFromPoints(rightCurlyBracePoints);\n  const newRightCurlyBracePath = rightCurlyBracePath.replace(\"Z\", \"\");\n  const rightCurlyBraceNode = rc.path(newRightCurlyBracePath, options);\n  const rectPath = createPathFromPoints(rectPoints);\n  const rectShape = rc.path(rectPath, { ...options });\n  const curlyBracesShape = shapeSvg.insert(\"g\", \":first-child\");\n  curlyBracesShape.insert(() => rectShape, \":first-child\").attr(\"stroke-opacity\", 0);\n  curlyBracesShape.insert(() => leftCurlyBraceNode, \":first-child\");\n  curlyBracesShape.insert(() => rightCurlyBraceNode, \":first-child\");\n  curlyBracesShape.attr(\"class\", \"text\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    curlyBracesShape.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    curlyBracesShape.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  curlyBracesShape.attr(\"transform\", `translate(${radius - radius / 4}, 0)`);\n  label.attr(\n    \"transform\",\n    `translate(${-w2 / 2 + (node.padding ?? 0) / 2 - (bbox.x - (bbox.left ?? 0))},${-h2 / 2 + (node.padding ?? 0) / 2 - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, curlyBracesShape);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, rectPoints, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(curlyBraces, \"curlyBraces\");\n\n// src/rendering-util/rendering-elements/shapes/curvedTrapezoid.ts\nasync function curvedTrapezoid(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const minWidth = 80, minHeight = 20;\n  const w2 = Math.max(minWidth, (bbox.width + (node.padding ?? 0) * 2) * 1.25, node?.width ?? 0);\n  const h2 = Math.max(minHeight, bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const radius = h2 / 2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const totalWidth = w2, totalHeight = h2;\n  const rw = totalWidth - radius;\n  const tw = totalHeight / 4;\n  const points = [\n    { x: rw, y: 0 },\n    { x: tw, y: 0 },\n    { x: 0, y: totalHeight / 2 },\n    { x: tw, y: totalHeight },\n    { x: rw, y: totalHeight },\n    ...generateCirclePoints(-rw, -totalHeight / 2, radius, 50, 270, 90)\n  ];\n  const pathData = createPathFromPoints(points);\n  const shapeNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => shapeNode, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  polygon.attr(\"transform\", `translate(${-w2 / 2}, ${-h2 / 2})`);\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(curvedTrapezoid, \"curvedTrapezoid\");\n\n// src/rendering-util/rendering-elements/shapes/cylinder.ts\nvar createCylinderPathD = /* @__PURE__ */ __name((x2, y2, width, height, rx, ry) => {\n  return [\n    `M${x2},${y2 + ry}`,\n    `a${rx},${ry} 0,0,0 ${width},0`,\n    `a${rx},${ry} 0,0,0 ${-width},0`,\n    `l0,${height}`,\n    `a${rx},${ry} 0,0,0 ${width},0`,\n    `l0,${-height}`\n  ].join(\" \");\n}, \"createCylinderPathD\");\nvar createOuterCylinderPathD = /* @__PURE__ */ __name((x2, y2, width, height, rx, ry) => {\n  return [\n    `M${x2},${y2 + ry}`,\n    `M${x2 + width},${y2 + ry}`,\n    `a${rx},${ry} 0,0,0 ${-width},0`,\n    `l0,${height}`,\n    `a${rx},${ry} 0,0,0 ${width},0`,\n    `l0,${-height}`\n  ].join(\" \");\n}, \"createOuterCylinderPathD\");\nvar createInnerCylinderPathD = /* @__PURE__ */ __name((x2, y2, width, height, rx, ry) => {\n  return [`M${x2 - width / 2},${-height / 2}`, `a${rx},${ry} 0,0,0 ${width},0`].join(\" \");\n}, \"createInnerCylinderPathD\");\nasync function cylinder(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + node.padding, node.width ?? 0);\n  const rx = w2 / 2;\n  const ry = rx / (2.5 + w2 / 50);\n  const h2 = Math.max(bbox.height + ry + node.padding, node.height ?? 0);\n  let cylinder2;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const outerPathData = createOuterCylinderPathD(0, 0, w2, h2, rx, ry);\n    const innerPathData = createInnerCylinderPathD(0, ry, w2, h2, rx, ry);\n    const outerNode = rc.path(outerPathData, userNodeOverrides(node, {}));\n    const innerLine = rc.path(innerPathData, userNodeOverrides(node, { fill: \"none\" }));\n    cylinder2 = shapeSvg.insert(() => innerLine, \":first-child\");\n    cylinder2 = shapeSvg.insert(() => outerNode, \":first-child\");\n    cylinder2.attr(\"class\", \"basic label-container\");\n    if (cssStyles) {\n      cylinder2.attr(\"style\", cssStyles);\n    }\n  } else {\n    const pathData = createCylinderPathD(0, 0, w2, h2, rx, ry);\n    cylinder2 = shapeSvg.insert(\"path\", \":first-child\").attr(\"d\", pathData).attr(\"class\", \"basic label-container\").attr(\"style\", handleUndefinedAttr(cssStyles)).attr(\"style\", nodeStyles);\n  }\n  cylinder2.attr(\"label-offset-y\", ry);\n  cylinder2.attr(\"transform\", `translate(${-w2 / 2}, ${-(h2 / 2 + ry)})`);\n  updateNodeBounds(node, cylinder2);\n  label.attr(\n    \"transform\",\n    `translate(${-(bbox.width / 2) - (bbox.x - (bbox.left ?? 0))}, ${-(bbox.height / 2) + (node.padding ?? 0) / 1.5 - (bbox.y - (bbox.top ?? 0))})`\n  );\n  node.intersect = function(point) {\n    const pos = intersect_default.rect(node, point);\n    const x2 = pos.x - (node.x ?? 0);\n    if (rx != 0 && (Math.abs(x2) < (node.width ?? 0) / 2 || Math.abs(x2) == (node.width ?? 0) / 2 && Math.abs(pos.y - (node.y ?? 0)) > (node.height ?? 0) / 2 - ry)) {\n      let y2 = ry * ry * (1 - x2 * x2 / (rx * rx));\n      if (y2 > 0) {\n        y2 = Math.sqrt(y2);\n      }\n      y2 = ry - y2;\n      if (point.y - (node.y ?? 0) > 0) {\n        y2 = -y2;\n      }\n      pos.y += y2;\n    }\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(cylinder, \"cylinder\");\n\n// src/rendering-util/rendering-elements/shapes/dividedRect.ts\nasync function dividedRectangle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = bbox.width + node.padding;\n  const h2 = bbox.height + node.padding;\n  const rectOffset = h2 * 0.2;\n  const x2 = -w2 / 2;\n  const y2 = -h2 / 2 - rectOffset / 2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const pts = [\n    { x: x2, y: y2 + rectOffset },\n    { x: -x2, y: y2 + rectOffset },\n    { x: -x2, y: -y2 },\n    { x: x2, y: -y2 },\n    { x: x2, y: y2 },\n    { x: -x2, y: y2 },\n    { x: -x2, y: y2 + rectOffset }\n  ];\n  const poly = rc.polygon(\n    pts.map((p2) => [p2.x, p2.y]),\n    options\n  );\n  const polygon = shapeSvg.insert(() => poly, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  label.attr(\n    \"transform\",\n    `translate(${x2 + (node.padding ?? 0) / 2 - (bbox.x - (bbox.left ?? 0))}, ${y2 + rectOffset + (node.padding ?? 0) / 2 - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    const pos = intersect_default.rect(node, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(dividedRectangle, \"dividedRectangle\");\n\n// src/rendering-util/rendering-elements/shapes/doubleCircle.ts\nasync function doublecircle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, halfPadding } = await labelHelper(parent, node, getNodeClasses(node));\n  const gap = 5;\n  const outerRadius = bbox.width / 2 + halfPadding + gap;\n  const innerRadius = bbox.width / 2 + halfPadding;\n  let circleGroup;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const outerOptions = userNodeOverrides(node, { roughness: 0.2, strokeWidth: 2.5 });\n    const innerOptions = userNodeOverrides(node, { roughness: 0.2, strokeWidth: 1.5 });\n    const outerRoughNode = rc.circle(0, 0, outerRadius * 2, outerOptions);\n    const innerRoughNode = rc.circle(0, 0, innerRadius * 2, innerOptions);\n    circleGroup = shapeSvg.insert(\"g\", \":first-child\");\n    circleGroup.attr(\"class\", handleUndefinedAttr(node.cssClasses)).attr(\"style\", handleUndefinedAttr(cssStyles));\n    circleGroup.node()?.appendChild(outerRoughNode);\n    circleGroup.node()?.appendChild(innerRoughNode);\n  } else {\n    circleGroup = shapeSvg.insert(\"g\", \":first-child\");\n    const outerCircle = circleGroup.insert(\"circle\", \":first-child\");\n    const innerCircle = circleGroup.insert(\"circle\");\n    circleGroup.attr(\"class\", \"basic label-container\").attr(\"style\", nodeStyles);\n    outerCircle.attr(\"class\", \"outer-circle\").attr(\"style\", nodeStyles).attr(\"r\", outerRadius).attr(\"cx\", 0).attr(\"cy\", 0);\n    innerCircle.attr(\"class\", \"inner-circle\").attr(\"style\", nodeStyles).attr(\"r\", innerRadius).attr(\"cx\", 0).attr(\"cy\", 0);\n  }\n  updateNodeBounds(node, circleGroup);\n  node.intersect = function(point) {\n    log.info(\"DoubleCircle intersect\", node, outerRadius, point);\n    return intersect_default.circle(node, outerRadius, point);\n  };\n  return shapeSvg;\n}\n__name(doublecircle, \"doublecircle\");\n\n// src/rendering-util/rendering-elements/shapes/filledCircle.ts\nfunction filledCircle(parent, node, { config: { themeVariables } }) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.label = \"\";\n  node.labelStyle = labelStyles;\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", getNodeClasses(node)).attr(\"id\", node.domId ?? node.id);\n  const radius = 7;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const { nodeBorder } = themeVariables;\n  const options = userNodeOverrides(node, { fillStyle: \"solid\" });\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n  }\n  const circleNode = rc.circle(0, 0, radius * 2, options);\n  const filledCircle2 = shapeSvg.insert(() => circleNode, \":first-child\");\n  filledCircle2.selectAll(\"path\").attr(\"style\", `fill: ${nodeBorder} !important;`);\n  if (cssStyles && cssStyles.length > 0 && node.look !== \"handDrawn\") {\n    filledCircle2.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    filledCircle2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, filledCircle2);\n  node.intersect = function(point) {\n    log.info(\"filledCircle intersect\", node, { radius, point });\n    const pos = intersect_default.circle(node, radius, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(filledCircle, \"filledCircle\");\n\n// src/rendering-util/rendering-elements/shapes/flippedTriangle.ts\nasync function flippedTriangle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = bbox.width + (node.padding ?? 0);\n  const h2 = w2 + bbox.height;\n  const tw = w2 + bbox.height;\n  const points = [\n    { x: 0, y: -h2 },\n    { x: tw, y: -h2 },\n    { x: tw / 2, y: 0 }\n  ];\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const pathData = createPathFromPoints(points);\n  const roughNode = rc.path(pathData, options);\n  const flippedTriangle2 = shapeSvg.insert(() => roughNode, \":first-child\").attr(\"transform\", `translate(${-h2 / 2}, ${h2 / 2})`);\n  if (cssStyles && node.look !== \"handDrawn\") {\n    flippedTriangle2.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    flippedTriangle2.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  node.width = w2;\n  node.height = h2;\n  updateNodeBounds(node, flippedTriangle2);\n  label.attr(\n    \"transform\",\n    `translate(${-bbox.width / 2 - (bbox.x - (bbox.left ?? 0))}, ${-h2 / 2 + (node.padding ?? 0) / 2 + (bbox.y - (bbox.top ?? 0))})`\n  );\n  node.intersect = function(point) {\n    log.info(\"Triangle intersect\", node, points, point);\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(flippedTriangle, \"flippedTriangle\");\n\n// src/rendering-util/rendering-elements/shapes/forkJoin.ts\nfunction forkJoin(parent, node, { dir, config: { state: state2, themeVariables } }) {\n  const { nodeStyles } = styles2String(node);\n  node.label = \"\";\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", getNodeClasses(node)).attr(\"id\", node.domId ?? node.id);\n  const { cssStyles } = node;\n  let width = Math.max(70, node?.width ?? 0);\n  let height = Math.max(10, node?.height ?? 0);\n  if (dir === \"LR\") {\n    width = Math.max(10, node?.width ?? 0);\n    height = Math.max(70, node?.height ?? 0);\n  }\n  const x2 = -1 * width / 2;\n  const y2 = -1 * height / 2;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {\n    stroke: themeVariables.lineColor,\n    fill: themeVariables.lineColor\n  });\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const roughNode = rc.rectangle(x2, y2, width, height, options);\n  const shape = shapeSvg.insert(() => roughNode, \":first-child\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    shape.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    shape.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, shape);\n  const padding = state2?.padding ?? 0;\n  if (node.width && node.height) {\n    node.width += padding / 2 || 0;\n    node.height += padding / 2 || 0;\n  }\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(forkJoin, \"forkJoin\");\n\n// src/rendering-util/rendering-elements/shapes/halfRoundedRectangle.ts\nasync function halfRoundedRectangle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const minWidth = 80, minHeight = 50;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(minWidth, bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(minHeight, bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const radius = h2 / 2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: -w2 / 2, y: -h2 / 2 },\n    { x: w2 / 2 - radius, y: -h2 / 2 },\n    ...generateCirclePoints(-w2 / 2 + radius, 0, radius, 50, 90, 270),\n    { x: w2 / 2 - radius, y: h2 / 2 },\n    { x: -w2 / 2, y: h2 / 2 }\n  ];\n  const pathData = createPathFromPoints(points);\n  const shapeNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => shapeNode, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    log.info(\"Pill intersect\", node, { radius, point });\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(halfRoundedRectangle, \"halfRoundedRectangle\");\n\n// src/rendering-util/rendering-elements/shapes/hexagon.ts\nasync function hexagon(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const h2 = bbox.height + (node.padding ?? 0);\n  const w2 = bbox.width + (node.padding ?? 0) * 2.5;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  let halfWidth = w2 / 2;\n  const m2 = halfWidth / 6;\n  halfWidth = halfWidth + m2;\n  const halfHeight = h2 / 2;\n  const fixedLength = halfHeight / 2;\n  const deducedWidth = halfWidth - fixedLength;\n  const points = [\n    { x: -deducedWidth, y: -halfHeight },\n    { x: 0, y: -halfHeight },\n    { x: deducedWidth, y: -halfHeight },\n    { x: halfWidth, y: 0 },\n    { x: deducedWidth, y: halfHeight },\n    { x: 0, y: halfHeight },\n    { x: -deducedWidth, y: halfHeight },\n    { x: -halfWidth, y: 0 }\n  ];\n  const pathData = createPathFromPoints(points);\n  const shapeNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => shapeNode, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  node.width = w2;\n  node.height = h2;\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(hexagon, \"hexagon\");\n\n// src/rendering-util/rendering-elements/shapes/hourglass.ts\nasync function hourglass(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.label = \"\";\n  node.labelStyle = labelStyles;\n  const { shapeSvg } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(30, node?.width ?? 0);\n  const h2 = Math.max(30, node?.height ?? 0);\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: 0, y: 0 },\n    { x: w2, y: 0 },\n    { x: 0, y: h2 },\n    { x: w2, y: h2 }\n  ];\n  const pathData = createPathFromPoints(points);\n  const shapeNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => shapeNode, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  polygon.attr(\"transform\", `translate(${-w2 / 2}, ${-h2 / 2})`);\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    log.info(\"Pill intersect\", node, { points });\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(hourglass, \"hourglass\");\n\n// src/rendering-util/rendering-elements/shapes/icon.ts\nasync function icon(parent, node, { config: { themeVariables, flowchart } }) {\n  const { labelStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const assetHeight = node.assetHeight ?? 48;\n  const assetWidth = node.assetWidth ?? 48;\n  const iconSize = Math.max(assetHeight, assetWidth);\n  const defaultWidth = flowchart?.wrappingWidth;\n  node.width = Math.max(iconSize, defaultWidth ?? 0);\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, \"icon-shape default\");\n  const topLabel = node.pos === \"t\";\n  const height = iconSize;\n  const width = iconSize;\n  const { nodeBorder } = themeVariables;\n  const { stylesMap } = compileStyles(node);\n  const x2 = -width / 2;\n  const y2 = -height / 2;\n  const labelPadding = node.label ? 8 : 0;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, { stroke: \"none\", fill: \"none\" });\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const iconNode = rc.rectangle(x2, y2, width, height, options);\n  const outerWidth = Math.max(width, bbox.width);\n  const outerHeight = height + bbox.height + labelPadding;\n  const outerNode = rc.rectangle(-outerWidth / 2, -outerHeight / 2, outerWidth, outerHeight, {\n    ...options,\n    fill: \"transparent\",\n    stroke: \"none\"\n  });\n  const iconShape = shapeSvg.insert(() => iconNode, \":first-child\");\n  const outerShape = shapeSvg.insert(() => outerNode);\n  if (node.icon) {\n    const iconElem = shapeSvg.append(\"g\");\n    iconElem.html(\n      `<g>${await getIconSVG(node.icon, {\n        height: iconSize,\n        width: iconSize,\n        fallbackPrefix: \"\"\n      })}</g>`\n    );\n    const iconBBox = iconElem.node().getBBox();\n    const iconWidth = iconBBox.width;\n    const iconHeight = iconBBox.height;\n    const iconX = iconBBox.x;\n    const iconY = iconBBox.y;\n    iconElem.attr(\n      \"transform\",\n      `translate(${-iconWidth / 2 - iconX},${topLabel ? bbox.height / 2 + labelPadding / 2 - iconHeight / 2 - iconY : -bbox.height / 2 - labelPadding / 2 - iconHeight / 2 - iconY})`\n    );\n    iconElem.attr(\"style\", `color: ${stylesMap.get(\"stroke\") ?? nodeBorder};`);\n  }\n  label.attr(\n    \"transform\",\n    `translate(${-bbox.width / 2 - (bbox.x - (bbox.left ?? 0))},${topLabel ? -outerHeight / 2 : outerHeight / 2 - bbox.height})`\n  );\n  iconShape.attr(\n    \"transform\",\n    `translate(${0},${topLabel ? bbox.height / 2 + labelPadding / 2 : -bbox.height / 2 - labelPadding / 2})`\n  );\n  updateNodeBounds(node, outerShape);\n  node.intersect = function(point) {\n    log.info(\"iconSquare intersect\", node, point);\n    if (!node.label) {\n      return intersect_default.rect(node, point);\n    }\n    const dx = node.x ?? 0;\n    const dy = node.y ?? 0;\n    const nodeHeight = node.height ?? 0;\n    let points = [];\n    if (topLabel) {\n      points = [\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx + width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx + width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding }\n      ];\n    } else {\n      points = [\n        { x: dx - width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + width / 2, y: dy - nodeHeight / 2 + height },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 + height },\n        { x: dx + bbox.width / 2 / 2, y: dy + nodeHeight / 2 },\n        { x: dx - bbox.width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 + height },\n        { x: dx - width / 2, y: dy - nodeHeight / 2 + height }\n      ];\n    }\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(icon, \"icon\");\n\n// src/rendering-util/rendering-elements/shapes/iconCircle.ts\nasync function iconCircle(parent, node, { config: { themeVariables, flowchart } }) {\n  const { labelStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const assetHeight = node.assetHeight ?? 48;\n  const assetWidth = node.assetWidth ?? 48;\n  const iconSize = Math.max(assetHeight, assetWidth);\n  const defaultWidth = flowchart?.wrappingWidth;\n  node.width = Math.max(iconSize, defaultWidth ?? 0);\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, \"icon-shape default\");\n  const padding = 20;\n  const labelPadding = node.label ? 8 : 0;\n  const topLabel = node.pos === \"t\";\n  const { nodeBorder, mainBkg } = themeVariables;\n  const { stylesMap } = compileStyles(node);\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const fill = stylesMap.get(\"fill\");\n  options.stroke = fill ?? mainBkg;\n  const iconElem = shapeSvg.append(\"g\");\n  if (node.icon) {\n    iconElem.html(\n      `<g>${await getIconSVG(node.icon, {\n        height: iconSize,\n        width: iconSize,\n        fallbackPrefix: \"\"\n      })}</g>`\n    );\n  }\n  const iconBBox = iconElem.node().getBBox();\n  const iconWidth = iconBBox.width;\n  const iconHeight = iconBBox.height;\n  const iconX = iconBBox.x;\n  const iconY = iconBBox.y;\n  const diameter = Math.max(iconWidth, iconHeight) * Math.SQRT2 + padding * 2;\n  const iconNode = rc.circle(0, 0, diameter, options);\n  const outerWidth = Math.max(diameter, bbox.width);\n  const outerHeight = diameter + bbox.height + labelPadding;\n  const outerNode = rc.rectangle(-outerWidth / 2, -outerHeight / 2, outerWidth, outerHeight, {\n    ...options,\n    fill: \"transparent\",\n    stroke: \"none\"\n  });\n  const iconShape = shapeSvg.insert(() => iconNode, \":first-child\");\n  const outerShape = shapeSvg.insert(() => outerNode);\n  iconElem.attr(\n    \"transform\",\n    `translate(${-iconWidth / 2 - iconX},${topLabel ? bbox.height / 2 + labelPadding / 2 - iconHeight / 2 - iconY : -bbox.height / 2 - labelPadding / 2 - iconHeight / 2 - iconY})`\n  );\n  iconElem.attr(\"style\", `color: ${stylesMap.get(\"stroke\") ?? nodeBorder};`);\n  label.attr(\n    \"transform\",\n    `translate(${-bbox.width / 2 - (bbox.x - (bbox.left ?? 0))},${topLabel ? -outerHeight / 2 : outerHeight / 2 - bbox.height})`\n  );\n  iconShape.attr(\n    \"transform\",\n    `translate(${0},${topLabel ? bbox.height / 2 + labelPadding / 2 : -bbox.height / 2 - labelPadding / 2})`\n  );\n  updateNodeBounds(node, outerShape);\n  node.intersect = function(point) {\n    log.info(\"iconSquare intersect\", node, point);\n    const pos = intersect_default.rect(node, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(iconCircle, \"iconCircle\");\n\n// src/rendering-util/rendering-elements/shapes/iconRounded.ts\nasync function iconRounded(parent, node, { config: { themeVariables, flowchart } }) {\n  const { labelStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const assetHeight = node.assetHeight ?? 48;\n  const assetWidth = node.assetWidth ?? 48;\n  const iconSize = Math.max(assetHeight, assetWidth);\n  const defaultWidth = flowchart?.wrappingWidth;\n  node.width = Math.max(iconSize, defaultWidth ?? 0);\n  const { shapeSvg, bbox, halfPadding, label } = await labelHelper(\n    parent,\n    node,\n    \"icon-shape default\"\n  );\n  const topLabel = node.pos === \"t\";\n  const height = iconSize + halfPadding * 2;\n  const width = iconSize + halfPadding * 2;\n  const { nodeBorder, mainBkg } = themeVariables;\n  const { stylesMap } = compileStyles(node);\n  const x2 = -width / 2;\n  const y2 = -height / 2;\n  const labelPadding = node.label ? 8 : 0;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const fill = stylesMap.get(\"fill\");\n  options.stroke = fill ?? mainBkg;\n  const iconNode = rc.path(createRoundedRectPathD(x2, y2, width, height, 5), options);\n  const outerWidth = Math.max(width, bbox.width);\n  const outerHeight = height + bbox.height + labelPadding;\n  const outerNode = rc.rectangle(-outerWidth / 2, -outerHeight / 2, outerWidth, outerHeight, {\n    ...options,\n    fill: \"transparent\",\n    stroke: \"none\"\n  });\n  const iconShape = shapeSvg.insert(() => iconNode, \":first-child\").attr(\"class\", \"icon-shape2\");\n  const outerShape = shapeSvg.insert(() => outerNode);\n  if (node.icon) {\n    const iconElem = shapeSvg.append(\"g\");\n    iconElem.html(\n      `<g>${await getIconSVG(node.icon, {\n        height: iconSize,\n        width: iconSize,\n        fallbackPrefix: \"\"\n      })}</g>`\n    );\n    const iconBBox = iconElem.node().getBBox();\n    const iconWidth = iconBBox.width;\n    const iconHeight = iconBBox.height;\n    const iconX = iconBBox.x;\n    const iconY = iconBBox.y;\n    iconElem.attr(\n      \"transform\",\n      `translate(${-iconWidth / 2 - iconX},${topLabel ? bbox.height / 2 + labelPadding / 2 - iconHeight / 2 - iconY : -bbox.height / 2 - labelPadding / 2 - iconHeight / 2 - iconY})`\n    );\n    iconElem.attr(\"style\", `color: ${stylesMap.get(\"stroke\") ?? nodeBorder};`);\n  }\n  label.attr(\n    \"transform\",\n    `translate(${-bbox.width / 2 - (bbox.x - (bbox.left ?? 0))},${topLabel ? -outerHeight / 2 : outerHeight / 2 - bbox.height})`\n  );\n  iconShape.attr(\n    \"transform\",\n    `translate(${0},${topLabel ? bbox.height / 2 + labelPadding / 2 : -bbox.height / 2 - labelPadding / 2})`\n  );\n  updateNodeBounds(node, outerShape);\n  node.intersect = function(point) {\n    log.info(\"iconSquare intersect\", node, point);\n    if (!node.label) {\n      return intersect_default.rect(node, point);\n    }\n    const dx = node.x ?? 0;\n    const dy = node.y ?? 0;\n    const nodeHeight = node.height ?? 0;\n    let points = [];\n    if (topLabel) {\n      points = [\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx + width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx + width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding }\n      ];\n    } else {\n      points = [\n        { x: dx - width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + width / 2, y: dy - nodeHeight / 2 + height },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 + height },\n        { x: dx + bbox.width / 2 / 2, y: dy + nodeHeight / 2 },\n        { x: dx - bbox.width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 + height },\n        { x: dx - width / 2, y: dy - nodeHeight / 2 + height }\n      ];\n    }\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(iconRounded, \"iconRounded\");\n\n// src/rendering-util/rendering-elements/shapes/iconSquare.ts\nasync function iconSquare(parent, node, { config: { themeVariables, flowchart } }) {\n  const { labelStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const assetHeight = node.assetHeight ?? 48;\n  const assetWidth = node.assetWidth ?? 48;\n  const iconSize = Math.max(assetHeight, assetWidth);\n  const defaultWidth = flowchart?.wrappingWidth;\n  node.width = Math.max(iconSize, defaultWidth ?? 0);\n  const { shapeSvg, bbox, halfPadding, label } = await labelHelper(\n    parent,\n    node,\n    \"icon-shape default\"\n  );\n  const topLabel = node.pos === \"t\";\n  const height = iconSize + halfPadding * 2;\n  const width = iconSize + halfPadding * 2;\n  const { nodeBorder, mainBkg } = themeVariables;\n  const { stylesMap } = compileStyles(node);\n  const x2 = -width / 2;\n  const y2 = -height / 2;\n  const labelPadding = node.label ? 8 : 0;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const fill = stylesMap.get(\"fill\");\n  options.stroke = fill ?? mainBkg;\n  const iconNode = rc.path(createRoundedRectPathD(x2, y2, width, height, 0.1), options);\n  const outerWidth = Math.max(width, bbox.width);\n  const outerHeight = height + bbox.height + labelPadding;\n  const outerNode = rc.rectangle(-outerWidth / 2, -outerHeight / 2, outerWidth, outerHeight, {\n    ...options,\n    fill: \"transparent\",\n    stroke: \"none\"\n  });\n  const iconShape = shapeSvg.insert(() => iconNode, \":first-child\");\n  const outerShape = shapeSvg.insert(() => outerNode);\n  if (node.icon) {\n    const iconElem = shapeSvg.append(\"g\");\n    iconElem.html(\n      `<g>${await getIconSVG(node.icon, {\n        height: iconSize,\n        width: iconSize,\n        fallbackPrefix: \"\"\n      })}</g>`\n    );\n    const iconBBox = iconElem.node().getBBox();\n    const iconWidth = iconBBox.width;\n    const iconHeight = iconBBox.height;\n    const iconX = iconBBox.x;\n    const iconY = iconBBox.y;\n    iconElem.attr(\n      \"transform\",\n      `translate(${-iconWidth / 2 - iconX},${topLabel ? bbox.height / 2 + labelPadding / 2 - iconHeight / 2 - iconY : -bbox.height / 2 - labelPadding / 2 - iconHeight / 2 - iconY})`\n    );\n    iconElem.attr(\"style\", `color: ${stylesMap.get(\"stroke\") ?? nodeBorder};`);\n  }\n  label.attr(\n    \"transform\",\n    `translate(${-bbox.width / 2 - (bbox.x - (bbox.left ?? 0))},${topLabel ? -outerHeight / 2 : outerHeight / 2 - bbox.height})`\n  );\n  iconShape.attr(\n    \"transform\",\n    `translate(${0},${topLabel ? bbox.height / 2 + labelPadding / 2 : -bbox.height / 2 - labelPadding / 2})`\n  );\n  updateNodeBounds(node, outerShape);\n  node.intersect = function(point) {\n    log.info(\"iconSquare intersect\", node, point);\n    if (!node.label) {\n      return intersect_default.rect(node, point);\n    }\n    const dx = node.x ?? 0;\n    const dy = node.y ?? 0;\n    const nodeHeight = node.height ?? 0;\n    let points = [];\n    if (topLabel) {\n      points = [\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx + width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx + width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding }\n      ];\n    } else {\n      points = [\n        { x: dx - width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + width / 2, y: dy - nodeHeight / 2 + height },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 + height },\n        { x: dx + bbox.width / 2 / 2, y: dy + nodeHeight / 2 },\n        { x: dx - bbox.width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 + height },\n        { x: dx - width / 2, y: dy - nodeHeight / 2 + height }\n      ];\n    }\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(iconSquare, \"iconSquare\");\n\n// src/rendering-util/rendering-elements/shapes/imageSquare.ts\nasync function imageSquare(parent, node, { config: { flowchart } }) {\n  const img = new Image();\n  img.src = node?.img ?? \"\";\n  await img.decode();\n  const imageNaturalWidth = Number(img.naturalWidth.toString().replace(\"px\", \"\"));\n  const imageNaturalHeight = Number(img.naturalHeight.toString().replace(\"px\", \"\"));\n  node.imageAspectRatio = imageNaturalWidth / imageNaturalHeight;\n  const { labelStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const defaultWidth = flowchart?.wrappingWidth;\n  node.defaultWidth = flowchart?.wrappingWidth;\n  const imageRawWidth = Math.max(\n    node.label ? defaultWidth ?? 0 : 0,\n    node?.assetWidth ?? imageNaturalWidth\n  );\n  const imageWidth = node.constraint === \"on\" ? node?.assetHeight ? node.assetHeight * node.imageAspectRatio : imageRawWidth : imageRawWidth;\n  const imageHeight = node.constraint === \"on\" ? imageWidth / node.imageAspectRatio : node?.assetHeight ?? imageNaturalHeight;\n  node.width = Math.max(imageWidth, defaultWidth ?? 0);\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, \"image-shape default\");\n  const topLabel = node.pos === \"t\";\n  const x2 = -imageWidth / 2;\n  const y2 = -imageHeight / 2;\n  const labelPadding = node.label ? 8 : 0;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const imageNode = rc.rectangle(x2, y2, imageWidth, imageHeight, options);\n  const outerWidth = Math.max(imageWidth, bbox.width);\n  const outerHeight = imageHeight + bbox.height + labelPadding;\n  const outerNode = rc.rectangle(-outerWidth / 2, -outerHeight / 2, outerWidth, outerHeight, {\n    ...options,\n    fill: \"none\",\n    stroke: \"none\"\n  });\n  const iconShape = shapeSvg.insert(() => imageNode, \":first-child\");\n  const outerShape = shapeSvg.insert(() => outerNode);\n  if (node.img) {\n    const image = shapeSvg.append(\"image\");\n    image.attr(\"href\", node.img);\n    image.attr(\"width\", imageWidth);\n    image.attr(\"height\", imageHeight);\n    image.attr(\"preserveAspectRatio\", \"none\");\n    image.attr(\n      \"transform\",\n      `translate(${-imageWidth / 2},${topLabel ? outerHeight / 2 - imageHeight : -outerHeight / 2})`\n    );\n  }\n  label.attr(\n    \"transform\",\n    `translate(${-bbox.width / 2 - (bbox.x - (bbox.left ?? 0))},${topLabel ? -imageHeight / 2 - bbox.height / 2 - labelPadding / 2 : imageHeight / 2 - bbox.height / 2 + labelPadding / 2})`\n  );\n  iconShape.attr(\n    \"transform\",\n    `translate(${0},${topLabel ? bbox.height / 2 + labelPadding / 2 : -bbox.height / 2 - labelPadding / 2})`\n  );\n  updateNodeBounds(node, outerShape);\n  node.intersect = function(point) {\n    log.info(\"iconSquare intersect\", node, point);\n    if (!node.label) {\n      return intersect_default.rect(node, point);\n    }\n    const dx = node.x ?? 0;\n    const dy = node.y ?? 0;\n    const nodeHeight = node.height ?? 0;\n    let points = [];\n    if (topLabel) {\n      points = [\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx + imageWidth / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx + imageWidth / 2, y: dy + nodeHeight / 2 },\n        { x: dx - imageWidth / 2, y: dy + nodeHeight / 2 },\n        { x: dx - imageWidth / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding },\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 + bbox.height + labelPadding }\n      ];\n    } else {\n      points = [\n        { x: dx - imageWidth / 2, y: dy - nodeHeight / 2 },\n        { x: dx + imageWidth / 2, y: dy - nodeHeight / 2 },\n        { x: dx + imageWidth / 2, y: dy - nodeHeight / 2 + imageHeight },\n        { x: dx + bbox.width / 2, y: dy - nodeHeight / 2 + imageHeight },\n        { x: dx + bbox.width / 2 / 2, y: dy + nodeHeight / 2 },\n        { x: dx - bbox.width / 2, y: dy + nodeHeight / 2 },\n        { x: dx - bbox.width / 2, y: dy - nodeHeight / 2 + imageHeight },\n        { x: dx - imageWidth / 2, y: dy - nodeHeight / 2 + imageHeight }\n      ];\n    }\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(imageSquare, \"imageSquare\");\n\n// src/rendering-util/rendering-elements/shapes/invertedTrapezoid.ts\nasync function inv_trapezoid(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const points = [\n    { x: 0, y: 0 },\n    { x: w2, y: 0 },\n    { x: w2 + 3 * h2 / 6, y: -h2 },\n    { x: -3 * h2 / 6, y: -h2 }\n  ];\n  let polygon;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const pathData = createPathFromPoints(points);\n    const roughNode = rc.path(pathData, options);\n    polygon = shapeSvg.insert(() => roughNode, \":first-child\").attr(\"transform\", `translate(${-w2 / 2}, ${h2 / 2})`);\n    if (cssStyles) {\n      polygon.attr(\"style\", cssStyles);\n    }\n  } else {\n    polygon = insertPolygonShape(shapeSvg, w2, h2, points);\n  }\n  if (nodeStyles) {\n    polygon.attr(\"style\", nodeStyles);\n  }\n  node.width = w2;\n  node.height = h2;\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(inv_trapezoid, \"inv_trapezoid\");\n\n// src/rendering-util/rendering-elements/shapes/drawRect.ts\nasync function drawRect(parent, node, options) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const totalWidth = Math.max(bbox.width + options.labelPaddingX * 2, node?.width || 0);\n  const totalHeight = Math.max(bbox.height + options.labelPaddingY * 2, node?.height || 0);\n  const x2 = -totalWidth / 2;\n  const y2 = -totalHeight / 2;\n  let rect2;\n  let { rx, ry } = node;\n  const { cssStyles } = node;\n  if (options?.rx && options.ry) {\n    rx = options.rx;\n    ry = options.ry;\n  }\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options2 = userNodeOverrides(node, {});\n    const roughNode = rx || ry ? rc.path(createRoundedRectPathD(x2, y2, totalWidth, totalHeight, rx || 0), options2) : rc.rectangle(x2, y2, totalWidth, totalHeight, options2);\n    rect2 = shapeSvg.insert(() => roughNode, \":first-child\");\n    rect2.attr(\"class\", \"basic label-container\").attr(\"style\", handleUndefinedAttr(cssStyles));\n  } else {\n    rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n    rect2.attr(\"class\", \"basic label-container\").attr(\"style\", nodeStyles).attr(\"rx\", handleUndefinedAttr(rx)).attr(\"ry\", handleUndefinedAttr(ry)).attr(\"x\", x2).attr(\"y\", y2).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  }\n  updateNodeBounds(node, rect2);\n  node.calcIntersect = function(bounds, point) {\n    return intersect_default.rect(bounds, point);\n  };\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(drawRect, \"drawRect\");\n\n// src/rendering-util/rendering-elements/shapes/labelRect.ts\nasync function labelRect(parent, node) {\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, \"label\");\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const totalWidth = 0.1;\n  const totalHeight = 0.1;\n  rect2.attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  shapeSvg.attr(\"class\", \"label edgeLabel\");\n  label.attr(\n    \"transform\",\n    `translate(${-(bbox.width / 2) - (bbox.x - (bbox.left ?? 0))}, ${-(bbox.height / 2) - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(labelRect, \"labelRect\");\n\n// src/rendering-util/rendering-elements/shapes/leanLeft.ts\nasync function lean_left(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0), node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0), node?.height ?? 0);\n  const points = [\n    { x: 0, y: 0 },\n    { x: w2 + 3 * h2 / 6, y: 0 },\n    { x: w2, y: -h2 },\n    { x: -(3 * h2) / 6, y: -h2 }\n  ];\n  let polygon;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const pathData = createPathFromPoints(points);\n    const roughNode = rc.path(pathData, options);\n    polygon = shapeSvg.insert(() => roughNode, \":first-child\").attr(\"transform\", `translate(${-w2 / 2}, ${h2 / 2})`);\n    if (cssStyles) {\n      polygon.attr(\"style\", cssStyles);\n    }\n  } else {\n    polygon = insertPolygonShape(shapeSvg, w2, h2, points);\n  }\n  if (nodeStyles) {\n    polygon.attr(\"style\", nodeStyles);\n  }\n  node.width = w2;\n  node.height = h2;\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(lean_left, \"lean_left\");\n\n// src/rendering-util/rendering-elements/shapes/leanRight.ts\nasync function lean_right(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0), node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0), node?.height ?? 0);\n  const points = [\n    { x: -3 * h2 / 6, y: 0 },\n    { x: w2, y: 0 },\n    { x: w2 + 3 * h2 / 6, y: -h2 },\n    { x: 0, y: -h2 }\n  ];\n  let polygon;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const pathData = createPathFromPoints(points);\n    const roughNode = rc.path(pathData, options);\n    polygon = shapeSvg.insert(() => roughNode, \":first-child\").attr(\"transform\", `translate(${-w2 / 2}, ${h2 / 2})`);\n    if (cssStyles) {\n      polygon.attr(\"style\", cssStyles);\n    }\n  } else {\n    polygon = insertPolygonShape(shapeSvg, w2, h2, points);\n  }\n  if (nodeStyles) {\n    polygon.attr(\"style\", nodeStyles);\n  }\n  node.width = w2;\n  node.height = h2;\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(lean_right, \"lean_right\");\n\n// src/rendering-util/rendering-elements/shapes/lightningBolt.ts\nfunction lightningBolt(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.label = \"\";\n  node.labelStyle = labelStyles;\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", getNodeClasses(node)).attr(\"id\", node.domId ?? node.id);\n  const { cssStyles } = node;\n  const width = Math.max(35, node?.width ?? 0);\n  const height = Math.max(35, node?.height ?? 0);\n  const gap = 7;\n  const points = [\n    { x: width, y: 0 },\n    { x: 0, y: height + gap / 2 },\n    { x: width - 2 * gap, y: height + gap / 2 },\n    { x: 0, y: 2 * height },\n    { x: width, y: height - gap / 2 },\n    { x: 2 * gap, y: height - gap / 2 }\n  ];\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const linePath = createPathFromPoints(points);\n  const lineNode = rc.path(linePath, options);\n  const lightningBolt2 = shapeSvg.insert(() => lineNode, \":first-child\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    lightningBolt2.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    lightningBolt2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  lightningBolt2.attr(\"transform\", `translate(-${width / 2},${-height})`);\n  updateNodeBounds(node, lightningBolt2);\n  node.intersect = function(point) {\n    log.info(\"lightningBolt intersect\", node, point);\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(lightningBolt, \"lightningBolt\");\n\n// src/rendering-util/rendering-elements/shapes/linedCylinder.ts\nvar createCylinderPathD2 = /* @__PURE__ */ __name((x2, y2, width, height, rx, ry, outerOffset) => {\n  return [\n    `M${x2},${y2 + ry}`,\n    `a${rx},${ry} 0,0,0 ${width},0`,\n    `a${rx},${ry} 0,0,0 ${-width},0`,\n    `l0,${height}`,\n    `a${rx},${ry} 0,0,0 ${width},0`,\n    `l0,${-height}`,\n    `M${x2},${y2 + ry + outerOffset}`,\n    `a${rx},${ry} 0,0,0 ${width},0`\n  ].join(\" \");\n}, \"createCylinderPathD\");\nvar createOuterCylinderPathD2 = /* @__PURE__ */ __name((x2, y2, width, height, rx, ry, outerOffset) => {\n  return [\n    `M${x2},${y2 + ry}`,\n    `M${x2 + width},${y2 + ry}`,\n    `a${rx},${ry} 0,0,0 ${-width},0`,\n    `l0,${height}`,\n    `a${rx},${ry} 0,0,0 ${width},0`,\n    `l0,${-height}`,\n    `M${x2},${y2 + ry + outerOffset}`,\n    `a${rx},${ry} 0,0,0 ${width},0`\n  ].join(\" \");\n}, \"createOuterCylinderPathD\");\nvar createInnerCylinderPathD2 = /* @__PURE__ */ __name((x2, y2, width, height, rx, ry) => {\n  return [`M${x2 - width / 2},${-height / 2}`, `a${rx},${ry} 0,0,0 ${width},0`].join(\" \");\n}, \"createInnerCylinderPathD\");\nasync function linedCylinder(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0), node.width ?? 0);\n  const rx = w2 / 2;\n  const ry = rx / (2.5 + w2 / 50);\n  const h2 = Math.max(bbox.height + ry + (node.padding ?? 0), node.height ?? 0);\n  const outerOffset = h2 * 0.1;\n  let cylinder2;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const outerPathData = createOuterCylinderPathD2(0, 0, w2, h2, rx, ry, outerOffset);\n    const innerPathData = createInnerCylinderPathD2(0, ry, w2, h2, rx, ry);\n    const options = userNodeOverrides(node, {});\n    const outerNode = rc.path(outerPathData, options);\n    const innerLine = rc.path(innerPathData, options);\n    const innerLineEl = shapeSvg.insert(() => innerLine, \":first-child\");\n    innerLineEl.attr(\"class\", \"line\");\n    cylinder2 = shapeSvg.insert(() => outerNode, \":first-child\");\n    cylinder2.attr(\"class\", \"basic label-container\");\n    if (cssStyles) {\n      cylinder2.attr(\"style\", cssStyles);\n    }\n  } else {\n    const pathData = createCylinderPathD2(0, 0, w2, h2, rx, ry, outerOffset);\n    cylinder2 = shapeSvg.insert(\"path\", \":first-child\").attr(\"d\", pathData).attr(\"class\", \"basic label-container\").attr(\"style\", handleUndefinedAttr(cssStyles)).attr(\"style\", nodeStyles);\n  }\n  cylinder2.attr(\"label-offset-y\", ry);\n  cylinder2.attr(\"transform\", `translate(${-w2 / 2}, ${-(h2 / 2 + ry)})`);\n  updateNodeBounds(node, cylinder2);\n  label.attr(\n    \"transform\",\n    `translate(${-(bbox.width / 2) - (bbox.x - (bbox.left ?? 0))}, ${-(bbox.height / 2) + ry - (bbox.y - (bbox.top ?? 0))})`\n  );\n  node.intersect = function(point) {\n    const pos = intersect_default.rect(node, point);\n    const x2 = pos.x - (node.x ?? 0);\n    if (rx != 0 && (Math.abs(x2) < (node.width ?? 0) / 2 || Math.abs(x2) == (node.width ?? 0) / 2 && Math.abs(pos.y - (node.y ?? 0)) > (node.height ?? 0) / 2 - ry)) {\n      let y2 = ry * ry * (1 - x2 * x2 / (rx * rx));\n      if (y2 > 0) {\n        y2 = Math.sqrt(y2);\n      }\n      y2 = ry - y2;\n      if (point.y - (node.y ?? 0) > 0) {\n        y2 = -y2;\n      }\n      pos.y += y2;\n    }\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(linedCylinder, \"linedCylinder\");\n\n// src/rendering-util/rendering-elements/shapes/linedWaveEdgedRect.ts\nasync function linedWaveEdgedRect(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const waveAmplitude = h2 / 4;\n  const finalH = h2 + waveAmplitude;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: -w2 / 2 - w2 / 2 * 0.1, y: -finalH / 2 },\n    { x: -w2 / 2 - w2 / 2 * 0.1, y: finalH / 2 },\n    ...generateFullSineWavePoints(\n      -w2 / 2 - w2 / 2 * 0.1,\n      finalH / 2,\n      w2 / 2 + w2 / 2 * 0.1,\n      finalH / 2,\n      waveAmplitude,\n      0.8\n    ),\n    { x: w2 / 2 + w2 / 2 * 0.1, y: -finalH / 2 },\n    { x: -w2 / 2 - w2 / 2 * 0.1, y: -finalH / 2 },\n    { x: -w2 / 2, y: -finalH / 2 },\n    { x: -w2 / 2, y: finalH / 2 * 1.1 },\n    { x: -w2 / 2, y: -finalH / 2 }\n  ];\n  const poly = rc.polygon(\n    points.map((p2) => [p2.x, p2.y]),\n    options\n  );\n  const waveEdgeRect = shapeSvg.insert(() => poly, \":first-child\");\n  waveEdgeRect.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    waveEdgeRect.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    waveEdgeRect.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  waveEdgeRect.attr(\"transform\", `translate(0,${-waveAmplitude / 2})`);\n  label.attr(\n    \"transform\",\n    `translate(${-w2 / 2 + (node.padding ?? 0) + w2 / 2 * 0.1 / 2 - (bbox.x - (bbox.left ?? 0))},${-h2 / 2 + (node.padding ?? 0) - waveAmplitude / 2 - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, waveEdgeRect);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(linedWaveEdgedRect, \"linedWaveEdgedRect\");\n\n// src/rendering-util/rendering-elements/shapes/multiRect.ts\nasync function multiRect(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const rectOffset = 5;\n  const x2 = -w2 / 2;\n  const y2 = -h2 / 2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  const outerPathPoints = [\n    { x: x2 - rectOffset, y: y2 + rectOffset },\n    { x: x2 - rectOffset, y: y2 + h2 + rectOffset },\n    { x: x2 + w2 - rectOffset, y: y2 + h2 + rectOffset },\n    { x: x2 + w2 - rectOffset, y: y2 + h2 },\n    { x: x2 + w2, y: y2 + h2 },\n    { x: x2 + w2, y: y2 + h2 - rectOffset },\n    { x: x2 + w2 + rectOffset, y: y2 + h2 - rectOffset },\n    { x: x2 + w2 + rectOffset, y: y2 - rectOffset },\n    { x: x2 + rectOffset, y: y2 - rectOffset },\n    { x: x2 + rectOffset, y: y2 },\n    { x: x2, y: y2 },\n    { x: x2, y: y2 + rectOffset }\n  ];\n  const innerPathPoints = [\n    { x: x2, y: y2 + rectOffset },\n    { x: x2 + w2 - rectOffset, y: y2 + rectOffset },\n    { x: x2 + w2 - rectOffset, y: y2 + h2 },\n    { x: x2 + w2, y: y2 + h2 },\n    { x: x2 + w2, y: y2 },\n    { x: x2, y: y2 }\n  ];\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const outerPath = createPathFromPoints(outerPathPoints);\n  const outerNode = rc.path(outerPath, options);\n  const innerPath = createPathFromPoints(innerPathPoints);\n  const innerNode = rc.path(innerPath, { ...options, fill: \"none\" });\n  const multiRect2 = shapeSvg.insert(() => innerNode, \":first-child\");\n  multiRect2.insert(() => outerNode, \":first-child\");\n  multiRect2.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    multiRect2.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    multiRect2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  label.attr(\n    \"transform\",\n    `translate(${-(bbox.width / 2) - rectOffset - (bbox.x - (bbox.left ?? 0))}, ${-(bbox.height / 2) + rectOffset - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, multiRect2);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, outerPathPoints, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(multiRect, \"multiRect\");\n\n// src/rendering-util/rendering-elements/shapes/multiWaveEdgedRectangle.ts\nasync function multiWaveEdgedRectangle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const waveAmplitude = h2 / 4;\n  const finalH = h2 + waveAmplitude;\n  const x2 = -w2 / 2;\n  const y2 = -finalH / 2;\n  const rectOffset = 5;\n  const { cssStyles } = node;\n  const wavePoints = generateFullSineWavePoints(\n    x2 - rectOffset,\n    y2 + finalH + rectOffset,\n    x2 + w2 - rectOffset,\n    y2 + finalH + rectOffset,\n    waveAmplitude,\n    0.8\n  );\n  const lastWavePoint = wavePoints?.[wavePoints.length - 1];\n  const outerPathPoints = [\n    { x: x2 - rectOffset, y: y2 + rectOffset },\n    { x: x2 - rectOffset, y: y2 + finalH + rectOffset },\n    ...wavePoints,\n    { x: x2 + w2 - rectOffset, y: lastWavePoint.y - rectOffset },\n    { x: x2 + w2, y: lastWavePoint.y - rectOffset },\n    { x: x2 + w2, y: lastWavePoint.y - 2 * rectOffset },\n    { x: x2 + w2 + rectOffset, y: lastWavePoint.y - 2 * rectOffset },\n    { x: x2 + w2 + rectOffset, y: y2 - rectOffset },\n    { x: x2 + rectOffset, y: y2 - rectOffset },\n    { x: x2 + rectOffset, y: y2 },\n    { x: x2, y: y2 },\n    { x: x2, y: y2 + rectOffset }\n  ];\n  const innerPathPoints = [\n    { x: x2, y: y2 + rectOffset },\n    { x: x2 + w2 - rectOffset, y: y2 + rectOffset },\n    { x: x2 + w2 - rectOffset, y: lastWavePoint.y - rectOffset },\n    { x: x2 + w2, y: lastWavePoint.y - rectOffset },\n    { x: x2 + w2, y: y2 },\n    { x: x2, y: y2 }\n  ];\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const outerPath = createPathFromPoints(outerPathPoints);\n  const outerNode = rc.path(outerPath, options);\n  const innerPath = createPathFromPoints(innerPathPoints);\n  const innerNode = rc.path(innerPath, options);\n  const shape = shapeSvg.insert(() => outerNode, \":first-child\");\n  shape.insert(() => innerNode);\n  shape.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    shape.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    shape.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  shape.attr(\"transform\", `translate(0,${-waveAmplitude / 2})`);\n  label.attr(\n    \"transform\",\n    `translate(${-(bbox.width / 2) - rectOffset - (bbox.x - (bbox.left ?? 0))}, ${-(bbox.height / 2) + rectOffset - waveAmplitude / 2 - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, shape);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, outerPathPoints, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(multiWaveEdgedRectangle, \"multiWaveEdgedRectangle\");\n\n// src/rendering-util/rendering-elements/shapes/note.ts\nasync function note(parent, node, { config: { themeVariables } }) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const useHtmlLabels = node.useHtmlLabels || getConfig().flowchart?.htmlLabels !== false;\n  if (!useHtmlLabels) {\n    node.centerLabel = true;\n  }\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const totalWidth = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const totalHeight = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const x2 = -totalWidth / 2;\n  const y2 = -totalHeight / 2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {\n    fill: themeVariables.noteBkgColor,\n    stroke: themeVariables.noteBorderColor\n  });\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const noteShapeNode = rc.rectangle(x2, y2, totalWidth, totalHeight, options);\n  const rect2 = shapeSvg.insert(() => noteShapeNode, \":first-child\");\n  rect2.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    rect2.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    rect2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  label.attr(\n    \"transform\",\n    `translate(${-bbox.width / 2 - (bbox.x - (bbox.left ?? 0))}, ${-(bbox.height / 2) - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(note, \"note\");\n\n// src/rendering-util/rendering-elements/shapes/question.ts\nvar createDecisionBoxPathD = /* @__PURE__ */ __name((x2, y2, size) => {\n  return [\n    `M${x2 + size / 2},${y2}`,\n    `L${x2 + size},${y2 - size / 2}`,\n    `L${x2 + size / 2},${y2 - size}`,\n    `L${x2},${y2 - size / 2}`,\n    \"Z\"\n  ].join(\" \");\n}, \"createDecisionBoxPathD\");\nasync function question(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = bbox.width + node.padding;\n  const h2 = bbox.height + node.padding;\n  const s2 = w2 + h2;\n  const adjustment = 0.5;\n  const points = [\n    { x: s2 / 2, y: 0 },\n    { x: s2, y: -s2 / 2 },\n    { x: s2 / 2, y: -s2 },\n    { x: 0, y: -s2 / 2 }\n  ];\n  let polygon;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const pathData = createDecisionBoxPathD(0, 0, s2);\n    const roughNode = rc.path(pathData, options);\n    polygon = shapeSvg.insert(() => roughNode, \":first-child\").attr(\"transform\", `translate(${-s2 / 2 + adjustment}, ${s2 / 2})`);\n    if (cssStyles) {\n      polygon.attr(\"style\", cssStyles);\n    }\n  } else {\n    polygon = insertPolygonShape(shapeSvg, s2, s2, points);\n    polygon.attr(\"transform\", `translate(${-s2 / 2 + adjustment}, ${s2 / 2})`);\n  }\n  if (nodeStyles) {\n    polygon.attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, polygon);\n  node.calcIntersect = function(bounds, point) {\n    const s3 = bounds.width;\n    const points2 = [\n      { x: s3 / 2, y: 0 },\n      { x: s3, y: -s3 / 2 },\n      { x: s3 / 2, y: -s3 },\n      { x: 0, y: -s3 / 2 }\n    ];\n    const res = intersect_default.polygon(bounds, points2, point);\n    return { x: res.x - 0.5, y: res.y - 0.5 };\n  };\n  node.intersect = function(point) {\n    return this.calcIntersect(node, point);\n  };\n  return shapeSvg;\n}\n__name(question, \"question\");\n\n// src/rendering-util/rendering-elements/shapes/rectLeftInvArrow.ts\nasync function rect_left_inv_arrow(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0), node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0), node?.height ?? 0);\n  const x2 = -w2 / 2;\n  const y2 = -h2 / 2;\n  const notch = y2 / 2;\n  const points = [\n    { x: x2 + notch, y: y2 },\n    { x: x2, y: 0 },\n    { x: x2 + notch, y: -y2 },\n    { x: -x2, y: -y2 },\n    { x: -x2, y: y2 }\n  ];\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const pathData = createPathFromPoints(points);\n  const roughNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => roughNode, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  polygon.attr(\"transform\", `translate(${-notch / 2},0)`);\n  label.attr(\n    \"transform\",\n    `translate(${-notch / 2 - bbox.width / 2 - (bbox.x - (bbox.left ?? 0))}, ${-(bbox.height / 2) - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(rect_left_inv_arrow, \"rect_left_inv_arrow\");\n\n// src/rendering-util/rendering-elements/shapes/rectWithTitle.ts\nasync function rectWithTitle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  let classes;\n  if (!node.cssClasses) {\n    classes = \"node default\";\n  } else {\n    classes = \"node \" + node.cssClasses;\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId || node.id);\n  const g2 = shapeSvg.insert(\"g\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"label\").attr(\"style\", nodeStyles);\n  const description = node.description;\n  const title = node.label;\n  const text2 = label.node().appendChild(await createLabel_default(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig2()?.flowchart?.htmlLabels)) {\n    const div2 = text2.children[0];\n    const dv2 = select_default(text2);\n    bbox = div2.getBoundingClientRect();\n    dv2.attr(\"width\", bbox.width);\n    dv2.attr(\"height\", bbox.height);\n  }\n  log.info(\"Text 2\", description);\n  const textRows = description || [];\n  const titleBox = text2.getBBox();\n  const descr = label.node().appendChild(\n    await createLabel_default(\n      textRows.join ? textRows.join(\"<br/>\") : textRows,\n      node.labelStyle,\n      true,\n      true\n    )\n  );\n  const div = descr.children[0];\n  const dv = select_default(descr);\n  bbox = div.getBoundingClientRect();\n  dv.attr(\"width\", bbox.width);\n  dv.attr(\"height\", bbox.height);\n  const halfPadding = (node.padding || 0) / 2;\n  select_default(descr).attr(\n    \"transform\",\n    \"translate( \" + (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) + \", \" + (titleBox.height + halfPadding + 5) + \")\"\n  );\n  select_default(text2).attr(\n    \"transform\",\n    \"translate( \" + (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) + \", 0)\"\n  );\n  bbox = label.node().getBBox();\n  label.attr(\n    \"transform\",\n    \"translate(\" + -bbox.width / 2 + \", \" + (-bbox.height / 2 - halfPadding + 3) + \")\"\n  );\n  const totalWidth = bbox.width + (node.padding || 0);\n  const totalHeight = bbox.height + (node.padding || 0);\n  const x2 = -bbox.width / 2 - halfPadding;\n  const y2 = -bbox.height / 2 - halfPadding;\n  let rect2;\n  let innerLine;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const roughNode = rc.path(\n      createRoundedRectPathD(x2, y2, totalWidth, totalHeight, node.rx || 0),\n      options\n    );\n    const roughLine = rc.line(\n      -bbox.width / 2 - halfPadding,\n      -bbox.height / 2 - halfPadding + titleBox.height + halfPadding,\n      bbox.width / 2 + halfPadding,\n      -bbox.height / 2 - halfPadding + titleBox.height + halfPadding,\n      options\n    );\n    innerLine = shapeSvg.insert(() => {\n      log.debug(\"Rough node insert CXC\", roughNode);\n      return roughLine;\n    }, \":first-child\");\n    rect2 = shapeSvg.insert(() => {\n      log.debug(\"Rough node insert CXC\", roughNode);\n      return roughNode;\n    }, \":first-child\");\n  } else {\n    rect2 = g2.insert(\"rect\", \":first-child\");\n    innerLine = g2.insert(\"line\");\n    rect2.attr(\"class\", \"outer title-state\").attr(\"style\", nodeStyles).attr(\"x\", -bbox.width / 2 - halfPadding).attr(\"y\", -bbox.height / 2 - halfPadding).attr(\"width\", bbox.width + (node.padding || 0)).attr(\"height\", bbox.height + (node.padding || 0));\n    innerLine.attr(\"class\", \"divider\").attr(\"x1\", -bbox.width / 2 - halfPadding).attr(\"x2\", bbox.width / 2 + halfPadding).attr(\"y1\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding).attr(\"y2\", -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(rectWithTitle, \"rectWithTitle\");\n\n// src/rendering-util/rendering-elements/shapes/roundedRect.ts\nfunction generateArcPoints2(x1, y1, x2, y2, rx, ry, clockwise) {\n  const numPoints = 20;\n  const midX = (x1 + x2) / 2;\n  const midY = (y1 + y2) / 2;\n  const angle = Math.atan2(y2 - y1, x2 - x1);\n  const dx = (x2 - x1) / 2;\n  const dy = (y2 - y1) / 2;\n  const transformedX = dx / rx;\n  const transformedY = dy / ry;\n  const distance = Math.sqrt(transformedX ** 2 + transformedY ** 2);\n  if (distance > 1) {\n    throw new Error(\"The given radii are too small to create an arc between the points.\");\n  }\n  const scaledCenterDistance = Math.sqrt(1 - distance ** 2);\n  const centerX = midX + scaledCenterDistance * ry * Math.sin(angle) * (clockwise ? -1 : 1);\n  const centerY = midY - scaledCenterDistance * rx * Math.cos(angle) * (clockwise ? -1 : 1);\n  const startAngle = Math.atan2((y1 - centerY) / ry, (x1 - centerX) / rx);\n  const endAngle = Math.atan2((y2 - centerY) / ry, (x2 - centerX) / rx);\n  let angleRange = endAngle - startAngle;\n  if (clockwise && angleRange < 0) {\n    angleRange += 2 * Math.PI;\n  }\n  if (!clockwise && angleRange > 0) {\n    angleRange -= 2 * Math.PI;\n  }\n  const points = [];\n  for (let i2 = 0; i2 < numPoints; i2++) {\n    const t2 = i2 / (numPoints - 1);\n    const angle2 = startAngle + t2 * angleRange;\n    const x3 = centerX + rx * Math.cos(angle2);\n    const y3 = centerY + ry * Math.sin(angle2);\n    points.push({ x: x3, y: y3 });\n  }\n  return points;\n}\n__name(generateArcPoints2, \"generateArcPoints\");\nasync function roundedRect(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const labelPaddingX = node?.padding ?? 0;\n  const labelPaddingY = node?.padding ?? 0;\n  const w2 = (node?.width ? node?.width : bbox.width) + labelPaddingX * 2;\n  const h2 = (node?.height ? node?.height : bbox.height) + labelPaddingY * 2;\n  const radius = node.radius || 5;\n  const taper = node.taper || 5;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.stroke) {\n    options.stroke = node.stroke;\n  }\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    // Top edge (left to right)\n    { x: -w2 / 2 + taper, y: -h2 / 2 },\n    // Top-left corner start (1)\n    { x: w2 / 2 - taper, y: -h2 / 2 },\n    // Top-right corner start (2)\n    ...generateArcPoints2(w2 / 2 - taper, -h2 / 2, w2 / 2, -h2 / 2 + taper, radius, radius, true),\n    // Top-left arc (2 to 3)\n    // Right edge (top to bottom)\n    { x: w2 / 2, y: -h2 / 2 + taper },\n    // Top-right taper point (3)\n    { x: w2 / 2, y: h2 / 2 - taper },\n    // Bottom-right taper point (4)\n    ...generateArcPoints2(w2 / 2, h2 / 2 - taper, w2 / 2 - taper, h2 / 2, radius, radius, true),\n    // Top-left arc (4 to 5)\n    // Bottom edge (right to left)\n    { x: w2 / 2 - taper, y: h2 / 2 },\n    // Bottom-right corner start (5)\n    { x: -w2 / 2 + taper, y: h2 / 2 },\n    // Bottom-left corner start (6)\n    ...generateArcPoints2(-w2 / 2 + taper, h2 / 2, -w2 / 2, h2 / 2 - taper, radius, radius, true),\n    // Top-left arc (4 to 5)\n    // Left edge (bottom to top)\n    { x: -w2 / 2, y: h2 / 2 - taper },\n    // Bottom-left taper point (7)\n    { x: -w2 / 2, y: -h2 / 2 + taper },\n    // Top-left taper point (8)\n    ...generateArcPoints2(-w2 / 2, -h2 / 2 + taper, -w2 / 2 + taper, -h2 / 2, radius, radius, true)\n    // Top-left arc (4 to 5)\n  ];\n  const pathData = createPathFromPoints(points);\n  const shapeNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => shapeNode, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container outer-path\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(roundedRect, \"roundedRect\");\n\n// src/rendering-util/rendering-elements/shapes/shadedProcess.ts\nasync function shadedProcess(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const halfPadding = node?.padding ?? 0;\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const x2 = -bbox.width / 2 - halfPadding;\n  const y2 = -bbox.height / 2 - halfPadding;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: x2, y: y2 },\n    { x: x2 + w2 + 8, y: y2 },\n    { x: x2 + w2 + 8, y: y2 + h2 },\n    { x: x2 - 8, y: y2 + h2 },\n    { x: x2 - 8, y: y2 },\n    { x: x2, y: y2 },\n    { x: x2, y: y2 + h2 }\n  ];\n  const roughNode = rc.polygon(\n    points.map((p2) => [p2.x, p2.y]),\n    options\n  );\n  const rect2 = shapeSvg.insert(() => roughNode, \":first-child\");\n  rect2.attr(\"class\", \"basic label-container\").attr(\"style\", handleUndefinedAttr(cssStyles));\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    rect2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  if (cssStyles && node.look !== \"handDrawn\") {\n    rect2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  label.attr(\n    \"transform\",\n    `translate(${-w2 / 2 + 4 + (node.padding ?? 0) - (bbox.x - (bbox.left ?? 0))},${-h2 / 2 + (node.padding ?? 0) - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(shadedProcess, \"shadedProcess\");\n\n// src/rendering-util/rendering-elements/shapes/slopedRect.ts\nasync function slopedRect(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const x2 = -w2 / 2;\n  const y2 = -h2 / 2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: x2, y: y2 },\n    { x: x2, y: y2 + h2 },\n    { x: x2 + w2, y: y2 + h2 },\n    { x: x2 + w2, y: y2 - h2 / 2 }\n  ];\n  const pathData = createPathFromPoints(points);\n  const shapeNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => shapeNode, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  polygon.attr(\"transform\", `translate(0, ${h2 / 4})`);\n  label.attr(\n    \"transform\",\n    `translate(${-w2 / 2 + (node.padding ?? 0) - (bbox.x - (bbox.left ?? 0))}, ${-h2 / 4 + (node.padding ?? 0) - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(slopedRect, \"slopedRect\");\n\n// src/rendering-util/rendering-elements/shapes/squareRect.ts\nasync function squareRect2(parent, node) {\n  const options = {\n    rx: 0,\n    ry: 0,\n    classes: \"\",\n    labelPaddingX: node.labelPaddingX ?? (node?.padding || 0) * 2,\n    labelPaddingY: (node?.padding || 0) * 1\n  };\n  return drawRect(parent, node, options);\n}\n__name(squareRect2, \"squareRect\");\n\n// src/rendering-util/rendering-elements/shapes/stadium.ts\nasync function stadium(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const h2 = bbox.height + node.padding;\n  const w2 = bbox.width + h2 / 4 + node.padding;\n  const radius = h2 / 2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: -w2 / 2 + radius, y: -h2 / 2 },\n    { x: w2 / 2 - radius, y: -h2 / 2 },\n    ...generateCirclePoints(-w2 / 2 + radius, 0, radius, 50, 90, 270),\n    { x: w2 / 2 - radius, y: h2 / 2 },\n    ...generateCirclePoints(w2 / 2 - radius, 0, radius, 50, 270, 450)\n  ];\n  const pathData = createPathFromPoints(points);\n  const shapeNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => shapeNode, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container outer-path\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(stadium, \"stadium\");\n\n// src/rendering-util/rendering-elements/shapes/state.ts\nasync function state(parent, node) {\n  const options = {\n    rx: 5,\n    ry: 5,\n    classes: \"flowchart-node\"\n  };\n  return drawRect(parent, node, options);\n}\n__name(state, \"state\");\n\n// src/rendering-util/rendering-elements/shapes/stateEnd.ts\nfunction stateEnd(parent, node, { config: { themeVariables } }) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { cssStyles } = node;\n  const { lineColor, stateBorder, nodeBorder } = themeVariables;\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const roughNode = rc.circle(0, 0, 14, {\n    ...options,\n    stroke: lineColor,\n    strokeWidth: 2\n  });\n  const innerFill = stateBorder ?? nodeBorder;\n  const roughInnerNode = rc.circle(0, 0, 5, {\n    ...options,\n    fill: innerFill,\n    stroke: innerFill,\n    strokeWidth: 2,\n    fillStyle: \"solid\"\n  });\n  const circle2 = shapeSvg.insert(() => roughNode, \":first-child\");\n  circle2.insert(() => roughInnerNode);\n  if (cssStyles) {\n    circle2.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles) {\n    circle2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point) {\n    return intersect_default.circle(node, 7, point);\n  };\n  return shapeSvg;\n}\n__name(stateEnd, \"stateEnd\");\n\n// src/rendering-util/rendering-elements/shapes/stateStart.ts\nfunction stateStart(parent, node, { config: { themeVariables } }) {\n  const { lineColor } = themeVariables;\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"node default\").attr(\"id\", node.domId || node.id);\n  let circle2;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const roughNode = rc.circle(0, 0, 14, solidStateFill(lineColor));\n    circle2 = shapeSvg.insert(() => roughNode);\n    circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\n  } else {\n    circle2 = shapeSvg.insert(\"circle\", \":first-child\");\n    circle2.attr(\"class\", \"state-start\").attr(\"r\", 7).attr(\"width\", 14).attr(\"height\", 14);\n  }\n  updateNodeBounds(node, circle2);\n  node.intersect = function(point) {\n    return intersect_default.circle(node, 7, point);\n  };\n  return shapeSvg;\n}\n__name(stateStart, \"stateStart\");\n\n// src/rendering-util/rendering-elements/shapes/subroutine.ts\nasync function subroutine(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const halfPadding = (node?.padding || 0) / 2;\n  const w2 = bbox.width + node.padding;\n  const h2 = bbox.height + node.padding;\n  const x2 = -bbox.width / 2 - halfPadding;\n  const y2 = -bbox.height / 2 - halfPadding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w2, y: 0 },\n    { x: w2, y: -h2 },\n    { x: 0, y: -h2 },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w2 + 8, y: 0 },\n    { x: w2 + 8, y: -h2 },\n    { x: -8, y: -h2 },\n    { x: -8, y: 0 }\n  ];\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const roughNode = rc.rectangle(x2 - 8, y2, w2 + 16, h2, options);\n    const l1 = rc.line(x2, y2, x2, y2 + h2, options);\n    const l2 = rc.line(x2 + w2, y2, x2 + w2, y2 + h2, options);\n    shapeSvg.insert(() => l1, \":first-child\");\n    shapeSvg.insert(() => l2, \":first-child\");\n    const rect2 = shapeSvg.insert(() => roughNode, \":first-child\");\n    const { cssStyles } = node;\n    rect2.attr(\"class\", \"basic label-container\").attr(\"style\", handleUndefinedAttr(cssStyles));\n    updateNodeBounds(node, rect2);\n  } else {\n    const el = insertPolygonShape(shapeSvg, w2, h2, points);\n    if (nodeStyles) {\n      el.attr(\"style\", nodeStyles);\n    }\n    updateNodeBounds(node, el);\n  }\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(subroutine, \"subroutine\");\n\n// src/rendering-util/rendering-elements/shapes/taggedRect.ts\nasync function taggedRect(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const x2 = -w2 / 2;\n  const y2 = -h2 / 2;\n  const tagWidth = 0.2 * h2;\n  const tagHeight = 0.2 * h2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  const rectPoints = [\n    { x: x2 - tagWidth / 2, y: y2 },\n    { x: x2 + w2 + tagWidth / 2, y: y2 },\n    { x: x2 + w2 + tagWidth / 2, y: y2 + h2 },\n    { x: x2 - tagWidth / 2, y: y2 + h2 }\n  ];\n  const tagPoints = [\n    { x: x2 + w2 - tagWidth / 2, y: y2 + h2 },\n    { x: x2 + w2 + tagWidth / 2, y: y2 + h2 },\n    { x: x2 + w2 + tagWidth / 2, y: y2 + h2 - tagHeight }\n  ];\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const rectPath = createPathFromPoints(rectPoints);\n  const rectNode = rc.path(rectPath, options);\n  const tagPath = createPathFromPoints(tagPoints);\n  const tagNode = rc.path(tagPath, { ...options, fillStyle: \"solid\" });\n  const taggedRect2 = shapeSvg.insert(() => tagNode, \":first-child\");\n  taggedRect2.insert(() => rectNode, \":first-child\");\n  taggedRect2.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    taggedRect2.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    taggedRect2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, taggedRect2);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, rectPoints, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(taggedRect, \"taggedRect\");\n\n// src/rendering-util/rendering-elements/shapes/taggedWaveEdgedRectangle.ts\nasync function taggedWaveEdgedRectangle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const waveAmplitude = h2 / 4;\n  const tagWidth = 0.2 * w2;\n  const tagHeight = 0.2 * h2;\n  const finalH = h2 + waveAmplitude;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: -w2 / 2 - w2 / 2 * 0.1, y: finalH / 2 },\n    ...generateFullSineWavePoints(\n      -w2 / 2 - w2 / 2 * 0.1,\n      finalH / 2,\n      w2 / 2 + w2 / 2 * 0.1,\n      finalH / 2,\n      waveAmplitude,\n      0.8\n    ),\n    { x: w2 / 2 + w2 / 2 * 0.1, y: -finalH / 2 },\n    { x: -w2 / 2 - w2 / 2 * 0.1, y: -finalH / 2 }\n  ];\n  const x2 = -w2 / 2 + w2 / 2 * 0.1;\n  const y2 = -finalH / 2 - tagHeight * 0.4;\n  const tagPoints = [\n    { x: x2 + w2 - tagWidth, y: (y2 + h2) * 1.4 },\n    { x: x2 + w2, y: y2 + h2 - tagHeight },\n    { x: x2 + w2, y: (y2 + h2) * 0.9 },\n    ...generateFullSineWavePoints(\n      x2 + w2,\n      (y2 + h2) * 1.3,\n      x2 + w2 - tagWidth,\n      (y2 + h2) * 1.5,\n      -h2 * 0.03,\n      0.5\n    )\n  ];\n  const waveEdgeRectPath = createPathFromPoints(points);\n  const waveEdgeRectNode = rc.path(waveEdgeRectPath, options);\n  const taggedWaveEdgeRectPath = createPathFromPoints(tagPoints);\n  const taggedWaveEdgeRectNode = rc.path(taggedWaveEdgeRectPath, {\n    ...options,\n    fillStyle: \"solid\"\n  });\n  const waveEdgeRect = shapeSvg.insert(() => taggedWaveEdgeRectNode, \":first-child\");\n  waveEdgeRect.insert(() => waveEdgeRectNode, \":first-child\");\n  waveEdgeRect.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    waveEdgeRect.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    waveEdgeRect.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  waveEdgeRect.attr(\"transform\", `translate(0,${-waveAmplitude / 2})`);\n  label.attr(\n    \"transform\",\n    `translate(${-w2 / 2 + (node.padding ?? 0) - (bbox.x - (bbox.left ?? 0))},${-h2 / 2 + (node.padding ?? 0) - waveAmplitude / 2 - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, waveEdgeRect);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(taggedWaveEdgedRectangle, \"taggedWaveEdgedRectangle\");\n\n// src/rendering-util/rendering-elements/shapes/text.ts\nasync function text(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const totalWidth = Math.max(bbox.width + node.padding, node?.width || 0);\n  const totalHeight = Math.max(bbox.height + node.padding, node?.height || 0);\n  const x2 = -totalWidth / 2;\n  const y2 = -totalHeight / 2;\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  rect2.attr(\"class\", \"text\").attr(\"style\", nodeStyles).attr(\"rx\", 0).attr(\"ry\", 0).attr(\"x\", x2).attr(\"y\", y2).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(text, \"text\");\n\n// src/rendering-util/rendering-elements/shapes/tiltedCylinder.ts\nvar createCylinderPathD3 = /* @__PURE__ */ __name((x2, y2, width, height, rx, ry) => {\n  return `M${x2},${y2}\n    a${rx},${ry} 0,0,1 ${0},${-height}\n    l${width},${0}\n    a${rx},${ry} 0,0,1 ${0},${height}\n    M${width},${-height}\n    a${rx},${ry} 0,0,0 ${0},${height}\n    l${-width},${0}`;\n}, \"createCylinderPathD\");\nvar createOuterCylinderPathD3 = /* @__PURE__ */ __name((x2, y2, width, height, rx, ry) => {\n  return [\n    `M${x2},${y2}`,\n    `M${x2 + width},${y2}`,\n    `a${rx},${ry} 0,0,0 ${0},${-height}`,\n    `l${-width},0`,\n    `a${rx},${ry} 0,0,0 ${0},${height}`,\n    `l${width},0`\n  ].join(\" \");\n}, \"createOuterCylinderPathD\");\nvar createInnerCylinderPathD3 = /* @__PURE__ */ __name((x2, y2, width, height, rx, ry) => {\n  return [`M${x2 + width / 2},${-height / 2}`, `a${rx},${ry} 0,0,0 0,${height}`].join(\" \");\n}, \"createInnerCylinderPathD\");\nasync function tiltedCylinder(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label, halfPadding } = await labelHelper(\n    parent,\n    node,\n    getNodeClasses(node)\n  );\n  const labelPadding = node.look === \"neo\" ? halfPadding * 2 : halfPadding;\n  const h2 = bbox.height + labelPadding;\n  const ry = h2 / 2;\n  const rx = ry / (2.5 + h2 / 50);\n  const w2 = bbox.width + rx + labelPadding;\n  const { cssStyles } = node;\n  let cylinder2;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const outerPathData = createOuterCylinderPathD3(0, 0, w2, h2, rx, ry);\n    const innerPathData = createInnerCylinderPathD3(0, 0, w2, h2, rx, ry);\n    const outerNode = rc.path(outerPathData, userNodeOverrides(node, {}));\n    const innerLine = rc.path(innerPathData, userNodeOverrides(node, { fill: \"none\" }));\n    cylinder2 = shapeSvg.insert(() => innerLine, \":first-child\");\n    cylinder2 = shapeSvg.insert(() => outerNode, \":first-child\");\n    cylinder2.attr(\"class\", \"basic label-container\");\n    if (cssStyles) {\n      cylinder2.attr(\"style\", cssStyles);\n    }\n  } else {\n    const pathData = createCylinderPathD3(0, 0, w2, h2, rx, ry);\n    cylinder2 = shapeSvg.insert(\"path\", \":first-child\").attr(\"d\", pathData).attr(\"class\", \"basic label-container\").attr(\"style\", handleUndefinedAttr(cssStyles)).attr(\"style\", nodeStyles);\n    cylinder2.attr(\"class\", \"basic label-container\");\n    if (cssStyles) {\n      cylinder2.selectAll(\"path\").attr(\"style\", cssStyles);\n    }\n    if (nodeStyles) {\n      cylinder2.selectAll(\"path\").attr(\"style\", nodeStyles);\n    }\n  }\n  cylinder2.attr(\"label-offset-x\", rx);\n  cylinder2.attr(\"transform\", `translate(${-w2 / 2}, ${h2 / 2} )`);\n  label.attr(\n    \"transform\",\n    `translate(${-(bbox.width / 2) - rx - (bbox.x - (bbox.left ?? 0))}, ${-(bbox.height / 2) - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, cylinder2);\n  node.intersect = function(point) {\n    const pos = intersect_default.rect(node, point);\n    const y2 = pos.y - (node.y ?? 0);\n    if (ry != 0 && (Math.abs(y2) < (node.height ?? 0) / 2 || Math.abs(y2) == (node.height ?? 0) / 2 && Math.abs(pos.x - (node.x ?? 0)) > (node.width ?? 0) / 2 - rx)) {\n      let x2 = rx * rx * (1 - y2 * y2 / (ry * ry));\n      if (x2 != 0) {\n        x2 = Math.sqrt(Math.abs(x2));\n      }\n      x2 = rx - x2;\n      if (point.x - (node.x ?? 0) > 0) {\n        x2 = -x2;\n      }\n      pos.x += x2;\n    }\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(tiltedCylinder, \"tiltedCylinder\");\n\n// src/rendering-util/rendering-elements/shapes/trapezoid.ts\nasync function trapezoid(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = bbox.width + node.padding;\n  const h2 = bbox.height + node.padding;\n  const points = [\n    { x: -3 * h2 / 6, y: 0 },\n    { x: w2 + 3 * h2 / 6, y: 0 },\n    { x: w2, y: -h2 },\n    { x: 0, y: -h2 }\n  ];\n  let polygon;\n  const { cssStyles } = node;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const pathData = createPathFromPoints(points);\n    const roughNode = rc.path(pathData, options);\n    polygon = shapeSvg.insert(() => roughNode, \":first-child\").attr(\"transform\", `translate(${-w2 / 2}, ${h2 / 2})`);\n    if (cssStyles) {\n      polygon.attr(\"style\", cssStyles);\n    }\n  } else {\n    polygon = insertPolygonShape(shapeSvg, w2, h2, points);\n  }\n  if (nodeStyles) {\n    polygon.attr(\"style\", nodeStyles);\n  }\n  node.width = w2;\n  node.height = h2;\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(trapezoid, \"trapezoid\");\n\n// src/rendering-util/rendering-elements/shapes/trapezoidalPentagon.ts\nasync function trapezoidalPentagon(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const minWidth = 60, minHeight = 20;\n  const w2 = Math.max(minWidth, bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(minHeight, bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: -w2 / 2 * 0.8, y: -h2 / 2 },\n    { x: w2 / 2 * 0.8, y: -h2 / 2 },\n    { x: w2 / 2, y: -h2 / 2 * 0.6 },\n    { x: w2 / 2, y: h2 / 2 },\n    { x: -w2 / 2, y: h2 / 2 },\n    { x: -w2 / 2, y: -h2 / 2 * 0.6 }\n  ];\n  const pathData = createPathFromPoints(points);\n  const shapeNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => shapeNode, \":first-child\");\n  polygon.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, polygon);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(trapezoidalPentagon, \"trapezoidalPentagon\");\n\n// src/rendering-util/rendering-elements/shapes/triangle.ts\nasync function triangle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const useHtmlLabels = evaluate(getConfig2().flowchart?.htmlLabels);\n  const w2 = bbox.width + (node.padding ?? 0);\n  const h2 = w2 + bbox.height;\n  const tw = w2 + bbox.height;\n  const points = [\n    { x: 0, y: 0 },\n    { x: tw, y: 0 },\n    { x: tw / 2, y: -h2 }\n  ];\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const pathData = createPathFromPoints(points);\n  const roughNode = rc.path(pathData, options);\n  const polygon = shapeSvg.insert(() => roughNode, \":first-child\").attr(\"transform\", `translate(${-h2 / 2}, ${h2 / 2})`);\n  if (cssStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    polygon.selectChildren(\"path\").attr(\"style\", nodeStyles);\n  }\n  node.width = w2;\n  node.height = h2;\n  updateNodeBounds(node, polygon);\n  label.attr(\n    \"transform\",\n    `translate(${-bbox.width / 2 - (bbox.x - (bbox.left ?? 0))}, ${h2 / 2 - (bbox.height + (node.padding ?? 0) / (useHtmlLabels ? 2 : 1) - (bbox.y - (bbox.top ?? 0)))})`\n  );\n  node.intersect = function(point) {\n    log.info(\"Triangle intersect\", node, points, point);\n    return intersect_default.polygon(node, points, point);\n  };\n  return shapeSvg;\n}\n__name(triangle, \"triangle\");\n\n// src/rendering-util/rendering-elements/shapes/waveEdgedRectangle.ts\nasync function waveEdgedRectangle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const waveAmplitude = h2 / 8;\n  const finalH = h2 + waveAmplitude;\n  const { cssStyles } = node;\n  const minWidth = 70;\n  const widthDif = minWidth - w2;\n  const extraW = widthDif > 0 ? widthDif / 2 : 0;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: -w2 / 2 - extraW, y: finalH / 2 },\n    ...generateFullSineWavePoints(\n      -w2 / 2 - extraW,\n      finalH / 2,\n      w2 / 2 + extraW,\n      finalH / 2,\n      waveAmplitude,\n      0.8\n    ),\n    { x: w2 / 2 + extraW, y: -finalH / 2 },\n    { x: -w2 / 2 - extraW, y: -finalH / 2 }\n  ];\n  const waveEdgeRectPath = createPathFromPoints(points);\n  const waveEdgeRectNode = rc.path(waveEdgeRectPath, options);\n  const waveEdgeRect = shapeSvg.insert(() => waveEdgeRectNode, \":first-child\");\n  waveEdgeRect.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    waveEdgeRect.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    waveEdgeRect.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  waveEdgeRect.attr(\"transform\", `translate(0,${-waveAmplitude / 2})`);\n  label.attr(\n    \"transform\",\n    `translate(${-w2 / 2 + (node.padding ?? 0) - (bbox.x - (bbox.left ?? 0))},${-h2 / 2 + (node.padding ?? 0) - waveAmplitude - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, waveEdgeRect);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(waveEdgedRectangle, \"waveEdgedRectangle\");\n\n// src/rendering-util/rendering-elements/shapes/waveRectangle.ts\nasync function waveRectangle(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox } = await labelHelper(parent, node, getNodeClasses(node));\n  const minWidth = 100;\n  const minHeight = 50;\n  const baseWidth = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const baseHeight = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const aspectRatio = baseWidth / baseHeight;\n  let w2 = baseWidth;\n  let h2 = baseHeight;\n  if (w2 > h2 * aspectRatio) {\n    h2 = w2 / aspectRatio;\n  } else {\n    w2 = h2 * aspectRatio;\n  }\n  w2 = Math.max(w2, minWidth);\n  h2 = Math.max(h2, minHeight);\n  const waveAmplitude = Math.min(h2 * 0.2, h2 / 4);\n  const finalH = h2 + waveAmplitude * 2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const points = [\n    { x: -w2 / 2, y: finalH / 2 },\n    ...generateFullSineWavePoints(-w2 / 2, finalH / 2, w2 / 2, finalH / 2, waveAmplitude, 1),\n    { x: w2 / 2, y: -finalH / 2 },\n    ...generateFullSineWavePoints(w2 / 2, -finalH / 2, -w2 / 2, -finalH / 2, waveAmplitude, -1)\n  ];\n  const waveRectPath = createPathFromPoints(points);\n  const waveRectNode = rc.path(waveRectPath, options);\n  const waveRect = shapeSvg.insert(() => waveRectNode, \":first-child\");\n  waveRect.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    waveRect.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    waveRect.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, waveRect);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, points, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(waveRectangle, \"waveRectangle\");\n\n// src/rendering-util/rendering-elements/shapes/windowPane.ts\nasync function windowPane(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, label } = await labelHelper(parent, node, getNodeClasses(node));\n  const w2 = Math.max(bbox.width + (node.padding ?? 0) * 2, node?.width ?? 0);\n  const h2 = Math.max(bbox.height + (node.padding ?? 0) * 2, node?.height ?? 0);\n  const rectOffset = 5;\n  const x2 = -w2 / 2;\n  const y2 = -h2 / 2;\n  const { cssStyles } = node;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  const outerPathPoints = [\n    { x: x2 - rectOffset, y: y2 - rectOffset },\n    { x: x2 - rectOffset, y: y2 + h2 },\n    { x: x2 + w2, y: y2 + h2 },\n    { x: x2 + w2, y: y2 - rectOffset }\n  ];\n  const path = `M${x2 - rectOffset},${y2 - rectOffset} L${x2 + w2},${y2 - rectOffset} L${x2 + w2},${y2 + h2} L${x2 - rectOffset},${y2 + h2} L${x2 - rectOffset},${y2 - rectOffset}\n                M${x2 - rectOffset},${y2} L${x2 + w2},${y2}\n                M${x2},${y2 - rectOffset} L${x2},${y2 + h2}`;\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const no = rc.path(path, options);\n  const windowPane2 = shapeSvg.insert(() => no, \":first-child\");\n  windowPane2.attr(\"transform\", `translate(${rectOffset / 2}, ${rectOffset / 2})`);\n  windowPane2.attr(\"class\", \"basic label-container\");\n  if (cssStyles && node.look !== \"handDrawn\") {\n    windowPane2.selectAll(\"path\").attr(\"style\", cssStyles);\n  }\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    windowPane2.selectAll(\"path\").attr(\"style\", nodeStyles);\n  }\n  label.attr(\n    \"transform\",\n    `translate(${-(bbox.width / 2) + rectOffset / 2 - (bbox.x - (bbox.left ?? 0))}, ${-(bbox.height / 2) + rectOffset / 2 - (bbox.y - (bbox.top ?? 0))})`\n  );\n  updateNodeBounds(node, windowPane2);\n  node.intersect = function(point) {\n    const pos = intersect_default.polygon(node, outerPathPoints, point);\n    return pos;\n  };\n  return shapeSvg;\n}\n__name(windowPane, \"windowPane\");\n\n// src/rendering-util/rendering-elements/shapes/erBox.ts\nasync function erBox(parent, node) {\n  const entityNode = node;\n  if (entityNode.alias) {\n    node.label = entityNode.alias;\n  }\n  if (node.look === \"handDrawn\") {\n    const { themeVariables: themeVariables2 } = getConfig();\n    const { background } = themeVariables2;\n    const backgroundNode = {\n      ...node,\n      id: node.id + \"-background\",\n      look: \"default\",\n      cssStyles: [\"stroke: none\", `fill: ${background}`]\n    };\n    await erBox(parent, backgroundNode);\n  }\n  const config = getConfig();\n  node.useHtmlLabels = config.htmlLabels;\n  let PADDING = config.er?.diagramPadding ?? 10;\n  let TEXT_PADDING = config.er?.entityPadding ?? 6;\n  const { cssStyles } = node;\n  const { labelStyles, nodeStyles } = styles2String(node);\n  if (entityNode.attributes.length === 0 && node.label) {\n    const options2 = {\n      rx: 0,\n      ry: 0,\n      labelPaddingX: PADDING,\n      labelPaddingY: PADDING * 1.5,\n      classes: \"\"\n    };\n    if (calculateTextWidth(node.label, config) + options2.labelPaddingX * 2 < config.er.minEntityWidth) {\n      node.width = config.er.minEntityWidth;\n    }\n    const shapeSvg2 = await drawRect(parent, node, options2);\n    if (!evaluate(config.htmlLabels)) {\n      const textElement = shapeSvg2.select(\"text\");\n      const bbox = textElement.node()?.getBBox();\n      textElement.attr(\"transform\", `translate(${-bbox.width / 2}, 0)`);\n    }\n    return shapeSvg2;\n  }\n  if (!config.htmlLabels) {\n    PADDING *= 1.25;\n    TEXT_PADDING *= 1.25;\n  }\n  let cssClasses = getNodeClasses(node);\n  if (!cssClasses) {\n    cssClasses = \"node default\";\n  }\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", cssClasses).attr(\"id\", node.domId || node.id);\n  const nameBBox = await addText(shapeSvg, node.label ?? \"\", config, 0, 0, [\"name\"], labelStyles);\n  nameBBox.height += TEXT_PADDING;\n  let yOffset = 0;\n  const yOffsets = [];\n  const rows = [];\n  let maxTypeWidth = 0;\n  let maxNameWidth = 0;\n  let maxKeysWidth = 0;\n  let maxCommentWidth = 0;\n  let keysPresent = true;\n  let commentPresent = true;\n  for (const attribute of entityNode.attributes) {\n    const typeBBox = await addText(\n      shapeSvg,\n      attribute.type,\n      config,\n      0,\n      yOffset,\n      [\"attribute-type\"],\n      labelStyles\n    );\n    maxTypeWidth = Math.max(maxTypeWidth, typeBBox.width + PADDING);\n    const nameBBox2 = await addText(\n      shapeSvg,\n      attribute.name,\n      config,\n      0,\n      yOffset,\n      [\"attribute-name\"],\n      labelStyles\n    );\n    maxNameWidth = Math.max(maxNameWidth, nameBBox2.width + PADDING);\n    const keysBBox = await addText(\n      shapeSvg,\n      attribute.keys.join(),\n      config,\n      0,\n      yOffset,\n      [\"attribute-keys\"],\n      labelStyles\n    );\n    maxKeysWidth = Math.max(maxKeysWidth, keysBBox.width + PADDING);\n    const commentBBox = await addText(\n      shapeSvg,\n      attribute.comment,\n      config,\n      0,\n      yOffset,\n      [\"attribute-comment\"],\n      labelStyles\n    );\n    maxCommentWidth = Math.max(maxCommentWidth, commentBBox.width + PADDING);\n    const rowHeight = Math.max(typeBBox.height, nameBBox2.height, keysBBox.height, commentBBox.height) + TEXT_PADDING;\n    rows.push({ yOffset, rowHeight });\n    yOffset += rowHeight;\n  }\n  let totalWidthSections = 4;\n  if (maxKeysWidth <= PADDING) {\n    keysPresent = false;\n    maxKeysWidth = 0;\n    totalWidthSections--;\n  }\n  if (maxCommentWidth <= PADDING) {\n    commentPresent = false;\n    maxCommentWidth = 0;\n    totalWidthSections--;\n  }\n  const shapeBBox = shapeSvg.node().getBBox();\n  if (nameBBox.width + PADDING * 2 - (maxTypeWidth + maxNameWidth + maxKeysWidth + maxCommentWidth) > 0) {\n    const difference = nameBBox.width + PADDING * 2 - (maxTypeWidth + maxNameWidth + maxKeysWidth + maxCommentWidth);\n    maxTypeWidth += difference / totalWidthSections;\n    maxNameWidth += difference / totalWidthSections;\n    if (maxKeysWidth > 0) {\n      maxKeysWidth += difference / totalWidthSections;\n    }\n    if (maxCommentWidth > 0) {\n      maxCommentWidth += difference / totalWidthSections;\n    }\n  }\n  const maxWidth = maxTypeWidth + maxNameWidth + maxKeysWidth + maxCommentWidth;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  let totalShapeBBoxHeight = 0;\n  if (rows.length > 0) {\n    totalShapeBBoxHeight = rows.reduce((sum, row) => sum + (row?.rowHeight ?? 0), 0);\n  }\n  const w2 = Math.max(shapeBBox.width + PADDING * 2, node?.width || 0, maxWidth);\n  const h2 = Math.max((totalShapeBBoxHeight ?? 0) + nameBBox.height, node?.height || 0);\n  const x2 = -w2 / 2;\n  const y2 = -h2 / 2;\n  shapeSvg.selectAll(\"g:not(:first-child)\").each((_2, i2, nodes) => {\n    const text2 = select_default(nodes[i2]);\n    const transform = text2.attr(\"transform\");\n    let translateX = 0;\n    let translateY = 0;\n    if (transform) {\n      const regex = RegExp(/translate\\(([^,]+),([^)]+)\\)/);\n      const translate = regex.exec(transform);\n      if (translate) {\n        translateX = parseFloat(translate[1]);\n        translateY = parseFloat(translate[2]);\n        if (text2.attr(\"class\").includes(\"attribute-name\")) {\n          translateX += maxTypeWidth;\n        } else if (text2.attr(\"class\").includes(\"attribute-keys\")) {\n          translateX += maxTypeWidth + maxNameWidth;\n        } else if (text2.attr(\"class\").includes(\"attribute-comment\")) {\n          translateX += maxTypeWidth + maxNameWidth + maxKeysWidth;\n        }\n      }\n    }\n    text2.attr(\n      \"transform\",\n      `translate(${x2 + PADDING / 2 + translateX}, ${translateY + y2 + nameBBox.height + TEXT_PADDING / 2})`\n    );\n  });\n  shapeSvg.select(\".name\").attr(\"transform\", \"translate(\" + -nameBBox.width / 2 + \", \" + (y2 + TEXT_PADDING / 2) + \")\");\n  const roughRect = rc.rectangle(x2, y2, w2, h2, options);\n  const rect2 = shapeSvg.insert(() => roughRect, \":first-child\").attr(\"style\", cssStyles.join(\"\"));\n  const { themeVariables } = getConfig();\n  const { rowEven, rowOdd, nodeBorder } = themeVariables;\n  yOffsets.push(0);\n  for (const [i2, row] of rows.entries()) {\n    const contentRowIndex = i2 + 1;\n    const isEven = contentRowIndex % 2 === 0 && row.yOffset !== 0;\n    const roughRect2 = rc.rectangle(x2, nameBBox.height + y2 + row?.yOffset, w2, row?.rowHeight, {\n      ...options,\n      fill: isEven ? rowEven : rowOdd,\n      stroke: nodeBorder\n    });\n    shapeSvg.insert(() => roughRect2, \"g.label\").attr(\"style\", cssStyles.join(\"\")).attr(\"class\", `row-rect-${isEven ? \"even\" : \"odd\"}`);\n  }\n  let roughLine = rc.line(x2, nameBBox.height + y2, w2 + x2, nameBBox.height + y2, options);\n  shapeSvg.insert(() => roughLine).attr(\"class\", \"divider\");\n  roughLine = rc.line(maxTypeWidth + x2, nameBBox.height + y2, maxTypeWidth + x2, h2 + y2, options);\n  shapeSvg.insert(() => roughLine).attr(\"class\", \"divider\");\n  if (keysPresent) {\n    roughLine = rc.line(\n      maxTypeWidth + maxNameWidth + x2,\n      nameBBox.height + y2,\n      maxTypeWidth + maxNameWidth + x2,\n      h2 + y2,\n      options\n    );\n    shapeSvg.insert(() => roughLine).attr(\"class\", \"divider\");\n  }\n  if (commentPresent) {\n    roughLine = rc.line(\n      maxTypeWidth + maxNameWidth + maxKeysWidth + x2,\n      nameBBox.height + y2,\n      maxTypeWidth + maxNameWidth + maxKeysWidth + x2,\n      h2 + y2,\n      options\n    );\n    shapeSvg.insert(() => roughLine).attr(\"class\", \"divider\");\n  }\n  for (const yOffset2 of yOffsets) {\n    roughLine = rc.line(\n      x2,\n      nameBBox.height + y2 + yOffset2,\n      w2 + x2,\n      nameBBox.height + y2 + yOffset2,\n      options\n    );\n    shapeSvg.insert(() => roughLine).attr(\"class\", \"divider\");\n  }\n  updateNodeBounds(node, rect2);\n  if (nodeStyles && node.look !== \"handDrawn\") {\n    const allStyle = nodeStyles.split(\";\");\n    const strokeStyles = allStyle?.filter((e2) => {\n      return e2.includes(\"stroke\");\n    })?.map((s2) => `${s2}`).join(\"; \");\n    shapeSvg.selectAll(\"path\").attr(\"style\", strokeStyles ?? \"\");\n    shapeSvg.selectAll(\".row-rect-even path\").attr(\"style\", nodeStyles);\n  }\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(erBox, \"erBox\");\nasync function addText(shapeSvg, labelText, config, translateX = 0, translateY = 0, classes = [], style = \"\") {\n  const label = shapeSvg.insert(\"g\").attr(\"class\", `label ${classes.join(\" \")}`).attr(\"transform\", `translate(${translateX}, ${translateY})`).attr(\"style\", style);\n  if (labelText !== parseGenericTypes(labelText)) {\n    labelText = parseGenericTypes(labelText);\n    labelText = labelText.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n  }\n  const text2 = label.node().appendChild(\n    await createText(\n      label,\n      labelText,\n      {\n        width: calculateTextWidth(labelText, config) + 100,\n        style,\n        useHtmlLabels: config.htmlLabels\n      },\n      config\n    )\n  );\n  if (labelText.includes(\"&lt;\") || labelText.includes(\"&gt;\")) {\n    let child = text2.children[0];\n    child.textContent = child.textContent.replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\");\n    while (child.childNodes[0]) {\n      child = child.childNodes[0];\n      child.textContent = child.textContent.replaceAll(\"&lt;\", \"<\").replaceAll(\"&gt;\", \">\");\n    }\n  }\n  let bbox = text2.getBBox();\n  if (evaluate(config.htmlLabels)) {\n    const div = text2.children[0];\n    div.style.textAlign = \"start\";\n    const dv = select_default(text2);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  return bbox;\n}\n__name(addText, \"addText\");\n\n// src/diagrams/class/shapeUtil.ts\nasync function textHelper(parent, node, config, useHtmlLabels, GAP = config.class.padding ?? 12) {\n  const TEXT_PADDING = !useHtmlLabels ? 3 : 0;\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", getNodeClasses(node)).attr(\"id\", node.domId || node.id);\n  let annotationGroup = null;\n  let labelGroup = null;\n  let membersGroup = null;\n  let methodsGroup = null;\n  let annotationGroupHeight = 0;\n  let labelGroupHeight = 0;\n  let membersGroupHeight = 0;\n  annotationGroup = shapeSvg.insert(\"g\").attr(\"class\", \"annotation-group text\");\n  if (node.annotations.length > 0) {\n    const annotation = node.annotations[0];\n    await addText2(annotationGroup, { text: `\\xAB${annotation}\\xBB` }, 0);\n    const annotationGroupBBox = annotationGroup.node().getBBox();\n    annotationGroupHeight = annotationGroupBBox.height;\n  }\n  labelGroup = shapeSvg.insert(\"g\").attr(\"class\", \"label-group text\");\n  await addText2(labelGroup, node, 0, [\"font-weight: bolder\"]);\n  const labelGroupBBox = labelGroup.node().getBBox();\n  labelGroupHeight = labelGroupBBox.height;\n  membersGroup = shapeSvg.insert(\"g\").attr(\"class\", \"members-group text\");\n  let yOffset = 0;\n  for (const member of node.members) {\n    const height = await addText2(membersGroup, member, yOffset, [member.parseClassifier()]);\n    yOffset += height + TEXT_PADDING;\n  }\n  membersGroupHeight = membersGroup.node().getBBox().height;\n  if (membersGroupHeight <= 0) {\n    membersGroupHeight = GAP / 2;\n  }\n  methodsGroup = shapeSvg.insert(\"g\").attr(\"class\", \"methods-group text\");\n  let methodsYOffset = 0;\n  for (const method of node.methods) {\n    const height = await addText2(methodsGroup, method, methodsYOffset, [method.parseClassifier()]);\n    methodsYOffset += height + TEXT_PADDING;\n  }\n  let bbox = shapeSvg.node().getBBox();\n  if (annotationGroup !== null) {\n    const annotationGroupBBox = annotationGroup.node().getBBox();\n    annotationGroup.attr(\"transform\", `translate(${-annotationGroupBBox.width / 2})`);\n  }\n  labelGroup.attr(\"transform\", `translate(${-labelGroupBBox.width / 2}, ${annotationGroupHeight})`);\n  bbox = shapeSvg.node().getBBox();\n  membersGroup.attr(\n    \"transform\",\n    `translate(${0}, ${annotationGroupHeight + labelGroupHeight + GAP * 2})`\n  );\n  bbox = shapeSvg.node().getBBox();\n  methodsGroup.attr(\n    \"transform\",\n    `translate(${0}, ${annotationGroupHeight + labelGroupHeight + (membersGroupHeight ? membersGroupHeight + GAP * 4 : GAP * 2)})`\n  );\n  bbox = shapeSvg.node().getBBox();\n  return { shapeSvg, bbox };\n}\n__name(textHelper, \"textHelper\");\nasync function addText2(parentGroup, node, yOffset, styles = []) {\n  const textEl = parentGroup.insert(\"g\").attr(\"class\", \"label\").attr(\"style\", styles.join(\"; \"));\n  const config = getConfig();\n  let useHtmlLabels = \"useHtmlLabels\" in node ? node.useHtmlLabels : evaluate(config.htmlLabels) ?? true;\n  let textContent = \"\";\n  if (\"text\" in node) {\n    textContent = node.text;\n  } else {\n    textContent = node.label;\n  }\n  if (!useHtmlLabels && textContent.startsWith(\"\\\\\")) {\n    textContent = textContent.substring(1);\n  }\n  if (hasKatex(textContent)) {\n    useHtmlLabels = true;\n  }\n  const text2 = await createText(\n    textEl,\n    sanitizeText2(decodeEntities(textContent)),\n    {\n      width: calculateTextWidth(textContent, config) + 50,\n      // Add room for error when splitting text into multiple lines\n      classes: \"markdown-node-label\",\n      useHtmlLabels\n    },\n    config\n  );\n  let bbox;\n  let numberOfLines = 1;\n  if (!useHtmlLabels) {\n    if (styles.includes(\"font-weight: bolder\")) {\n      select_default(text2).selectAll(\"tspan\").attr(\"font-weight\", \"\");\n    }\n    numberOfLines = text2.children.length;\n    const textChild = text2.children[0];\n    if (text2.textContent === \"\" || text2.textContent.includes(\"&gt\")) {\n      textChild.textContent = textContent[0] + textContent.substring(1).replaceAll(\"&gt;\", \">\").replaceAll(\"&lt;\", \"<\").trim();\n      const preserveSpace = textContent[1] === \" \";\n      if (preserveSpace) {\n        textChild.textContent = textChild.textContent[0] + \" \" + textChild.textContent.substring(1);\n      }\n    }\n    if (textChild.textContent === \"undefined\") {\n      textChild.textContent = \"\";\n    }\n    bbox = text2.getBBox();\n  } else {\n    const div = text2.children[0];\n    const dv = select_default(text2);\n    numberOfLines = div.innerHTML.split(\"<br>\").length;\n    if (div.innerHTML.includes(\"</math>\")) {\n      numberOfLines += div.innerHTML.split(\"<mrow>\").length - 1;\n    }\n    const images = div.getElementsByTagName(\"img\");\n    if (images) {\n      const noImgText = textContent.replace(/<img[^>]*>/g, \"\").trim() === \"\";\n      await Promise.all(\n        [...images].map(\n          (img) => new Promise((res) => {\n            function setupImage() {\n              img.style.display = \"flex\";\n              img.style.flexDirection = \"column\";\n              if (noImgText) {\n                const bodyFontSize = config.fontSize?.toString() ?? window.getComputedStyle(document.body).fontSize;\n                const enlargingFactor = 5;\n                const width = parseInt(bodyFontSize, 10) * enlargingFactor + \"px\";\n                img.style.minWidth = width;\n                img.style.maxWidth = width;\n              } else {\n                img.style.width = \"100%\";\n              }\n              res(img);\n            }\n            __name(setupImage, \"setupImage\");\n            setTimeout(() => {\n              if (img.complete) {\n                setupImage();\n              }\n            });\n            img.addEventListener(\"error\", setupImage);\n            img.addEventListener(\"load\", setupImage);\n          })\n        )\n      );\n    }\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  textEl.attr(\"transform\", \"translate(0,\" + (-bbox.height / (2 * numberOfLines) + yOffset) + \")\");\n  return bbox.height;\n}\n__name(addText2, \"addText\");\n\n// src/rendering-util/rendering-elements/shapes/classBox.ts\nasync function classBox(parent, node) {\n  const config = getConfig2();\n  const PADDING = config.class.padding ?? 12;\n  const GAP = PADDING;\n  const useHtmlLabels = node.useHtmlLabels ?? evaluate(config.htmlLabels) ?? true;\n  const classNode = node;\n  classNode.annotations = classNode.annotations ?? [];\n  classNode.members = classNode.members ?? [];\n  classNode.methods = classNode.methods ?? [];\n  const { shapeSvg, bbox } = await textHelper(parent, node, config, useHtmlLabels, GAP);\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  node.cssStyles = classNode.styles || \"\";\n  const styles = classNode.styles?.join(\";\") || nodeStyles || \"\";\n  if (!node.cssStyles) {\n    node.cssStyles = styles.replaceAll(\"!important\", \"\").split(\";\");\n  }\n  const renderExtraBox = classNode.members.length === 0 && classNode.methods.length === 0 && !config.class?.hideEmptyMembersBox;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const w2 = bbox.width;\n  let h2 = bbox.height;\n  if (classNode.members.length === 0 && classNode.methods.length === 0) {\n    h2 += GAP;\n  } else if (classNode.members.length > 0 && classNode.methods.length === 0) {\n    h2 += GAP * 2;\n  }\n  const x2 = -w2 / 2;\n  const y2 = -h2 / 2;\n  const roughRect = rc.rectangle(\n    x2 - PADDING,\n    y2 - PADDING - (renderExtraBox ? PADDING : classNode.members.length === 0 && classNode.methods.length === 0 ? -PADDING / 2 : 0),\n    w2 + 2 * PADDING,\n    h2 + 2 * PADDING + (renderExtraBox ? PADDING * 2 : classNode.members.length === 0 && classNode.methods.length === 0 ? -PADDING : 0),\n    options\n  );\n  const rect2 = shapeSvg.insert(() => roughRect, \":first-child\");\n  rect2.attr(\"class\", \"basic label-container\");\n  const rectBBox = rect2.node().getBBox();\n  shapeSvg.selectAll(\".text\").each((_2, i2, nodes) => {\n    const text2 = select_default(nodes[i2]);\n    const transform = text2.attr(\"transform\");\n    let translateY = 0;\n    if (transform) {\n      const regex = RegExp(/translate\\(([^,]+),([^)]+)\\)/);\n      const translate = regex.exec(transform);\n      if (translate) {\n        translateY = parseFloat(translate[2]);\n      }\n    }\n    let newTranslateY = translateY + y2 + PADDING - (renderExtraBox ? PADDING : classNode.members.length === 0 && classNode.methods.length === 0 ? -PADDING / 2 : 0);\n    if (!useHtmlLabels) {\n      newTranslateY -= 4;\n    }\n    let newTranslateX = x2;\n    if (text2.attr(\"class\").includes(\"label-group\") || text2.attr(\"class\").includes(\"annotation-group\")) {\n      newTranslateX = -text2.node()?.getBBox().width / 2 || 0;\n      shapeSvg.selectAll(\"text\").each(function(_3, i3, nodes2) {\n        if (window.getComputedStyle(nodes2[i3]).textAnchor === \"middle\") {\n          newTranslateX = 0;\n        }\n      });\n    }\n    text2.attr(\"transform\", `translate(${newTranslateX}, ${newTranslateY})`);\n  });\n  const annotationGroupHeight = shapeSvg.select(\".annotation-group\").node().getBBox().height - (renderExtraBox ? PADDING / 2 : 0) || 0;\n  const labelGroupHeight = shapeSvg.select(\".label-group\").node().getBBox().height - (renderExtraBox ? PADDING / 2 : 0) || 0;\n  const membersGroupHeight = shapeSvg.select(\".members-group\").node().getBBox().height - (renderExtraBox ? PADDING / 2 : 0) || 0;\n  if (classNode.members.length > 0 || classNode.methods.length > 0 || renderExtraBox) {\n    const roughLine = rc.line(\n      rectBBox.x,\n      annotationGroupHeight + labelGroupHeight + y2 + PADDING,\n      rectBBox.x + rectBBox.width,\n      annotationGroupHeight + labelGroupHeight + y2 + PADDING,\n      options\n    );\n    const line = shapeSvg.insert(() => roughLine);\n    line.attr(\"class\", \"divider\").attr(\"style\", styles);\n  }\n  if (renderExtraBox || classNode.members.length > 0 || classNode.methods.length > 0) {\n    const roughLine = rc.line(\n      rectBBox.x,\n      annotationGroupHeight + labelGroupHeight + membersGroupHeight + y2 + GAP * 2 + PADDING,\n      rectBBox.x + rectBBox.width,\n      annotationGroupHeight + labelGroupHeight + membersGroupHeight + y2 + PADDING + GAP * 2,\n      options\n    );\n    const line = shapeSvg.insert(() => roughLine);\n    line.attr(\"class\", \"divider\").attr(\"style\", styles);\n  }\n  if (classNode.look !== \"handDrawn\") {\n    shapeSvg.selectAll(\"path\").attr(\"style\", styles);\n  }\n  rect2.select(\":nth-child(2)\").attr(\"style\", styles);\n  shapeSvg.selectAll(\".divider\").select(\"path\").attr(\"style\", styles);\n  if (node.labelStyle) {\n    shapeSvg.selectAll(\"span\").attr(\"style\", node.labelStyle);\n  } else {\n    shapeSvg.selectAll(\"span\").attr(\"style\", styles);\n  }\n  if (!useHtmlLabels) {\n    const colorRegex = RegExp(/color\\s*:\\s*([^;]*)/);\n    const match = colorRegex.exec(styles);\n    if (match) {\n      const colorStyle = match[0].replace(\"color\", \"fill\");\n      shapeSvg.selectAll(\"tspan\").attr(\"style\", colorStyle);\n    } else if (labelStyles) {\n      const match2 = colorRegex.exec(labelStyles);\n      if (match2) {\n        const colorStyle = match2[0].replace(\"color\", \"fill\");\n        shapeSvg.selectAll(\"tspan\").attr(\"style\", colorStyle);\n      }\n    }\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(classBox, \"classBox\");\n\n// src/rendering-util/rendering-elements/shapes/requirementBox.ts\nasync function requirementBox(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const requirementNode = node;\n  const elementNode = node;\n  const padding = 20;\n  const gap = 20;\n  const isRequirementNode = \"verifyMethod\" in node;\n  const classes = getNodeClasses(node);\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", classes).attr(\"id\", node.domId ?? node.id);\n  let typeHeight;\n  if (isRequirementNode) {\n    typeHeight = await addText3(\n      shapeSvg,\n      `&lt;&lt;${requirementNode.type}&gt;&gt;`,\n      0,\n      node.labelStyle\n    );\n  } else {\n    typeHeight = await addText3(shapeSvg, \"&lt;&lt;Element&gt;&gt;\", 0, node.labelStyle);\n  }\n  let accumulativeHeight = typeHeight;\n  const nameHeight = await addText3(\n    shapeSvg,\n    requirementNode.name,\n    accumulativeHeight,\n    node.labelStyle + \"; font-weight: bold;\"\n  );\n  accumulativeHeight += nameHeight + gap;\n  if (isRequirementNode) {\n    const idHeight = await addText3(\n      shapeSvg,\n      `${requirementNode.requirementId ? `ID: ${requirementNode.requirementId}` : \"\"}`,\n      accumulativeHeight,\n      node.labelStyle\n    );\n    accumulativeHeight += idHeight;\n    const textHeight = await addText3(\n      shapeSvg,\n      `${requirementNode.text ? `Text: ${requirementNode.text}` : \"\"}`,\n      accumulativeHeight,\n      node.labelStyle\n    );\n    accumulativeHeight += textHeight;\n    const riskHeight = await addText3(\n      shapeSvg,\n      `${requirementNode.risk ? `Risk: ${requirementNode.risk}` : \"\"}`,\n      accumulativeHeight,\n      node.labelStyle\n    );\n    accumulativeHeight += riskHeight;\n    await addText3(\n      shapeSvg,\n      `${requirementNode.verifyMethod ? `Verification: ${requirementNode.verifyMethod}` : \"\"}`,\n      accumulativeHeight,\n      node.labelStyle\n    );\n  } else {\n    const typeHeight2 = await addText3(\n      shapeSvg,\n      `${elementNode.type ? `Type: ${elementNode.type}` : \"\"}`,\n      accumulativeHeight,\n      node.labelStyle\n    );\n    accumulativeHeight += typeHeight2;\n    await addText3(\n      shapeSvg,\n      `${elementNode.docRef ? `Doc Ref: ${elementNode.docRef}` : \"\"}`,\n      accumulativeHeight,\n      node.labelStyle\n    );\n  }\n  const totalWidth = (shapeSvg.node()?.getBBox().width ?? 200) + padding;\n  const totalHeight = (shapeSvg.node()?.getBBox().height ?? 200) + padding;\n  const x2 = -totalWidth / 2;\n  const y2 = -totalHeight / 2;\n  const rc = at.svg(shapeSvg);\n  const options = userNodeOverrides(node, {});\n  if (node.look !== \"handDrawn\") {\n    options.roughness = 0;\n    options.fillStyle = \"solid\";\n  }\n  const roughRect = rc.rectangle(x2, y2, totalWidth, totalHeight, options);\n  const rect2 = shapeSvg.insert(() => roughRect, \":first-child\");\n  rect2.attr(\"class\", \"basic label-container\").attr(\"style\", nodeStyles);\n  shapeSvg.selectAll(\".label\").each((_2, i2, nodes) => {\n    const text2 = select_default(nodes[i2]);\n    const transform = text2.attr(\"transform\");\n    let translateX = 0;\n    let translateY = 0;\n    if (transform) {\n      const regex = RegExp(/translate\\(([^,]+),([^)]+)\\)/);\n      const translate = regex.exec(transform);\n      if (translate) {\n        translateX = parseFloat(translate[1]);\n        translateY = parseFloat(translate[2]);\n      }\n    }\n    const newTranslateY = translateY - totalHeight / 2;\n    let newTranslateX = x2 + padding / 2;\n    if (i2 === 0 || i2 === 1) {\n      newTranslateX = translateX;\n    }\n    text2.attr(\"transform\", `translate(${newTranslateX}, ${newTranslateY + padding})`);\n  });\n  if (accumulativeHeight > typeHeight + nameHeight + gap) {\n    const roughLine = rc.line(\n      x2,\n      y2 + typeHeight + nameHeight + gap,\n      x2 + totalWidth,\n      y2 + typeHeight + nameHeight + gap,\n      options\n    );\n    const dividerLine = shapeSvg.insert(() => roughLine);\n    dividerLine.attr(\"style\", nodeStyles);\n  }\n  updateNodeBounds(node, rect2);\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(requirementBox, \"requirementBox\");\nasync function addText3(parentGroup, inputText, yOffset, style = \"\") {\n  if (inputText === \"\") {\n    return 0;\n  }\n  const textEl = parentGroup.insert(\"g\").attr(\"class\", \"label\").attr(\"style\", style);\n  const config = getConfig2();\n  const useHtmlLabels = config.htmlLabels ?? true;\n  const text2 = await createText(\n    textEl,\n    sanitizeText2(decodeEntities(inputText)),\n    {\n      width: calculateTextWidth(inputText, config) + 50,\n      // Add room for error when splitting text into multiple lines\n      classes: \"markdown-node-label\",\n      useHtmlLabels,\n      style\n    },\n    config\n  );\n  let bbox;\n  if (!useHtmlLabels) {\n    const textChild = text2.children[0];\n    for (const child of textChild.children) {\n      child.textContent = child.textContent.replaceAll(\"&gt;\", \">\").replaceAll(\"&lt;\", \"<\");\n      if (style) {\n        child.setAttribute(\"style\", style);\n      }\n    }\n    bbox = text2.getBBox();\n    bbox.height += 6;\n  } else {\n    const div = text2.children[0];\n    const dv = select_default(text2);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  textEl.attr(\"transform\", `translate(${-bbox.width / 2},${-bbox.height / 2 + yOffset})`);\n  return bbox.height;\n}\n__name(addText3, \"addText\");\n\n// src/rendering-util/rendering-elements/shapes/kanbanItem.ts\nvar colorFromPriority = /* @__PURE__ */ __name((priority) => {\n  switch (priority) {\n    case \"Very High\":\n      return \"red\";\n    case \"High\":\n      return \"orange\";\n    case \"Medium\":\n      return null;\n    // no stroke\n    case \"Low\":\n      return \"blue\";\n    case \"Very Low\":\n      return \"lightblue\";\n  }\n}, \"colorFromPriority\");\nasync function kanbanItem(parent, kanbanNode, { config }) {\n  const { labelStyles, nodeStyles } = styles2String(kanbanNode);\n  kanbanNode.labelStyle = labelStyles || \"\";\n  const labelPaddingX = 10;\n  const orgWidth = kanbanNode.width;\n  kanbanNode.width = (kanbanNode.width ?? 200) - 10;\n  const {\n    shapeSvg,\n    bbox,\n    label: labelElTitle\n  } = await labelHelper(parent, kanbanNode, getNodeClasses(kanbanNode));\n  const padding = kanbanNode.padding || 10;\n  let ticketUrl = \"\";\n  let link;\n  if (\"ticket\" in kanbanNode && kanbanNode.ticket && config?.kanban?.ticketBaseUrl) {\n    ticketUrl = config?.kanban?.ticketBaseUrl.replace(\"#TICKET#\", kanbanNode.ticket);\n    link = shapeSvg.insert(\"svg:a\", \":first-child\").attr(\"class\", \"kanban-ticket-link\").attr(\"xlink:href\", ticketUrl).attr(\"target\", \"_blank\");\n  }\n  const options = {\n    useHtmlLabels: kanbanNode.useHtmlLabels,\n    labelStyle: kanbanNode.labelStyle || \"\",\n    width: kanbanNode.width,\n    img: kanbanNode.img,\n    padding: kanbanNode.padding || 8,\n    centerLabel: false\n  };\n  let labelEl, bbox2;\n  if (link) {\n    ({ label: labelEl, bbox: bbox2 } = await insertLabel(\n      link,\n      \"ticket\" in kanbanNode && kanbanNode.ticket || \"\",\n      options\n    ));\n  } else {\n    ({ label: labelEl, bbox: bbox2 } = await insertLabel(\n      shapeSvg,\n      \"ticket\" in kanbanNode && kanbanNode.ticket || \"\",\n      options\n    ));\n  }\n  const { label: labelElAssigned, bbox: bboxAssigned } = await insertLabel(\n    shapeSvg,\n    \"assigned\" in kanbanNode && kanbanNode.assigned || \"\",\n    options\n  );\n  kanbanNode.width = orgWidth;\n  const labelPaddingY = 10;\n  const totalWidth = kanbanNode?.width || 0;\n  const heightAdj = Math.max(bbox2.height, bboxAssigned.height) / 2;\n  const totalHeight = Math.max(bbox.height + labelPaddingY * 2, kanbanNode?.height || 0) + heightAdj;\n  const x2 = -totalWidth / 2;\n  const y2 = -totalHeight / 2;\n  labelElTitle.attr(\n    \"transform\",\n    \"translate(\" + (padding - totalWidth / 2) + \", \" + (-heightAdj - bbox.height / 2) + \")\"\n  );\n  labelEl.attr(\n    \"transform\",\n    \"translate(\" + (padding - totalWidth / 2) + \", \" + (-heightAdj + bbox.height / 2) + \")\"\n  );\n  labelElAssigned.attr(\n    \"transform\",\n    \"translate(\" + (padding + totalWidth / 2 - bboxAssigned.width - 2 * labelPaddingX) + \", \" + (-heightAdj + bbox.height / 2) + \")\"\n  );\n  let rect2;\n  const { rx, ry } = kanbanNode;\n  const { cssStyles } = kanbanNode;\n  if (kanbanNode.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options2 = userNodeOverrides(kanbanNode, {});\n    const roughNode = rx || ry ? rc.path(createRoundedRectPathD(x2, y2, totalWidth, totalHeight, rx || 0), options2) : rc.rectangle(x2, y2, totalWidth, totalHeight, options2);\n    rect2 = shapeSvg.insert(() => roughNode, \":first-child\");\n    rect2.attr(\"class\", \"basic label-container\").attr(\"style\", cssStyles ? cssStyles : null);\n  } else {\n    rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n    rect2.attr(\"class\", \"basic label-container __APA__\").attr(\"style\", nodeStyles).attr(\"rx\", rx ?? 5).attr(\"ry\", ry ?? 5).attr(\"x\", x2).attr(\"y\", y2).attr(\"width\", totalWidth).attr(\"height\", totalHeight);\n    const priority = \"priority\" in kanbanNode && kanbanNode.priority;\n    if (priority) {\n      const line = shapeSvg.append(\"line\");\n      const lineX = x2 + 2;\n      const y1 = y2 + Math.floor((rx ?? 0) / 2);\n      const y22 = y2 + totalHeight - Math.floor((rx ?? 0) / 2);\n      line.attr(\"x1\", lineX).attr(\"y1\", y1).attr(\"x2\", lineX).attr(\"y2\", y22).attr(\"stroke-width\", \"4\").attr(\"stroke\", colorFromPriority(priority));\n    }\n  }\n  updateNodeBounds(kanbanNode, rect2);\n  kanbanNode.height = totalHeight;\n  kanbanNode.intersect = function(point) {\n    return intersect_default.rect(kanbanNode, point);\n  };\n  return shapeSvg;\n}\n__name(kanbanItem, \"kanbanItem\");\n\n// src/rendering-util/rendering-elements/shapes/bang.ts\nasync function bang(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, halfPadding, label } = await labelHelper(\n    parent,\n    node,\n    getNodeClasses(node)\n  );\n  const w2 = bbox.width + 10 * halfPadding;\n  const h2 = bbox.height + 8 * halfPadding;\n  const r2 = 0.15 * w2;\n  const { cssStyles } = node;\n  const minWidth = bbox.width + 20;\n  const minHeight = bbox.height + 20;\n  const effectiveWidth = Math.max(w2, minWidth);\n  const effectiveHeight = Math.max(h2, minHeight);\n  label.attr(\"transform\", `translate(${-bbox.width / 2}, ${-bbox.height / 2})`);\n  let bangElem;\n  const path = `M0 0 \n    a${r2},${r2} 1 0,0 ${effectiveWidth * 0.25},${-1 * effectiveHeight * 0.1}\n    a${r2},${r2} 1 0,0 ${effectiveWidth * 0.25},${0}\n    a${r2},${r2} 1 0,0 ${effectiveWidth * 0.25},${0}\n    a${r2},${r2} 1 0,0 ${effectiveWidth * 0.25},${effectiveHeight * 0.1}\n\n    a${r2},${r2} 1 0,0 ${effectiveWidth * 0.15},${effectiveHeight * 0.33}\n    a${r2 * 0.8},${r2 * 0.8} 1 0,0 0,${effectiveHeight * 0.34}\n    a${r2},${r2} 1 0,0 ${-1 * effectiveWidth * 0.15},${effectiveHeight * 0.33}\n\n    a${r2},${r2} 1 0,0 ${-1 * effectiveWidth * 0.25},${effectiveHeight * 0.15}\n    a${r2},${r2} 1 0,0 ${-1 * effectiveWidth * 0.25},0\n    a${r2},${r2} 1 0,0 ${-1 * effectiveWidth * 0.25},0\n    a${r2},${r2} 1 0,0 ${-1 * effectiveWidth * 0.25},${-1 * effectiveHeight * 0.15}\n\n    a${r2},${r2} 1 0,0 ${-1 * effectiveWidth * 0.1},${-1 * effectiveHeight * 0.33}\n    a${r2 * 0.8},${r2 * 0.8} 1 0,0 0,${-1 * effectiveHeight * 0.34}\n    a${r2},${r2} 1 0,0 ${effectiveWidth * 0.1},${-1 * effectiveHeight * 0.33}\n  H0 V0 Z`;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const roughNode = rc.path(path, options);\n    bangElem = shapeSvg.insert(() => roughNode, \":first-child\");\n    bangElem.attr(\"class\", \"basic label-container\").attr(\"style\", handleUndefinedAttr(cssStyles));\n  } else {\n    bangElem = shapeSvg.insert(\"path\", \":first-child\").attr(\"class\", \"basic label-container\").attr(\"style\", nodeStyles).attr(\"d\", path);\n  }\n  bangElem.attr(\"transform\", `translate(${-effectiveWidth / 2}, ${-effectiveHeight / 2})`);\n  updateNodeBounds(node, bangElem);\n  node.calcIntersect = function(bounds, point) {\n    return intersect_default.rect(bounds, point);\n  };\n  node.intersect = function(point) {\n    log.info(\"Bang intersect\", node, point);\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(bang, \"bang\");\n\n// src/rendering-util/rendering-elements/shapes/cloud.ts\nasync function cloud(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, halfPadding, label } = await labelHelper(\n    parent,\n    node,\n    getNodeClasses(node)\n  );\n  const w2 = bbox.width + 2 * halfPadding;\n  const h2 = bbox.height + 2 * halfPadding;\n  const r1 = 0.15 * w2;\n  const r2 = 0.25 * w2;\n  const r3 = 0.35 * w2;\n  const r4 = 0.2 * w2;\n  const { cssStyles } = node;\n  let cloudElem;\n  const path = `M0 0 \n    a${r1},${r1} 0 0,1 ${w2 * 0.25},${-1 * w2 * 0.1}\n    a${r3},${r3} 1 0,1 ${w2 * 0.4},${-1 * w2 * 0.1}\n    a${r2},${r2} 1 0,1 ${w2 * 0.35},${w2 * 0.2}\n\n    a${r1},${r1} 1 0,1 ${w2 * 0.15},${h2 * 0.35}\n    a${r4},${r4} 1 0,1 ${-1 * w2 * 0.15},${h2 * 0.65}\n\n    a${r2},${r1} 1 0,1 ${-1 * w2 * 0.25},${w2 * 0.15}\n    a${r3},${r3} 1 0,1 ${-1 * w2 * 0.5},0\n    a${r1},${r1} 1 0,1 ${-1 * w2 * 0.25},${-1 * w2 * 0.15}\n\n    a${r1},${r1} 1 0,1 ${-1 * w2 * 0.1},${-1 * h2 * 0.35}\n    a${r4},${r4} 1 0,1 ${w2 * 0.1},${-1 * h2 * 0.65}\n  H0 V0 Z`;\n  if (node.look === \"handDrawn\") {\n    const rc = at.svg(shapeSvg);\n    const options = userNodeOverrides(node, {});\n    const roughNode = rc.path(path, options);\n    cloudElem = shapeSvg.insert(() => roughNode, \":first-child\");\n    cloudElem.attr(\"class\", \"basic label-container\").attr(\"style\", handleUndefinedAttr(cssStyles));\n  } else {\n    cloudElem = shapeSvg.insert(\"path\", \":first-child\").attr(\"class\", \"basic label-container\").attr(\"style\", nodeStyles).attr(\"d\", path);\n  }\n  label.attr(\"transform\", `translate(${-bbox.width / 2}, ${-bbox.height / 2})`);\n  cloudElem.attr(\"transform\", `translate(${-w2 / 2}, ${-h2 / 2})`);\n  updateNodeBounds(node, cloudElem);\n  node.calcIntersect = function(bounds, point) {\n    return intersect_default.rect(bounds, point);\n  };\n  node.intersect = function(point) {\n    log.info(\"Cloud intersect\", node, point);\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(cloud, \"cloud\");\n\n// src/rendering-util/rendering-elements/shapes/defaultMindmapNode.ts\nasync function defaultMindmapNode(parent, node) {\n  const { labelStyles, nodeStyles } = styles2String(node);\n  node.labelStyle = labelStyles;\n  const { shapeSvg, bbox, halfPadding, label } = await labelHelper(\n    parent,\n    node,\n    getNodeClasses(node)\n  );\n  const w2 = bbox.width + 8 * halfPadding;\n  const h2 = bbox.height + 2 * halfPadding;\n  const rd = 5;\n  const rectPath = `\n    M${-w2 / 2} ${h2 / 2 - rd}\n    v${-h2 + 2 * rd}\n    q0,-${rd} ${rd},-${rd}\n    h${w2 - 2 * rd}\n    q${rd},0 ${rd},${rd}\n    v${h2 - 2 * rd}\n    q0,${rd} -${rd},${rd}\n    h${-w2 + 2 * rd}\n    q-${rd},0 -${rd},-${rd}\n    Z\n  `;\n  const bg = shapeSvg.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + node.type).attr(\"style\", nodeStyles).attr(\"d\", rectPath);\n  shapeSvg.append(\"line\").attr(\"class\", \"node-line-\").attr(\"x1\", -w2 / 2).attr(\"y1\", h2 / 2).attr(\"x2\", w2 / 2).attr(\"y2\", h2 / 2);\n  label.attr(\"transform\", `translate(${-bbox.width / 2}, ${-bbox.height / 2})`);\n  shapeSvg.append(() => label.node());\n  updateNodeBounds(node, bg);\n  node.calcIntersect = function(bounds, point) {\n    return intersect_default.rect(bounds, point);\n  };\n  node.intersect = function(point) {\n    return intersect_default.rect(node, point);\n  };\n  return shapeSvg;\n}\n__name(defaultMindmapNode, \"defaultMindmapNode\");\n\n// src/rendering-util/rendering-elements/shapes/mindmapCircle.ts\nasync function mindmapCircle(parent, node) {\n  const options = {\n    padding: node.padding ?? 0\n  };\n  return circle(parent, node, options);\n}\n__name(mindmapCircle, \"mindmapCircle\");\n\n// src/rendering-util/rendering-elements/shapes.ts\nvar shapesDefs = [\n  {\n    semanticName: \"Process\",\n    name: \"Rectangle\",\n    shortName: \"rect\",\n    description: \"Standard process shape\",\n    aliases: [\"proc\", \"process\", \"rectangle\"],\n    internalAliases: [\"squareRect\"],\n    handler: squareRect2\n  },\n  {\n    semanticName: \"Event\",\n    name: \"Rounded Rectangle\",\n    shortName: \"rounded\",\n    description: \"Represents an event\",\n    aliases: [\"event\"],\n    internalAliases: [\"roundedRect\"],\n    handler: roundedRect\n  },\n  {\n    semanticName: \"Terminal Point\",\n    name: \"Stadium\",\n    shortName: \"stadium\",\n    description: \"Terminal point\",\n    aliases: [\"terminal\", \"pill\"],\n    handler: stadium\n  },\n  {\n    semanticName: \"Subprocess\",\n    name: \"Framed Rectangle\",\n    shortName: \"fr-rect\",\n    description: \"Subprocess\",\n    aliases: [\"subprocess\", \"subproc\", \"framed-rectangle\", \"subroutine\"],\n    handler: subroutine\n  },\n  {\n    semanticName: \"Database\",\n    name: \"Cylinder\",\n    shortName: \"cyl\",\n    description: \"Database storage\",\n    aliases: [\"db\", \"database\", \"cylinder\"],\n    handler: cylinder\n  },\n  {\n    semanticName: \"Start\",\n    name: \"Circle\",\n    shortName: \"circle\",\n    description: \"Starting point\",\n    aliases: [\"circ\"],\n    handler: circle\n  },\n  {\n    semanticName: \"Bang\",\n    name: \"Bang\",\n    shortName: \"bang\",\n    description: \"Bang\",\n    aliases: [\"bang\"],\n    handler: bang\n  },\n  {\n    semanticName: \"Cloud\",\n    name: \"Cloud\",\n    shortName: \"cloud\",\n    description: \"cloud\",\n    aliases: [\"cloud\"],\n    handler: cloud\n  },\n  {\n    semanticName: \"Decision\",\n    name: \"Diamond\",\n    shortName: \"diam\",\n    description: \"Decision-making step\",\n    aliases: [\"decision\", \"diamond\", \"question\"],\n    handler: question\n  },\n  {\n    semanticName: \"Prepare Conditional\",\n    name: \"Hexagon\",\n    shortName: \"hex\",\n    description: \"Preparation or condition step\",\n    aliases: [\"hexagon\", \"prepare\"],\n    handler: hexagon\n  },\n  {\n    semanticName: \"Data Input/Output\",\n    name: \"Lean Right\",\n    shortName: \"lean-r\",\n    description: \"Represents input or output\",\n    aliases: [\"lean-right\", \"in-out\"],\n    internalAliases: [\"lean_right\"],\n    handler: lean_right\n  },\n  {\n    semanticName: \"Data Input/Output\",\n    name: \"Lean Left\",\n    shortName: \"lean-l\",\n    description: \"Represents output or input\",\n    aliases: [\"lean-left\", \"out-in\"],\n    internalAliases: [\"lean_left\"],\n    handler: lean_left\n  },\n  {\n    semanticName: \"Priority Action\",\n    name: \"Trapezoid Base Bottom\",\n    shortName: \"trap-b\",\n    description: \"Priority action\",\n    aliases: [\"priority\", \"trapezoid-bottom\", \"trapezoid\"],\n    handler: trapezoid\n  },\n  {\n    semanticName: \"Manual Operation\",\n    name: \"Trapezoid Base Top\",\n    shortName: \"trap-t\",\n    description: \"Represents a manual task\",\n    aliases: [\"manual\", \"trapezoid-top\", \"inv-trapezoid\"],\n    internalAliases: [\"inv_trapezoid\"],\n    handler: inv_trapezoid\n  },\n  {\n    semanticName: \"Stop\",\n    name: \"Double Circle\",\n    shortName: \"dbl-circ\",\n    description: \"Represents a stop point\",\n    aliases: [\"double-circle\"],\n    internalAliases: [\"doublecircle\"],\n    handler: doublecircle\n  },\n  {\n    semanticName: \"Text Block\",\n    name: \"Text Block\",\n    shortName: \"text\",\n    description: \"Text block\",\n    handler: text\n  },\n  {\n    semanticName: \"Card\",\n    name: \"Notched Rectangle\",\n    shortName: \"notch-rect\",\n    description: \"Represents a card\",\n    aliases: [\"card\", \"notched-rectangle\"],\n    handler: card\n  },\n  {\n    semanticName: \"Lined/Shaded Process\",\n    name: \"Lined Rectangle\",\n    shortName: \"lin-rect\",\n    description: \"Lined process shape\",\n    aliases: [\"lined-rectangle\", \"lined-process\", \"lin-proc\", \"shaded-process\"],\n    handler: shadedProcess\n  },\n  {\n    semanticName: \"Start\",\n    name: \"Small Circle\",\n    shortName: \"sm-circ\",\n    description: \"Small starting point\",\n    aliases: [\"start\", \"small-circle\"],\n    internalAliases: [\"stateStart\"],\n    handler: stateStart\n  },\n  {\n    semanticName: \"Stop\",\n    name: \"Framed Circle\",\n    shortName: \"fr-circ\",\n    description: \"Stop point\",\n    aliases: [\"stop\", \"framed-circle\"],\n    internalAliases: [\"stateEnd\"],\n    handler: stateEnd\n  },\n  {\n    semanticName: \"Fork/Join\",\n    name: \"Filled Rectangle\",\n    shortName: \"fork\",\n    description: \"Fork or join in process flow\",\n    aliases: [\"join\"],\n    internalAliases: [\"forkJoin\"],\n    handler: forkJoin\n  },\n  {\n    semanticName: \"Collate\",\n    name: \"Hourglass\",\n    shortName: \"hourglass\",\n    description: \"Represents a collate operation\",\n    aliases: [\"hourglass\", \"collate\"],\n    handler: hourglass\n  },\n  {\n    semanticName: \"Comment\",\n    name: \"Curly Brace\",\n    shortName: \"brace\",\n    description: \"Adds a comment\",\n    aliases: [\"comment\", \"brace-l\"],\n    handler: curlyBraceLeft\n  },\n  {\n    semanticName: \"Comment Right\",\n    name: \"Curly Brace\",\n    shortName: \"brace-r\",\n    description: \"Adds a comment\",\n    handler: curlyBraceRight\n  },\n  {\n    semanticName: \"Comment with braces on both sides\",\n    name: \"Curly Braces\",\n    shortName: \"braces\",\n    description: \"Adds a comment\",\n    handler: curlyBraces\n  },\n  {\n    semanticName: \"Com Link\",\n    name: \"Lightning Bolt\",\n    shortName: \"bolt\",\n    description: \"Communication link\",\n    aliases: [\"com-link\", \"lightning-bolt\"],\n    handler: lightningBolt\n  },\n  {\n    semanticName: \"Document\",\n    name: \"Document\",\n    shortName: \"doc\",\n    description: \"Represents a document\",\n    aliases: [\"doc\", \"document\"],\n    handler: waveEdgedRectangle\n  },\n  {\n    semanticName: \"Delay\",\n    name: \"Half-Rounded Rectangle\",\n    shortName: \"delay\",\n    description: \"Represents a delay\",\n    aliases: [\"half-rounded-rectangle\"],\n    handler: halfRoundedRectangle\n  },\n  {\n    semanticName: \"Direct Access Storage\",\n    name: \"Horizontal Cylinder\",\n    shortName: \"h-cyl\",\n    description: \"Direct access storage\",\n    aliases: [\"das\", \"horizontal-cylinder\"],\n    handler: tiltedCylinder\n  },\n  {\n    semanticName: \"Disk Storage\",\n    name: \"Lined Cylinder\",\n    shortName: \"lin-cyl\",\n    description: \"Disk storage\",\n    aliases: [\"disk\", \"lined-cylinder\"],\n    handler: linedCylinder\n  },\n  {\n    semanticName: \"Display\",\n    name: \"Curved Trapezoid\",\n    shortName: \"curv-trap\",\n    description: \"Represents a display\",\n    aliases: [\"curved-trapezoid\", \"display\"],\n    handler: curvedTrapezoid\n  },\n  {\n    semanticName: \"Divided Process\",\n    name: \"Divided Rectangle\",\n    shortName: \"div-rect\",\n    description: \"Divided process shape\",\n    aliases: [\"div-proc\", \"divided-rectangle\", \"divided-process\"],\n    handler: dividedRectangle\n  },\n  {\n    semanticName: \"Extract\",\n    name: \"Triangle\",\n    shortName: \"tri\",\n    description: \"Extraction process\",\n    aliases: [\"extract\", \"triangle\"],\n    handler: triangle\n  },\n  {\n    semanticName: \"Internal Storage\",\n    name: \"Window Pane\",\n    shortName: \"win-pane\",\n    description: \"Internal storage\",\n    aliases: [\"internal-storage\", \"window-pane\"],\n    handler: windowPane\n  },\n  {\n    semanticName: \"Junction\",\n    name: \"Filled Circle\",\n    shortName: \"f-circ\",\n    description: \"Junction point\",\n    aliases: [\"junction\", \"filled-circle\"],\n    handler: filledCircle\n  },\n  {\n    semanticName: \"Loop Limit\",\n    name: \"Trapezoidal Pentagon\",\n    shortName: \"notch-pent\",\n    description: \"Loop limit step\",\n    aliases: [\"loop-limit\", \"notched-pentagon\"],\n    handler: trapezoidalPentagon\n  },\n  {\n    semanticName: \"Manual File\",\n    name: \"Flipped Triangle\",\n    shortName: \"flip-tri\",\n    description: \"Manual file operation\",\n    aliases: [\"manual-file\", \"flipped-triangle\"],\n    handler: flippedTriangle\n  },\n  {\n    semanticName: \"Manual Input\",\n    name: \"Sloped Rectangle\",\n    shortName: \"sl-rect\",\n    description: \"Manual input step\",\n    aliases: [\"manual-input\", \"sloped-rectangle\"],\n    handler: slopedRect\n  },\n  {\n    semanticName: \"Multi-Document\",\n    name: \"Stacked Document\",\n    shortName: \"docs\",\n    description: \"Multiple documents\",\n    aliases: [\"documents\", \"st-doc\", \"stacked-document\"],\n    handler: multiWaveEdgedRectangle\n  },\n  {\n    semanticName: \"Multi-Process\",\n    name: \"Stacked Rectangle\",\n    shortName: \"st-rect\",\n    description: \"Multiple processes\",\n    aliases: [\"procs\", \"processes\", \"stacked-rectangle\"],\n    handler: multiRect\n  },\n  {\n    semanticName: \"Stored Data\",\n    name: \"Bow Tie Rectangle\",\n    shortName: \"bow-rect\",\n    description: \"Stored data\",\n    aliases: [\"stored-data\", \"bow-tie-rectangle\"],\n    handler: bowTieRect\n  },\n  {\n    semanticName: \"Summary\",\n    name: \"Crossed Circle\",\n    shortName: \"cross-circ\",\n    description: \"Summary\",\n    aliases: [\"summary\", \"crossed-circle\"],\n    handler: crossedCircle\n  },\n  {\n    semanticName: \"Tagged Document\",\n    name: \"Tagged Document\",\n    shortName: \"tag-doc\",\n    description: \"Tagged document\",\n    aliases: [\"tag-doc\", \"tagged-document\"],\n    handler: taggedWaveEdgedRectangle\n  },\n  {\n    semanticName: \"Tagged Process\",\n    name: \"Tagged Rectangle\",\n    shortName: \"tag-rect\",\n    description: \"Tagged process\",\n    aliases: [\"tagged-rectangle\", \"tag-proc\", \"tagged-process\"],\n    handler: taggedRect\n  },\n  {\n    semanticName: \"Paper Tape\",\n    name: \"Flag\",\n    shortName: \"flag\",\n    description: \"Paper tape\",\n    aliases: [\"paper-tape\"],\n    handler: waveRectangle\n  },\n  {\n    semanticName: \"Odd\",\n    name: \"Odd\",\n    shortName: \"odd\",\n    description: \"Odd shape\",\n    internalAliases: [\"rect_left_inv_arrow\"],\n    handler: rect_left_inv_arrow\n  },\n  {\n    semanticName: \"Lined Document\",\n    name: \"Lined Document\",\n    shortName: \"lin-doc\",\n    description: \"Lined document\",\n    aliases: [\"lined-document\"],\n    handler: linedWaveEdgedRect\n  }\n];\nvar generateShapeMap = /* @__PURE__ */ __name(() => {\n  const undocumentedShapes = {\n    // States\n    state,\n    choice,\n    note,\n    // Rectangles\n    rectWithTitle,\n    labelRect,\n    // Icons\n    iconSquare,\n    iconCircle,\n    icon,\n    iconRounded,\n    imageSquare,\n    anchor,\n    // Kanban diagram\n    kanbanItem,\n    //Mindmap diagram\n    mindmapCircle,\n    defaultMindmapNode,\n    // class diagram\n    classBox,\n    // er diagram\n    erBox,\n    // Requirement diagram\n    requirementBox\n  };\n  const entries = [\n    ...Object.entries(undocumentedShapes),\n    ...shapesDefs.flatMap((shape) => {\n      const aliases = [\n        shape.shortName,\n        ...\"aliases\" in shape ? shape.aliases : [],\n        ...\"internalAliases\" in shape ? shape.internalAliases : []\n      ];\n      return aliases.map((alias) => [alias, shape.handler]);\n    })\n  ];\n  return Object.fromEntries(entries);\n}, \"generateShapeMap\");\nvar shapes2 = generateShapeMap();\nfunction isValidShape(shape) {\n  return shape in shapes2;\n}\n__name(isValidShape, \"isValidShape\");\n\n// src/rendering-util/rendering-elements/nodes.ts\nvar nodeElems = /* @__PURE__ */ new Map();\nasync function insertNode(elem, node, renderOptions) {\n  let newEl;\n  let el;\n  if (node.shape === \"rect\") {\n    if (node.rx && node.ry) {\n      node.shape = \"roundedRect\";\n    } else {\n      node.shape = \"squareRect\";\n    }\n  }\n  const shapeHandler = node.shape ? shapes2[node.shape] : void 0;\n  if (!shapeHandler) {\n    throw new Error(`No such shape: ${node.shape}. Please check your syntax.`);\n  }\n  if (node.link) {\n    let target;\n    if (renderOptions.config.securityLevel === \"sandbox\") {\n      target = \"_top\";\n    } else if (node.linkTarget) {\n      target = node.linkTarget || \"_blank\";\n    }\n    newEl = elem.insert(\"svg:a\").attr(\"xlink:href\", node.link).attr(\"target\", target ?? null);\n    el = await shapeHandler(newEl, node, renderOptions);\n  } else {\n    el = await shapeHandler(elem, node, renderOptions);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr(\"title\", node.tooltip);\n  }\n  nodeElems.set(node.id, newEl);\n  if (node.haveCallback) {\n    newEl.attr(\"class\", newEl.attr(\"class\") + \" clickable\");\n  }\n  return newEl;\n}\n__name(insertNode, \"insertNode\");\nvar setNodeElem = /* @__PURE__ */ __name((elem, node) => {\n  nodeElems.set(node.id, elem);\n}, \"setNodeElem\");\nvar clear2 = /* @__PURE__ */ __name(() => {\n  nodeElems.clear();\n}, \"clear\");\nvar positionNode = /* @__PURE__ */ __name((node) => {\n  const el = nodeElems.get(node.id);\n  log.trace(\n    \"Transforming node\",\n    node.diff,\n    node,\n    \"translate(\" + (node.x - node.width / 2 - 5) + \", \" + node.width / 2 + \")\"\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      \"transform\",\n      \"translate(\" + (node.x + diff - node.width / 2) + \", \" + (node.y - node.height / 2 - padding) + \")\"\n    );\n  } else {\n    el.attr(\"transform\", \"translate(\" + node.x + \", \" + node.y + \")\");\n  }\n  return diff;\n}, \"positionNode\");\n\nexport {\n  labelHelper,\n  updateNodeBounds,\n  at,\n  createLabel_default,\n  isValidShape,\n  insertCluster,\n  clear,\n  insertNode,\n  setNodeElem,\n  clear2,\n  positionNode\n};\n"],
  "mappings": "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",
  "names": ["_a"]
}
